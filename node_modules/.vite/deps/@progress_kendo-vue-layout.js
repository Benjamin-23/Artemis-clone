import {
  Draggable,
  Keys,
  Popup,
  classNames,
  focusFirstFocusableChild,
  getDefaultSlots,
  getDir,
  getListeners,
  getTabIndex,
  getTemplate,
  guid,
  index_esm_exports,
  isRtl,
  kendoThemeMaps,
  main_default,
  templateRendering,
  validatePackage,
  validatePackage2
} from "./chunk-LTSFIFKS.js";
import {
  vue_runtime_esm_bundler_exports
} from "./chunk-7X7NEOA6.js";

// node_modules/@progress/kendo-vue-layout/dist/es/tabstrip/TabStripNavigationItem.js
var allVue = vue_runtime_esm_bundler_exports;
var gh = allVue.h;
var TabStripNavigationItemVue2 = {
  name: "KendoTabStripNavigationItem",
  emits: {
    select: null
  },
  props: {
    active: Boolean,
    disabled: Boolean,
    index: Number,
    title: {
      type: String,
      default: "Untitled"
    },
    titleRender: [String, Function, Object],
    first: {
      type: Boolean,
      default: void 0
    },
    last: {
      type: Boolean,
      default: void 0
    }
  },
  computed: {
    itemClasses: {
      get: function get() {
        var _a2;
        var _b = this.$props, active = _b.active, disabled = _b.disabled, first = _b.first, last = _b.last;
        return _a2 = {}, _a2["k-first"] = first, _a2["k-last"] = last, _a2["k-item"] = true, _a2["k-state-disabled"] = disabled, _a2["k-state-active"] = active, _a2;
      }
    }
  },
  methods: {
    onClick: function onClick() {
      if (!this.$props.disabled) {
        this.$emit("select", this.$props.index);
      }
    }
  },
  setup: !gh ? void 0 : function() {
    var v3 = !!gh;
    return {
      v3
    };
  },
  render: function render(createElement) {
    var h = gh || createElement;
    var _a2 = this.$props, active = _a2.active, _b = _a2.title, title = _b === void 0 ? "Untitled" : _b;
    var titleRender = this.$props.titleRender;
    var titleElement = getTemplate.call(this, {
      h,
      template: titleRender,
      defaultRendering: title,
      additionalProps: this.$props,
      additionalListeners: {
        select: this.onClick
      }
    });
    return h("li", {
      "aria-selected": active,
      attrs: this.v3 ? void 0 : {
        "aria-selected": active,
        role: "tab"
      },
      role: "tab",
      onClick: this.onClick,
      on: this.v3 ? void 0 : {
        "click": this.onClick
      },
      "class": this.itemClasses
    }, [h("span", {
      "class": "k-link"
    }, [titleElement])]);
  }
};
var TabStripNavigationItem = TabStripNavigationItemVue2;

// node_modules/@progress/kendo-vue-layout/dist/es/tabstrip/TabStripNavigation.js
var allVue2 = vue_runtime_esm_bundler_exports;
var gh2 = allVue2.h;
var ref = allVue2.ref;
var inject = allVue2.inject;
var times = function times2(count) {
  return Array.apply(null, Array(count));
};
var TabStripNavigationVue2 = {
  name: "KendoTabStripNavigation",
  emits: {
    select: null,
    keydown: null
  },
  props: {
    tabs: Array,
    selected: Number,
    tabIndex: Number,
    tabPosition: String
  },
  computed: {
    wrapperNavClasses: {
      get: function get2() {
        return {
          "k-tabstrip-items-wrapper": true,
          "k-hstack": this.$props.tabPosition === "top" || this.$props.tabPosition === "bottom",
          "k-vstack": this.$props.tabPosition === "left" || this.$props.tabPosition === "right"
        };
      }
    },
    navClasses: {
      get: function get3() {
        return {
          "k-tabstrip-items": true,
          "k-reset": true
        };
      }
    }
  },
  setup: !gh2 ? void 0 : function() {
    var v3 = !!gh2;
    return {
      v3
    };
  },
  render: function render2(createElement) {
    var h = gh2 || createElement;
    var _a2 = this.$props, tabs = _a2.tabs, selected2 = _a2.selected;
    var tabsCount = tabs.length;
    var renderTabs = function renderTabs2() {
      return times(tabsCount).map(function(_, index, array) {
        return h(TabStripNavigationItem, {
          key: index,
          active: selected2 === index,
          attrs: this.v3 ? void 0 : {
            active: selected2 === index,
            disabled: tabs[index].disabled,
            index,
            title: tabs[index].title,
            titleRender: tabs[index].titleRender,
            first: index === 0,
            last: index === array.length - 1
          },
          disabled: tabs[index].disabled,
          index,
          title: tabs[index].title,
          titleRender: tabs[index].titleRender,
          first: index === 0,
          last: index === array.length - 1,
          onSelect: this.onSelect,
          on: this.v3 ? void 0 : {
            "select": this.onSelect
          }
        });
      }, this);
    };
    return h("div", {
      "class": this.wrapperNavClasses
    }, [h("ul", {
      "class": this.navClasses,
      role: "tablist",
      attrs: this.v3 ? void 0 : {
        role: "tablist",
        tabIndex: this.$props.tabIndex
      },
      tabIndex: this.$props.tabIndex,
      onKeydown: this.onKeyDown,
      on: this.v3 ? void 0 : {
        "keydown": this.onKeyDown
      }
    }, [renderTabs.call(this)])]);
  },
  methods: {
    onKeyDown: function onKeyDown(e) {
      this.$emit("keydown", e);
    },
    onSelect: function onSelect(idx) {
      this.$emit("select", idx);
    }
  }
};
var TabStripNavigation = TabStripNavigationVue2;

// node_modules/@progress/kendo-vue-layout/node_modules/@progress/kendo-vue-animation/dist/es/util.js
var outerHeight = function(element) {
  if (!element) {
    return 0;
  }
  var wnd = element.ownerDocument.defaultView;
  var computedStyles = wnd.getComputedStyle(element);
  var marginTop = parseFloat(computedStyles.marginTop);
  var marginBottom = parseFloat(computedStyles.marginBottom);
  return element.offsetHeight + marginTop + marginBottom;
};
var outerWidth = function(element) {
  if (!element) {
    return 0;
  }
  var wnd = element.ownerDocument.defaultView;
  var computedStyles = wnd.getComputedStyle(element);
  var marginLeft = parseFloat(computedStyles.marginLeft);
  var marginRight = parseFloat(computedStyles.marginRight);
  return element.offsetWidth + marginLeft + marginRight;
};
var styles = {
  "animation-container": "k-animation-container",
  "animation-container-relative": "k-animation-container-relative",
  "animation-container-fixed": "k-animation-container-fixed",
  "push-right-enter": "k-push-right-enter",
  "push-right-appear": "k-push-right-appear",
  "push-right-enter-active": "k-push-right-enter-active",
  "push-right-appear-active": "k-push-right-appear-active",
  "push-right-exit": "k-push-right-exit",
  "push-right-exit-active": "k-push-right-exit-active",
  "push-left-enter": "k-push-left-enter",
  "push-left-appear": "k-push-left-appear",
  "push-left-enter-active": "k-push-left-enter-active",
  "push-left-appear-active": "k-push-left-appear-active",
  "push-left-exit": "k-push-left-exit",
  "push-left-exit-active": "k-push-left-exit-active",
  "push-down-enter": "k-push-down-enter",
  "push-down-appear": "k-push-down-appear",
  "push-down-enter-active": "k-push-down-enter-active",
  "push-down-appear-active": "k-push-down-appear-active",
  "push-down-exit": "k-push-down-exit",
  "push-down-exit-active": "k-push-down-exit-active",
  "push-up-enter": "k-push-up-enter",
  "push-up-appear": "k-push-up-appear",
  "push-up-enter-active": "k-push-up-enter-active",
  "push-up-appear-active": "k-push-up-appear-active",
  "push-up-exit": "k-push-up-exit",
  "push-up-exit-active": "k-push-up-exit-active",
  "expand": "k-expand",
  "expand-vertical-enter": "k-expand-vertical-enter",
  "expand-vertical-appear": "k-expand-vertical-appear",
  "expand-vertical-enter-active": "k-expand-vertical-enter-active",
  "expand-vertical-appear-active": "k-expand-vertical-appear-active",
  "expand-vertical-exit": "k-expand-vertical-exit",
  "expand-vertical-exit-active": "k-expand-vertical-exit-active",
  "expand-horizontal-enter": "k-expand-horizontal-enter",
  "expand-horizontal-appear": "k-expand-horizontal-appear",
  "expand-horizontal-enter-active": "k-expand-horizontal-enter-active",
  "expand-horizontal-appear-active": "k-expand-horizontal-appear-active",
  "expand-horizontal-exit": "k-expand-horizontal-exit",
  "expand-horizontal-exit-active": "k-expand-horizontal-exit-active",
  "child-animation-container": "k-child-animation-container",
  "fade-enter": "k-fade-enter",
  "fade-appear": "k-fade-appear",
  "fade-enter-active": "k-fade-enter-active",
  "fade-appear-active": "k-fade-appear-active",
  "fade-exit": "k-fade-exit",
  "fade-exit-active": "k-fade-exit-active",
  "zoom-in-enter": "k-zoom-in-enter",
  "zoom-in-appear": "k-zoom-in-appear",
  "zoom-in-enter-active": "k-zoom-in-enter-active",
  "zoom-in-appear-active": "k-zoom-in-appear-active",
  "zoom-in-exit": "k-zoom-in-exit",
  "zoom-in-exit-active": "k-zoom-in-exit-active",
  "zoom-out-enter": "k-zoom-out-enter",
  "zoom-out-appear": "k-zoom-out-appear",
  "zoom-out-enter-active": "k-zoom-out-enter-active",
  "zoom-out-appear-active": "k-zoom-out-appear-active",
  "zoom-out-exit": "k-zoom-out-exit",
  "zoom-out-exit-active": "k-zoom-out-exit-active",
  "slide-in-appear": "k-slide-in-appear",
  "centered": "k-centered",
  "slide-in-appear-active": "k-slide-in-appear-active",
  "slide-down-enter": "k-slide-down-enter",
  "slide-down-appear": "k-slide-down-appear",
  "slide-down-enter-active": "k-slide-down-enter-active",
  "slide-down-appear-active": "k-slide-down-appear-active",
  "slide-down-exit": "k-slide-down-exit",
  "slide-down-exit-active": "k-slide-down-exit-active",
  "slide-up-enter": "k-slide-up-enter",
  "slide-up-appear": "k-slide-up-appear",
  "slide-up-enter-active": "k-slide-up-enter-active",
  "slide-up-appear-active": "k-slide-up-appear-active",
  "slide-up-exit": "k-slide-up-exit",
  "slide-up-exit-active": "k-slide-up-exit-active",
  "slide-right-enter": "k-slide-right-enter",
  "slide-right-appear": "k-slide-right-appear",
  "slide-right-enter-active": "k-slide-right-enter-active",
  "slide-right-appear-active": "k-slide-right-appear-active",
  "slide-right-exit": "k-slide-right-exit",
  "slide-right-exit-active": "k-slide-right-exit-active",
  "slide-left-enter": "k-slide-left-enter",
  "slide-left-appear": "k-slide-left-appear",
  "slide-left-enter-active": "k-slide-left-enter-active",
  "slide-left-appear-active": "k-slide-left-appear-active",
  "slide-left-exit": "k-slide-left-exit",
  "slide-left-exit-active": "k-slide-left-exit-active",
  "reveal-vertical-enter": "k-reveal-vertical-enter",
  "reveal-vertical-appear": "k-reveal-vertical-appear",
  "reveal-vertical-enter-active": "k-reveal-vertical-enter-active",
  "reveal-vertical-appear-active": "k-reveal-vertical-appear-active",
  "reveal-vertical-exit": "k-reveal-vertical-exit",
  "reveal-vertical-exit-active": "k-reveal-vertical-exit-active",
  "reveal-horizontal-enter": "k-reveal-horizontal-enter",
  "reveal-horizontal-appear": "k-reveal-horizontal-appear",
  "reveal-horizontal-enter-active": "k-reveal-horizontal-enter-active",
  "reveal-horizontal-appear-active": "k-reveal-horizontal-appear-active",
  "reveal-horizontal-exit": "k-reveal-horizontal-exit",
  "reveal-horizontal-exit-active": "k-reveal-horizontal-exit-active"
};
var util_default = {
  outerHeight,
  outerWidth,
  styles
};

// node_modules/@progress/kendo-vue-layout/node_modules/@progress/kendo-vue-animation/dist/es/AnimationChild.js
var __assign = function() {
  __assign = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s) {
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
      }
    }
    return t;
  };
  return __assign.apply(this, arguments);
};
var __rest = function(s, e) {
  var t = {};
  for (var p in s) {
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
      t[p] = s[p];
  }
  if (s != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
      if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
        t[p[i]] = s[p[i]];
    }
  return t;
};
var allVue3 = vue_runtime_esm_bundler_exports;
var gh3 = allVue3.h;
var ref2 = allVue3.ref;
var Transition = allVue3.Transition;
var styles2 = util_default.styles;
var AnimationChildVue2 = {
  props: {
    in: Boolean,
    transitionName: {
      type: String,
      required: true
    },
    transitionStyle: Object,
    componentChildClassName: [Array],
    className: String,
    appear: {
      type: Boolean,
      default: true
    },
    enter: {
      type: Boolean,
      default: true
    },
    exit: {
      type: Boolean,
      default: true
    },
    transitionEnterDuration: Number,
    transitionExitDuration: Number,
    mountOnEnter: Boolean,
    unmountOnExit: Boolean,
    animationEnteringStyle: Object,
    animationEnteredStyle: Object,
    animationExitingStyle: Object,
    animationExitedStyle: Object
  },
  created: function created() {
    this.animationStep = "";
  },
  setup: !gh3 ? void 0 : function() {
    var v3 = !!gh3;
    var elementRef = ref2(null);
    return {
      v3,
      elementRef
    };
  },
  mounted: function mounted() {
    this._element = this.v3 ? this.elementRef || null : this.$refs.element || null;
  },
  computed: {
    element: {
      get: function get4() {
        return this._element;
      }
    }
  },
  methods: {
    onBeforeEnter: function onBeforeEnter(e) {
      this.$emit("beforeenter", {
        animatedElement: e,
        target: this
      });
    },
    onEnter: function onEnter(e) {
      this.animationStep = "entering";
      this.$emit("entering", {
        animatedElement: e,
        target: this
      });
    },
    onAfterEnter: function onAfterEnter(e) {
      this.animationStep = "entered";
      this.$emit("entered", {
        animatedElement: e,
        target: this
      });
    },
    onBeforeLeave: function onBeforeLeave(e) {
      this.$emit("exit", {
        animatedElement: e,
        target: this
      });
    },
    onLeave: function onLeave(e) {
      this.animationStep = "exiting";
      this.$emit("exiting", {
        animatedElement: e,
        target: this
      });
    },
    onAfterLeave: function onAfterLeave(e) {
      this.animationStep = "exited";
      this.$emit("exited", {
        animatedElement: e,
        target: this
      });
    }
  },
  render: function render3(createElement) {
    var _this = this;
    var h = gh3 || createElement;
    var _a2 = this.$props, appear = _a2.appear, enter = _a2.enter, exit = _a2.exit, transitionName = _a2.transitionName, transitionEnterDuration = _a2.transitionEnterDuration, transitionExitDuration = _a2.transitionExitDuration, className = _a2.className, componentChildClassName = _a2.componentChildClassName, mountOnEnter = _a2.mountOnEnter, unmountOnExit = _a2.unmountOnExit, animationEnteringStyle = _a2.animationEnteringStyle, animationEnteredStyle = _a2.animationEnteredStyle, animationExitingStyle = _a2.animationExitingStyle, animationExitedStyle = _a2.animationExitedStyle, other = __rest(_a2, ["appear", "enter", "exit", "transitionName", "transitionEnterDuration", "transitionExitDuration", "className", "componentChildClassName", "mountOnEnter", "unmountOnExit", "animationEnteringStyle", "animationEnteredStyle", "animationExitingStyle", "animationExitedStyle"]);
    var defaultSlot = getDefaultSlots(this);
    var hasChildren = this.v3 ? appear : !!defaultSlot;
    var transitionTag = this.v3 ? Transition : "transition";
    var childAnimationContainerClassNames = [componentChildClassName, styles2["child-animation-container"]];
    var enterDuration = enter ? transitionEnterDuration : 0;
    var exitDuration = exit ? transitionExitDuration : 0;
    var defaultStyle = __assign({
      transitionDelay: "0ms",
      transitionDuration: hasChildren ? enterDuration + "ms" : exitDuration + "ms"
    }, this.$props.transitionStyle);
    var animationStyle = {
      entering: __assign({
        transitionDuration: enterDuration + "ms"
      }, animationEnteringStyle),
      entered: __assign({}, animationEnteredStyle),
      exiting: __assign({
        transitionDuration: exitDuration + "ms"
      }, animationExitingStyle),
      exited: __assign({}, animationExitedStyle)
    };
    var childElementStyles = [defaultStyle, animationStyle[this.animationStep]];
    var duration = {
      enter: enterDuration,
      leave: exitDuration
    };
    var rendererChildren = [hasChildren ? h("div", {
      style: childElementStyles,
      "class": childAnimationContainerClassNames,
      ref: this.v3 ? function(el) {
        _this.elementRef = el;
      } : "element"
    }, [defaultSlot]) : null];
    return h(transitionTag, {
      duration,
      attrs: this.v3 ? null : {
        duration,
        name: transitionName,
        appear,
        appearClass: styles2[transitionName + "-appear"] || transitionName + "-appear",
        appearToClass: styles2[transitionName + "-appear-active"] || transitionName + "-appear-active",
        enterClass: styles2[transitionName + "-enter"] || transitionName + "-enter",
        enterToClass: styles2[transitionName + "-enter-active"] || transitionName + "-enter-active",
        leaveClass: styles2[transitionName + "-exit"] || transitionName + "-exit",
        leaveToClass: styles2[transitionName + "-exit-active"] || transitionName + "-exit-active"
      },
      name: transitionName,
      appear,
      appearFromClass: styles2[transitionName + "-appear"] || transitionName + "-appear",
      enterFromClass: styles2[transitionName + "-enter"] || transitionName + "-enter",
      leaveFromClass: styles2[transitionName + "-exit"] || transitionName + "-exit",
      appearToClass: styles2[transitionName + "-appear-active"] || transitionName + "-appear-active",
      enterToClass: styles2[transitionName + "-enter-active"] || transitionName + "-enter-active",
      leaveToClass: styles2[transitionName + "-exit-active"] || transitionName + "-exit-active",
      onBeforeEnter: this.onBeforeEnter,
      on: this.v3 ? null : {
        "beforeEnter": this.onBeforeEnter,
        "enter": this.onEnter,
        "afterEnter": this.onAfterEnter,
        "beforeLeave": this.onBeforeLeave,
        "leave": this.onLeave,
        "afterLeave": this.onAfterLeave
      },
      onEnter: this.onEnter,
      onAfterEnter: this.onAfterEnter,
      onBeforeLeave: this.onBeforeLeave,
      onLeave: this.onLeave,
      onAfterLeave: this.onAfterLeave
    }, this.v3 ? function() {
      return rendererChildren;
    } : rendererChildren);
  }
};
var AnimationChild = AnimationChildVue2;

// node_modules/@progress/kendo-vue-layout/node_modules/@progress/kendo-vue-animation/dist/es/package-metadata.js
var packageMetadata = {
  name: "@progress/kendo-vue-animation",
  productName: "Kendo UI for Vue",
  productCodes: ["KENDOUIVUE", "KENDOUICOMPLETE"],
  publishDate: 1656415171,
  version: "",
  licensingDocsUrl: "https://www.telerik.com/kendo-vue-ui/my-license/?utm_medium=product&utm_source=kendovue&utm_campaign=kendo-ui-vue-purchase-license-keys-warning"
};

// node_modules/@progress/kendo-vue-layout/node_modules/@progress/kendo-vue-animation/dist/es/Animation.js
var __rest2 = function(s, e) {
  var t = {};
  for (var p in s) {
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
      t[p] = s[p];
  }
  if (s != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
      if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
        t[p[i]] = s[p[i]];
    }
  return t;
};
var allVue4 = vue_runtime_esm_bundler_exports;
var gh4 = allVue4.h;
var styles3 = util_default.styles;
var AnimationVue2 = {
  props: {
    childFactory: Object,
    className: String,
    tag: String,
    id: String,
    animationEnteringStyle: Object,
    animationExitingStyle: Object,
    componentChildClassName: [Array],
    transitionName: {
      type: String,
      required: true
    },
    appear: {
      type: Boolean,
      default: true
    },
    enter: {
      type: Boolean,
      default: true
    },
    exit: {
      type: Boolean,
      default: true
    },
    transitionEnterDuration: {
      type: Number
    },
    transitionExitDuration: {
      type: Number
    }
  },
  methods: {
    onEntering: function onEntering(e) {
      this.$emit("entering", e);
    },
    onEnter: function onEnter2(e) {
      this.$emit("enter", e);
    },
    onEntered: function onEntered(e) {
      this.$emit("entered", e);
    },
    onExit: function onExit(e) {
      this.$emit("exit", e);
    },
    onExiting: function onExiting(e) {
      this.$emit("exiting", e);
    },
    onExited: function onExited(e) {
      this.$emit("exited", e);
    }
  },
  setup: !gh4 ? void 0 : function() {
    var v3 = !!gh4;
    return {
      v3
    };
  },
  created: function created2() {
    validatePackage2(packageMetadata);
  },
  render: function render4(createElement) {
    var h = gh4 || createElement;
    var defaultSlot = getDefaultSlots(this);
    var _a2 = this.$props, id = _a2.id, tag = _a2.tag, className = _a2.className, childFactory2 = _a2.childFactory, stackChildren = _a2.stackChildren, componentChildStyle = _a2.componentChildStyle, componentChildClassName = _a2.componentChildClassName, other = __rest2(_a2, ["id", "tag", "className", "childFactory", "stackChildren", "componentChildStyle", "componentChildClassName"]);
    var parentDivClass = [styles3["animation-container"], styles3["animation-container-relative"], className];
    return h("div", {
      id: this.$props.id,
      attrs: this.v3 ? void 0 : {
        id: this.$props.id
      },
      "class": parentDivClass
    }, [
      h(AnimationChild, {
        key: "some",
        appear: this.$props.appear,
        attrs: this.v3 ? void 0 : {
          appear: this.$props.appear,
          enter: this.$props.enter,
          exit: this.$props.exit,
          transitionName: this.$props.transitionName,
          componentChildClassName: this.$props.componentChildClassName,
          animationEnteringStyle: this.$props.animationEnteringStyle,
          animationExitingStyle: this.$props.animationExitingStyle,
          transitionEnterDuration: this.$props.transitionEnterDuration,
          transitionExitDuration: this.$props.transitionExitDuration
        },
        enter: this.$props.enter,
        exit: this.$props.exit,
        transitionName: this.$props.transitionName,
        componentChildClassName: this.$props.componentChildClassName,
        onBeforeenter: this.onEnter,
        on: this.v3 ? void 0 : {
          "beforeenter": this.onEnter,
          "entering": this.onEntering,
          "entered": this.onEntered,
          "exit": this.onExit,
          "exiting": this.onExiting,
          "exited": this.onExited
        },
        onEntering: this.onEntering,
        onEntered: this.onEntered,
        onExit: this.onExit,
        onExiting: this.onExiting,
        onExited: this.onExited,
        animationEnteringStyle: this.$props.animationEnteringStyle,
        animationExitingStyle: this.$props.animationExitingStyle,
        transitionEnterDuration: this.$props.transitionEnterDuration,
        transitionExitDuration: this.$props.transitionExitDuration
      }, this.v3 ? function() {
        return [defaultSlot];
      } : [defaultSlot])
    ]);
  }
};
var Animation = AnimationVue2;

// node_modules/@progress/kendo-vue-layout/node_modules/@progress/kendo-vue-animation/dist/es/Fade.js
var allVue5 = vue_runtime_esm_bundler_exports;
var gh5 = allVue5.h;
var FadeVue2 = {
  props: {
    appear: {
      type: Boolean,
      default: false
    },
    enter: {
      type: Boolean,
      default: true
    },
    exit: {
      type: Boolean,
      default: false
    },
    transitionEnterDuration: {
      type: Number,
      default: 500
    },
    transitionExitDuration: {
      type: Number,
      default: 500
    },
    childFactory: Object,
    className: String,
    tag: String,
    id: String
  },
  setup: !gh5 ? void 0 : function() {
    var v3 = !!gh5;
    return {
      v3
    };
  },
  render: function render5(createElement) {
    var h = gh5 || createElement;
    var defaultSlot = getDefaultSlots(this);
    return h(Animation, {
      transitionName: "fade",
      attrs: this.v3 ? void 0 : {
        transitionName: "fade",
        appear: this.$props.appear,
        enter: this.$props.enter,
        exit: this.$props.exit,
        transitionEnterDuration: this.$props.transitionEnterDuration,
        transitionExitDuration: this.$props.transitionExitDuration
      },
      appear: this.$props.appear,
      enter: this.$props.enter,
      exit: this.$props.exit,
      transitionEnterDuration: this.$props.transitionEnterDuration,
      transitionExitDuration: this.$props.transitionExitDuration
    }, this.v3 ? function() {
      return [defaultSlot];
    } : [defaultSlot]);
  }
};
var Fade = FadeVue2;

// node_modules/@progress/kendo-vue-layout/node_modules/@progress/kendo-vue-animation/dist/es/Expand.js
var allVue6 = vue_runtime_esm_bundler_exports;
var gh6 = allVue6.h;

// node_modules/@progress/kendo-vue-layout/node_modules/@progress/kendo-vue-animation/dist/es/Push.js
var allVue7 = vue_runtime_esm_bundler_exports;
var gh7 = allVue7.h;

// node_modules/@progress/kendo-vue-layout/node_modules/@progress/kendo-vue-animation/dist/es/Slide.js
var allVue8 = vue_runtime_esm_bundler_exports;
var gh8 = allVue8.h;

// node_modules/@progress/kendo-vue-layout/node_modules/@progress/kendo-vue-animation/dist/es/Zoom.js
var allVue9 = vue_runtime_esm_bundler_exports;
var gh9 = allVue9.h;

// node_modules/@progress/kendo-vue-layout/node_modules/@progress/kendo-vue-animation/dist/es/Reveal.js
var __rest3 = function(s, e) {
  var t = {};
  for (var p in s) {
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
      t[p] = s[p];
  }
  if (s != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
      if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
        t[p[i]] = s[p[i]];
    }
  return t;
};
var allVue10 = vue_runtime_esm_bundler_exports;
var gh10 = allVue10.h;
var noop = function noop2() {
};
var RevealVue2 = {
  props: {
    appear: {
      type: Boolean,
      default: false
    },
    enter: {
      type: Boolean,
      default: true
    },
    exit: {
      type: Boolean,
      default: true
    },
    transitionEnterDuration: {
      type: Number,
      default: 300
    },
    transitionExitDuration: {
      type: Number,
      default: 300
    },
    childFactory: Object,
    className: String,
    direction: {
      type: String,
      default: "vertical"
    },
    tag: String,
    id: String
  },
  data: function data() {
    return {
      maxHeight: "",
      maxWidth: ""
    };
  },
  methods: {
    componentWillEnter: function componentWillEnter(event) {
      var onEnter3 = this.$props.onEnter;
      this.updateContainerDimensions(event.animatedElement, function() {
        if (onEnter3) {
          onEnter3.call(void 0, event);
        }
      });
    },
    componentIsEntering: function componentIsEntering(event) {
      var onEntering2 = this.$props.onEntering;
      this.updateContainerDimensions(event.animatedElement, function() {
        if (onEntering2) {
          onEntering2.call(void 0, event);
        }
      });
    },
    componentWillExit: function componentWillExit(event) {
      var onExit2 = this.$props.onExit;
      this.updateContainerDimensions(event.animatedElement, function() {
        if (onExit2) {
          onExit2.call(void 0, event);
        }
      });
    },
    updateContainerDimensions: function updateContainerDimensions(node, done) {
      if (done === void 0) {
        done = noop;
      }
      var content = node ? node.firstElementChild : null;
      if (content) {
        var newHeight = util_default.outerHeight(content);
        var newWidth = util_default.outerWidth(content);
        this.$data.maxHeight = newHeight;
        this.$data.maxWidth = newWidth;
        done();
      }
    }
  },
  computed: {
    animationEnteringStyle: {
      get: function get5() {
        var maxOffset;
        if (this.$props.direction === "vertical") {
          maxOffset = {
            maxHeight: this.maxHeight ? this.maxHeight + "px" : null
          };
        } else {
          maxOffset = {
            maxWidth: this.maxWidth ? this.maxWidth + "px" : null
          };
        }
        return {
          maxHeight: maxOffset.maxHeight,
          maxWidth: maxOffset.maxWidth
        };
      }
    }
  },
  setup: !gh10 ? void 0 : function() {
    var v3 = !!gh10;
    return {
      v3
    };
  },
  render: function render6(createElement) {
    var h = gh10 || createElement;
    var defaultSlot = getDefaultSlots(this);
    var _a2 = this.$props, direction = _a2.direction, childFactory2 = _a2.childFactory, other = __rest3(_a2, ["direction", "childFactory"]);
    var transitionName = "reveal-" + this.$props.direction;
    return h(Animation, {
      appear: this.$props.appear,
      attrs: this.v3 ? void 0 : {
        appear: this.$props.appear,
        enter: this.$props.enter,
        exit: this.$props.exit,
        transitionEnterDuration: this.$props.transitionEnterDuration,
        transitionExitDuration: this.$props.transitionExitDuration,
        animationEnteringStyle: this.animationEnteringStyle,
        transitionName
      },
      enter: this.$props.enter,
      exit: this.$props.exit,
      transitionEnterDuration: this.$props.transitionEnterDuration,
      transitionExitDuration: this.$props.transitionExitDuration,
      onEnter: this.componentWillEnter,
      on: this.v3 ? void 0 : {
        "enter": this.componentWillEnter,
        "entering": this.componentIsEntering,
        "exit": this.componentWillExit
      },
      onEntering: this.componentIsEntering,
      onExit: this.componentWillExit,
      animationEnteringStyle: this.animationEnteringStyle,
      transitionName
    }, this.v3 ? function() {
      return [defaultSlot];
    } : [defaultSlot]);
  }
};
var Reveal = RevealVue2;

// node_modules/@progress/kendo-vue-layout/dist/es/tabstrip/utils.js
var getTabs = function(curTabs, children) {
  var that = this;
  var foundTabs = [];
  children.forEach(function(child) {
    if (that.v3 && child.children && child.children.length) {
      foundTabs = getTabs.call(that, curTabs, child.children);
    }
    if (child && child.tag && child.tag.toLowerCase().indexOf("tab") !== -1 || child.type && child.type.name && child.type.name.toLowerCase().indexOf("kendotabstriptab") !== -1) {
      foundTabs.push(child);
    }
  });
  return foundTabs;
};

// node_modules/@progress/kendo-vue-layout/dist/es/tabstrip/TabStripContent.js
var allVue11 = vue_runtime_esm_bundler_exports;
var gh11 = allVue11.h;
var ref3 = allVue11.ref;
var inject2 = allVue11.inject;
var TabStripContentVue2 = {
  name: "KendoTabStripContent",
  props: {
    showAll: Boolean,
    animation: Boolean,
    tabs: Array,
    selected: Number,
    hasTabs: Boolean
  },
  created: function created3() {
    this.contentId = guid();
  },
  setup: !gh11 ? void 0 : function() {
    var v3 = !!gh11;
    return {
      v3
    };
  },
  data: function data2() {
    return {
      midAnimation: false
    };
  },
  computed: {
    animationClass: function animationClass() {
      var that = this;
      return this.tabs.map(function(_t, idx) {
        var visible = idx === that.$props.selected;
        return {
          "k-fade-appear": that.animation && !visible,
          "k-fade-enter-active": that.animation && visible
        };
      });
    }
  },
  render: function render7(createElement) {
    var h = gh11 || createElement;
    var _a2 = this.$props, tabs = _a2.tabs, selected2 = _a2.selected, showAll = _a2.showAll, hasTabs = _a2.hasTabs;
    var selectedTab = tabs && typeof selected2 === "number" && tabs[selected2];
    var defaultSlots = getDefaultSlots(this);
    var innerTabs = hasTabs ? tabs : getTabs.call(this, [], defaultSlots || []);
    var tabStyles = selected2 < innerTabs.length && selected2 > -1;
    var contentClasses = classNames({
      "k-content": tabStyles
    }, {
      "k-state-active": tabStyles
    }, selectedTab && selectedTab.contentClassName);
    var renderChild = function renderChild2(tab, idx) {
      var _this = this;
      var visible = idx === this.$props.selected;
      var animationStyle = {
        position: "initial",
        height: visible ? void 0 : "0px",
        width: visible ? void 0 : "0px"
      };
      var content = hasTabs ? getTemplate.call(this, {
        h,
        template: tab.content,
        defaultRendering: null
      }) : tab;
      return h(Fade, {
        appear: this.v3 ? true : visible,
        attrs: this.v3 ? void 0 : {
          appear: this.v3 ? true : visible,
          enter: this.$props.animation,
          exit: this.$props.keepTabsMounted
        },
        key: idx,
        "class": this.animationClass[idx],
        enter: this.$props.animation,
        exit: this.$props.keepTabsMounted,
        style: animationStyle
      }, this.v3 ? function() {
        return [h("div", {
          role: "tabpanel",
          attrs: _this.v3 ? void 0 : {
            role: "tabpanel",
            "aria-expanded": true,
            id: String(_this.contentId + idx)
          },
          "aria-expanded": true,
          id: String(_this.contentId + idx),
          key: idx
        }, [
          content
        ])];
      } : [h("div", {
        role: "tabpanel",
        attrs: _this.v3 ? void 0 : {
          role: "tabpanel",
          "aria-expanded": true,
          id: String(_this.contentId + idx)
        },
        "aria-expanded": true,
        id: String(_this.contentId + idx),
        key: idx
      }, [content])]);
    };
    var renderContent = function renderContent2() {
      return innerTabs.map(function(tab, idx) {
        return renderChild.call(this, tab, idx);
      }, this);
    };
    return h("div", {
      "class": contentClasses,
      style: this.$props.style
    }, [renderContent.call(this)]);
  }
};
var TabStripContent = TabStripContentVue2;

// node_modules/@progress/kendo-vue-layout/dist/es/package-metadata.js
var packageMetadata2 = {
  name: "@progress/kendo-vue-layout",
  productName: "Kendo UI for Vue",
  productCodes: ["KENDOUIVUE", "KENDOUICOMPLETE"],
  publishDate: 1656415381,
  version: "",
  licensingDocsUrl: "https://www.telerik.com/kendo-vue-ui/my-license/?utm_medium=product&utm_source=kendovue&utm_campaign=kendo-ui-vue-purchase-license-keys-warning"
};

// node_modules/@progress/kendo-vue-layout/dist/es/tabstrip/TabStrip.js
var __assign2 = function() {
  __assign2 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s) {
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
      }
    }
    return t;
  };
  return __assign2.apply(this, arguments);
};
var allVue12 = vue_runtime_esm_bundler_exports;
var gh12 = allVue12.h;
var ref4 = allVue12.ref;
var inject3 = allVue12.inject;
var TabStripVue2 = {
  name: "KendoTabStrip",
  emits: {
    select: null
  },
  props: {
    animation: {
      type: Boolean,
      default: true
    },
    selected: Number,
    tabContentStyle: Object,
    tabPosition: {
      type: String,
      default: "top"
    },
    tabs: {
      type: Array,
      default: void 0
    },
    tabIndex: Number,
    dir: String
  },
  data: function data3() {
    return {
      currentShowAll: true,
      currentTabs: []
    };
  },
  computed: {
    compTabs: function compTabs() {
      return this.tabs !== void 0 ? this.tabs.map(function(tab) {
        var content = templateRendering.call(this, tab.content, getListeners.call(this));
        return __assign2(__assign2({}, tab), {
          content
        });
      }, this) : this.currentTabs;
    }
  },
  provide: function provide() {
    return {
      addRenderTitle: this.addRenderTitle,
      addTab: this.addTab,
      removeTab: this.removeTab
    };
  },
  created: function created4() {
    var _a2;
    var _this = this;
    this.keyBinding = (_a2 = {}, _a2[Keys.left] = function() {
      return _this.prevNavigatableTab();
    }, _a2[Keys.right] = function() {
      return _this.nextNavigatableTab();
    }, _a2[Keys.down] = function() {
      return _this.nextNavigatableTab();
    }, _a2[Keys.up] = function() {
      return _this.prevNavigatableTab();
    }, _a2[Keys.home] = function() {
      return 0;
    }, _a2[Keys.end] = function() {
      return _this.compTabs.length - 1;
    }, _a2);
    validatePackage2(packageMetadata2);
  },
  watch: {
    selected: function selected(_prevIndex, _nextIndex) {
      if (this.$props.animation) {
        this.currentShowAll = false;
        this.$nextTick(function() {
          this.currentShowAll = true;
        });
      }
    }
  },
  methods: {
    addRenderTitle: function addRenderTitle(currentId, titleTemplate) {
      var indexToUpdate = this.compTabs.findIndex(function(e) {
        return e.id === currentId;
      });
      if (this.v3) {
        this.compTabs[indexToUpdate].titleRender = titleTemplate;
      } else {
        this.compTabs[indexToUpdate] = __assign2(__assign2({}, this.compTabs[indexToUpdate]), {
          titleRender: titleTemplate
        });
      }
    },
    addTab: function addTab(newTab) {
      this.currentTabs.push(newTab);
    },
    removeTab: function removeTab(currentId) {
      var indexToRemove = this.currentTabs.findIndex(function(e) {
        return e.id === currentId;
      });
      this.currentTabs.splice(indexToRemove, 1);
    },
    onSelect: function onSelect2(index) {
      if (this.$props.selected !== index) {
        this.$emit("select", {
          selected: index
        });
      }
    },
    onKeyDown: function onKeyDown2(event) {
      var handler;
      switch (event.keyCode) {
        case Keys.left:
          handler = this.keyBinding[this.invertKeys(Keys.left, Keys.right)];
          break;
        case Keys.right:
          handler = this.keyBinding[this.invertKeys(Keys.right, Keys.left)];
          break;
        case Keys.up:
          handler = this.keyBinding[Keys.up];
          break;
        case Keys.down:
          handler = this.keyBinding[Keys.down];
          break;
        case Keys.home:
          handler = this.keyBinding[Keys.home];
          break;
        case Keys.end:
          handler = this.keyBinding[Keys.end];
          break;
        default:
          break;
      }
      if (handler) {
        event.preventDefault();
        this.onSelect(handler());
      }
    },
    invertKeys: function invertKeys(original, inverted) {
      var rtl = this.$el && getComputedStyle(this.$el).direction === "rtl" || false;
      return rtl ? inverted : original;
    },
    firstNavigatableTab: function firstNavigatableTab() {
      var length = this.compTabs.length;
      if (length) {
        for (var i = 0; i < length; i++) {
          if (!this.compTabs[i].disabled) {
            return i;
          }
        }
      }
    },
    lastNavigatableTab: function lastNavigatableTab() {
      var length = this.compTabs.length;
      if (length) {
        for (var i = length - 1; i > 0; i--) {
          if (!this.compTabs[i].disabled) {
            return i;
          }
        }
      }
    },
    prevNavigatableTab: function prevNavigatableTab() {
      var length = this.compTabs.length;
      var selected2 = this.$props.selected;
      var index = selected2 ? selected2 - 1 : -1;
      if (index < 0) {
        return this.lastNavigatableTab();
      }
      if (length) {
        for (var i = index; i > -1; i--) {
          if (!this.compTabs[i].disabled) {
            return i;
          }
          if (i === 0) {
            return this.lastNavigatableTab();
          }
        }
      }
    },
    nextNavigatableTab: function nextNavigatableTab() {
      var length = this.compTabs.length;
      var selected2 = this.$props.selected;
      var index = selected2 ? selected2 + 1 : 1;
      if (index >= length) {
        return this.firstNavigatableTab();
      }
      if (length) {
        for (var i = index; i < length; i++) {
          if (!this.compTabs[i].disabled) {
            return i;
          }
          if (i + 1 === length) {
            return this.firstNavigatableTab();
          }
        }
      }
    }
  },
  setup: !gh12 ? void 0 : function() {
    var v3 = !!gh12;
    return {
      v3
    };
  },
  render: function render8(createElement) {
    var _a2;
    var h = gh12 || createElement;
    var _b = this.$props, tabPosition = _b.tabPosition, _c = _b.tabIndex, tabIndex = _c === void 0 ? 0 : _c;
    var bottom = tabPosition === "bottom";
    var componentClasses = classNames("k-widget", "k-header", "k-floatwrap", "k-tabstrip", (_a2 = {}, _a2["k-tabstrip-left"] = tabPosition === "left", _a2["k-tabstrip-right"] = tabPosition === "right", _a2["k-tabstrip-bottom"] = tabPosition === "bottom", _a2["k-tabstrip-top"] = tabPosition === "top", _a2));
    var renderContent = function renderContent2(currentTabProps) {
      var selected2 = currentTabProps.selected, tabContentStyle = currentTabProps.tabContentStyle;
      var defaultSlots = getDefaultSlots(this);
      var tabContentProps = {
        index: selected2,
        animation: this.$props.animation,
        tabs: this.compTabs,
        hasTabs: this.tabs !== void 0,
        selected: selected2,
        tabContentStyle,
        showAll: this.currentShowAll
      };
      return h(TabStripContent, __assign2(__assign2({}, tabContentProps), {
        attrs: this.v3 ? void 0 : __assign2({}, tabContentProps)
      }), this.v3 ? function() {
        return defaultSlots;
      } : [defaultSlots]);
    };
    return h("div", {
      dir: this.$props.dir,
      attrs: this.v3 ? void 0 : {
        dir: this.$props.dir
      },
      "class": componentClasses
    }, [!bottom && h(TabStripNavigation, {
      tabs: this.compTabs,
      attrs: this.v3 ? void 0 : {
        tabs: this.compTabs,
        selected: this.$props.selected,
        tabContentStyle: this.$props.tabContentStyle,
        tabIndex
      },
      selected: this.$props.selected,
      tabContentStyle: this.$props.tabContentStyle,
      onSelect: this.onSelect,
      on: this.v3 ? void 0 : {
        "select": this.onSelect,
        "keydown": this.onKeyDown
      },
      onKeydown: this.onKeyDown,
      tabIndex
    }), renderContent.call(this, this.$props), bottom && h(TabStripNavigation, {
      tabs: this.compTabs,
      attrs: this.v3 ? void 0 : {
        tabs: this.compTabs,
        selected: this.$props.selected,
        tabContentStyle: this.$props.tabContentStyle,
        tabIndex
      },
      selected: this.$props.selected,
      tabContentStyle: this.$props.tabContentStyle,
      onSelect: this.onSelect,
      on: this.v3 ? void 0 : {
        "select": this.onSelect,
        "keydown": this.onKeyDown
      },
      onKeydown: this.onKeyDown,
      tabIndex
    })]);
  }
};
var TabStrip = TabStripVue2;

// node_modules/@progress/kendo-vue-layout/dist/es/tabstrip/TabStripTab.js
var allVue13 = vue_runtime_esm_bundler_exports;
var gh13 = allVue13.h;
var ref5 = allVue13.ref;
var inject4 = allVue13.inject;
var TabStripTabVue2 = {
  name: "KendoTabStripTab",
  props: {
    disabled: Boolean,
    contentClassName: String,
    title: String,
    titleRender: [String, Function, Object]
  },
  inject: {
    addRenderTitle: {
      default: null
    },
    addTab: {
      default: null
    },
    removeTab: {
      default: null
    }
  },
  created: function created5() {
    this.tabId = guid();
    this.addTab({
      title: this.$props.title,
      id: this.tabId,
      disabled: this.$props.disabled,
      contentClassName: this.$props.contentClassName
    });
  },
  destroyed: !!gh13 ? void 0 : function() {
    this.removeTab(this.tabId);
  },
  unmounted: function unmounted() {
    this.removeTab(this.tabId);
  },
  setup: !gh13 ? void 0 : function() {
    var v3 = !!gh13;
    return {
      v3
    };
  },
  render: function render9(createElement) {
    var h = gh13 || createElement;
    var titleRender = this.$props.titleRender ? templateRendering.call(this, this.$props.titleRender, getListeners.call(this)) : null;
    if (titleRender) {
      this.addRenderTitle(this.tabId, titleRender);
    }
    return h("div", [getDefaultSlots(this)]);
  }
};
var TabStripTab = TabStripTabVue2;

// node_modules/@progress/kendo-vue-layout/dist/es/card/interfaces/Enums.js
var avatarShape;
(function(avatarShape2) {
  avatarShape2["CIRCLE"] = "circle";
  avatarShape2["SQUARE"] = "square";
  avatarShape2["ROUNDED"] = "rounded";
  avatarShape2["RECTANGLE"] = "rectangle";
})(avatarShape || (avatarShape = {}));
var avatarType;
(function(avatarType2) {
  avatarType2["TEXT"] = "text";
  avatarType2["IMAGE"] = "image";
  avatarType2["ICON"] = "icon";
})(avatarType || (avatarType = {}));
var cardOrientation;
(function(cardOrientation2) {
  cardOrientation2["HORIZONTAL"] = "horizontal";
  cardOrientation2["VERTICAL"] = "vertical";
})(cardOrientation || (cardOrientation = {}));
var cardType;
(function(cardType2) {
  cardType2["DEFAULT"] = "default";
  cardType2["primary"] = "primary";
  cardType2["INFO"] = "info";
  cardType2["SUCCESS"] = "success";
  cardType2["WARNING"] = "warning";
  cardType2["ERROR"] = "error";
})(cardType || (cardType = {}));
var cardActionsLayout;
(function(cardActionsLayout2) {
  cardActionsLayout2["START"] = "start";
  cardActionsLayout2["CENTER"] = "center";
  cardActionsLayout2["END"] = "end";
  cardActionsLayout2["STRETCHED"] = "stretched";
})(cardActionsLayout || (cardActionsLayout = {}));

// node_modules/@progress/kendo-vue-layout/dist/es/card/Card.js
var allVue14 = vue_runtime_esm_bundler_exports;
var gh14 = allVue14.h;
var CardVue2 = {
  name: "KendoCard",
  props: {
    dir: String,
    type: {
      type: String,
      default: cardType.DEFAULT,
      validator: function validator(value3) {
        return ["default", "primary", "info", "success", "warning", "error"].includes(value3);
      }
    },
    orientation: {
      type: String,
      default: cardOrientation.VERTICAL,
      validator: function validator2(value3) {
        return ["horizontal", "vertical"].includes(value3);
      }
    }
  },
  created: function created6() {
    validatePackage2(packageMetadata2);
  },
  setup: !gh14 ? void 0 : function() {
    var v3 = !!gh14;
    return {
      v3
    };
  },
  computed: {
    wrapperClass: function wrapperClass() {
      var _a2;
      var orientationClass = this.$props.orientation !== cardOrientation.HORIZONTAL ? "vertical" : "horizontal";
      return _a2 = {
        "k-card": true
      }, _a2["k-card-" + this.$props.type] = this.$props.type !== cardType.DEFAULT, _a2["k-card-" + orientationClass] = true, _a2;
    }
  },
  render: function render10(createElement) {
    var h = gh14 || createElement;
    var defaultSlots = getDefaultSlots(this);
    return h("div", {
      dir: this.$props.dir,
      attrs: this.v3 ? void 0 : {
        dir: this.$props.dir
      },
      "class": this.wrapperClass
    }, [defaultSlots]);
  }
};
var Card = CardVue2;

// node_modules/@progress/kendo-vue-layout/dist/es/card/CardHeader.js
var allVue15 = vue_runtime_esm_bundler_exports;
var gh15 = allVue15.h;
var CardHeaderVue2 = {
  name: "KendoCardHeader",
  setup: !gh15 ? void 0 : function() {
    var v3 = !!gh15;
    return {
      v3
    };
  },
  render: function render11(createElement) {
    var h = gh15 || createElement;
    var defaultSlots = getDefaultSlots(this);
    return h("div", {
      "class": "k-card-header"
    }, [defaultSlots]);
  }
};
var CardHeader = CardHeaderVue2;

// node_modules/@progress/kendo-vue-layout/dist/es/card/CardTitle.js
var allVue16 = vue_runtime_esm_bundler_exports;
var gh16 = allVue16.h;
var CardTitleVue2 = {
  name: "KendoCardTitle",
  setup: !gh16 ? void 0 : function() {
    var v3 = !!gh16;
    return {
      v3
    };
  },
  render: function render12(createElement) {
    var h = gh16 || createElement;
    var defaultSlots = getDefaultSlots(this);
    return h("div", {
      "class": "k-card-title"
    }, [defaultSlots]);
  }
};
var CardTitle = CardTitleVue2;

// node_modules/@progress/kendo-vue-layout/dist/es/card/CardBody.js
var allVue17 = vue_runtime_esm_bundler_exports;
var gh17 = allVue17.h;
var CardBodyVue2 = {
  name: "KendoCardBody",
  setup: !gh17 ? void 0 : function() {
    var v3 = !!gh17;
    return {
      v3
    };
  },
  render: function render13(createElement) {
    var h = gh17 || createElement;
    var defaultSlots = getDefaultSlots(this);
    return h("div", {
      "class": "k-card-body"
    }, [defaultSlots]);
  }
};
var CardBody = CardBodyVue2;

// node_modules/@progress/kendo-vue-layout/dist/es/card/CardActions.js
var allVue18 = vue_runtime_esm_bundler_exports;
var gh18 = allVue18.h;
var CardActionsVue2 = {
  name: "KendoCardActions",
  props: {
    layout: {
      type: String,
      default: cardActionsLayout.START,
      validator: function validator3(value3) {
        return ["stretched", "start", "center", "end"].includes(value3);
      }
    },
    orientation: {
      type: String,
      default: cardOrientation.HORIZONTAL,
      validator: function validator4(value3) {
        return ["horizontal", "vertical"].includes(value3);
      }
    }
  },
  setup: !gh18 ? void 0 : function() {
    var v3 = !!gh18;
    return {
      v3
    };
  },
  computed: {
    wrapperClass: function wrapperClass2() {
      var _a2;
      return _a2 = {
        "k-card-actions": true
      }, _a2["k-card-actions-" + this.$props.layout] = true, _a2["k-card-actions-" + (this.$props.orientation !== cardOrientation.HORIZONTAL ? "vertical" : "horizontal")] = true, _a2;
    }
  },
  render: function render14(createElement) {
    var h = gh18 || createElement;
    var defaultSlots = getDefaultSlots(this);
    return h("div", {
      "class": this.wrapperClass
    }, [defaultSlots]);
  }
};
var CardActions = CardActionsVue2;

// node_modules/@progress/kendo-vue-layout/dist/es/card/CardImage.js
var allVue19 = vue_runtime_esm_bundler_exports;
var gh19 = allVue19.h;
var CardImageVue2 = {
  name: "KendoCardImage",
  props: {
    src: String
  },
  setup: !gh19 ? void 0 : function() {
    var v3 = !!gh19;
    return {
      v3
    };
  },
  render: function render15(createElement) {
    var h = gh19 || createElement;
    var defaultSlots = getDefaultSlots(this);
    return h("img", {
      "class": "k-card-image",
      src: this.$props.src,
      attrs: this.v3 ? void 0 : {
        src: this.$props.src
      }
    });
  }
};
var CardImage = CardImageVue2;

// node_modules/@progress/kendo-vue-layout/dist/es/card/CardSubtitle.js
var allVue20 = vue_runtime_esm_bundler_exports;
var gh20 = allVue20.h;
var CardSubtitleVue2 = {
  name: "KendoCardSubtitle",
  setup: !gh20 ? void 0 : function() {
    var v3 = !!gh20;
    return {
      v3
    };
  },
  render: function render16(createElement) {
    var h = gh20 || createElement;
    var defaultSlots = getDefaultSlots(this);
    return h("div", {
      "class": "k-card-subtitle"
    }, [defaultSlots]);
  }
};
var CardSubtitle = CardSubtitleVue2;

// node_modules/@progress/kendo-vue-layout/dist/es/card/CardFooter.js
var allVue21 = vue_runtime_esm_bundler_exports;
var gh21 = allVue21.h;
var CardFooterVue2 = {
  name: "KendoCardFooter",
  setup: !gh21 ? void 0 : function() {
    var v3 = !!gh21;
    return {
      v3
    };
  },
  render: function render17(createElement) {
    var h = gh21 || createElement;
    var defaultSlots = getDefaultSlots(this);
    return h("div", {
      "class": "k-card-footer"
    }, [defaultSlots]);
  }
};
var CardFooter = CardFooterVue2;

// node_modules/@progress/kendo-vue-layout/dist/es/card/Avatar.js
var allVue22 = vue_runtime_esm_bundler_exports;
var gh22 = allVue22.h;
var AvatarVue2 = {
  name: "KendoAvatar",
  props: {
    type: {
      type: String,
      default: avatarType.TEXT,
      validator: function validator5(value3) {
        return ["text", "image", "icon"].includes(value3);
      }
    },
    border: Boolean,
    rounded: {
      type: String,
      default: "medium",
      validator: function validator6(value3) {
        return ["small", "medium", "large", "full"].includes(value3);
      }
    },
    fillMode: {
      type: String,
      default: "solid",
      validator: function validator7(value3) {
        return ["solid", "outline"].includes(value3);
      }
    },
    size: {
      type: String,
      default: "medium",
      validator: function validator8(value3) {
        return ["small", "medium", "large"].includes(value3);
      }
    },
    themeColor: {
      type: String,
      default: "primary",
      validator: function validator9(value3) {
        return ["primary", "secondary", "tertiary", "info", "success", "warning", "error", "dark", "light", "inverse", "inherit"].includes(value3);
      }
    }
  },
  created: function created7() {
    validatePackage2(packageMetadata2);
  },
  setup: !gh22 ? void 0 : function() {
    var v3 = !!gh22;
    return {
      v3
    };
  },
  computed: {
    wrapperClass: function wrapperClass3() {
      var _a2;
      var _b = this.$props, border = _b.border, type = _b.type, size = _b.size, rounded = _b.rounded, fillMode = _b.fillMode, themeColor = _b.themeColor;
      return _a2 = {
        "k-avatar-bordered": border,
        "k-avatar": true
      }, _a2["k-avatar-" + (kendoThemeMaps.sizeMap[size] || size)] = size, _a2["k-rounded-" + (kendoThemeMaps.roundedMap[rounded] || rounded)] = rounded, _a2["k-avatar-" + fillMode] = fillMode, _a2["k-avatar-" + fillMode + "-" + themeColor] = Boolean(fillMode && themeColor), _a2;
    },
    innerClass: function innerClass() {
      var _a2;
      return _a2 = {}, _a2["k-avatar-" + this.$props.type] = this.$props.type, _a2;
    }
  },
  render: function render18(createElement) {
    var h = gh22 || createElement;
    var defaultSlots = getDefaultSlots(this);
    return h("div", {
      "class": this.wrapperClass
    }, [h("span", {
      "class": this.innerClass
    }, [defaultSlots])]);
  }
};
var Avatar = AvatarVue2;

// node_modules/@progress/kendo-vue-layout/dist/es/drawer/DrawerItem.js
var __assign3 = function() {
  __assign3 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s) {
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
      }
    }
    return t;
  };
  return __assign3.apply(this, arguments);
};
var allVue23 = vue_runtime_esm_bundler_exports;
var gh23 = allVue23.h;
var DrawerItemVue2 = {
  name: "KendoDrawerItem",
  emits: {
    click: null
  },
  props: {
    index: Number,
    text: String,
    icon: String,
    separator: Boolean,
    selected: Boolean,
    disabled: Boolean,
    targetItem: [Object, Array]
  },
  inject: {
    kendoDrawer: {
      default: null
    }
  },
  computed: {
    itemClassNames: function itemClassNames() {
      var _a2 = this.$props, disabled = _a2.disabled, selected2 = _a2.selected;
      return {
        "k-drawer-item": true,
        "k-state-selected": selected2,
        "k-state-disabled": disabled
      };
    }
  },
  setup: !gh23 ? void 0 : function() {
    var v3 = !!gh23;
    return {
      v3
    };
  },
  render: function render19(createElement) {
    var h = gh23 || createElement;
    var defaultSlot = getDefaultSlots(this);
    var _a2 = this.$props, text = _a2.text, icon = _a2.icon, separator = _a2.separator, disabled = _a2.disabled, selected2 = _a2.selected, tabIndex = _a2.tabIndex;
    var _b = this.kendoDrawer, expanded = _b.expanded, mini = _b.mini, item = _b.item;
    return separator ? h("li", {
      "class": "k-drawer-item k-drawer-separator",
      role: "presentation",
      attrs: this.v3 ? void 0 : {
        role: "presentation"
      }
    }) : h("li", {
      "class": this.itemClassNames,
      role: "option",
      attrs: this.v3 ? void 0 : {
        role: "option",
        "aria-selected": selected2,
        "aria-disabled": disabled,
        tabIndex: getTabIndex(tabIndex, disabled)
      },
      "aria-selected": selected2,
      "aria-disabled": disabled,
      onClick: this.handleClick,
      on: this.v3 ? void 0 : {
        "click": this.handleClick
      },
      tabIndex: getTabIndex(tabIndex, disabled)
    }, [!item ? [icon && h("span", {
      "class": "k-icon " + icon
    }), !expanded && mini ? null : h("span", {
      "class": "k-item-text"
    }, [text])] : defaultSlot]);
  },
  methods: {
    focus: function focus(e) {
      if (this.$el) {
        this.$el.focus(e);
      }
    },
    handleClick: function handleClick() {
      if (!this.disabled) {
        var handle = {
          element: this.$el,
          focus: this.focus,
          props: __assign3(__assign3({}, this.$props), this.$attrs)
        };
        this.$emit("click", handle, this.$props.index);
      }
    }
  }
};
var DrawerItem = DrawerItemVue2;

// node_modules/@progress/kendo-vue-layout/dist/es/drawer/DrawerNavigation.js
var __assign4 = function() {
  __assign4 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s) {
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
      }
    }
    return t;
  };
  return __assign4.apply(this, arguments);
};
var allVue24 = vue_runtime_esm_bundler_exports;
var gh24 = allVue24.h;
var DEFAULT_EXPANDED_WIDTH = 240;
var DEFAULT_MINI_WIDTH = 50;
var DEFAULT_ANIMATION = {
  type: "slide",
  duration: 200
};
var NO_ANIMATION = {
  type: "slide",
  duration: 0
};
var DrawerNavigationVue2 = {
  name: "KendoDrawerNavigation",
  props: {
    item: [Object],
    tabIndex: Number
  },
  inject: {
    kendoDrawer: {
      default: null
    }
  },
  computed: {
    navigationClassNames: function navigationClassNames() {
      var position = this.kendoDrawer.position;
      return {
        "k-widget k-drawer": true,
        "k-drawer-start": position === "start",
        "k-drawer-end": position === "end"
      };
    }
  },
  setup: !gh24 ? void 0 : function() {
    var v3 = !!gh24;
    return {
      v3
    };
  },
  render: function render20(createElement) {
    var h = gh24 || createElement;
    var defaultSlot = getDefaultSlots(this);
    var _a2 = this.kendoDrawer, animation = _a2.animation, expanded = _a2.expanded, mode = _a2.mode, position = _a2.position, mini = _a2.mini, dir = _a2.dir, width = _a2.width, miniWidth = _a2.miniWidth, items = _a2.items;
    var customSettings = typeof animation !== "boolean" ? animation : animation === false ? NO_ANIMATION : DEFAULT_ANIMATION;
    var navWidth = width ? width : DEFAULT_EXPANDED_WIDTH;
    var navMiniWidth = miniWidth ? miniWidth : DEFAULT_MINI_WIDTH;
    var expandPush = {
      opacity: 1,
      flexBasis: navWidth + "px",
      WebkitTransition: "all " + (customSettings && customSettings.duration) + "ms",
      transition: "all " + (customSettings && customSettings.duration) + "ms"
    };
    var expandOverlay = {
      opacity: 1,
      transform: "translateX(0px)",
      WebkitTransition: "all " + (customSettings && customSettings.duration) + "ms",
      transition: "all " + (customSettings && customSettings.duration) + "ms"
    };
    var collapsePush = {
      opacity: !mini ? 0 : 1,
      flexBasis: !mini ? 0 : navMiniWidth + "px",
      WebkitTransition: "all " + (customSettings && customSettings.duration) + "ms",
      transition: "all " + (customSettings && customSettings.duration) + "ms"
    };
    var collapseOverlay = {
      opacity: 0,
      transform: "translateX(-100%)",
      WebkitTransition: "all " + (customSettings && customSettings.duration) + "ms",
      transition: "all " + (customSettings && customSettings.duration) + "ms"
    };
    var collapseOverlayRtl = {
      opacity: 0,
      transform: "translateX(100%)",
      WebkitTransition: "all " + (customSettings && customSettings.duration) + "ms",
      transition: "all " + (customSettings && customSettings.duration) + "ms"
    };
    var collapseOverlayMini = {
      transform: "translateX(0%)",
      WebkitTransitionDuration: (customSettings && customSettings.duration) + "ms",
      transitionDuration: (customSettings && customSettings.duration) + "ms"
    };
    var drawerAnimation = expanded ? mode === "push" ? expandPush : expandOverlay : mode === "push" ? collapsePush : dir === "ltr" && position === "start" || dir === "rtl" && position === "end" ? mini ? collapseOverlayMini : collapseOverlay : mini ? collapseOverlayMini : collapseOverlayRtl;
    var drawerItems = items && h("ul", {
      "class": "k-drawer-items",
      role: "listbox",
      attrs: this.v3 ? void 0 : {
        role: "listbox",
        title: "drawer-list",
        "aria-expanded": expanded
      },
      title: "drawer-list",
      "aria-expanded": expanded
    }, [items.map(function(element, index) {
      var item = this.$props.item;
      if (item && !item.type && !item.render) {
        item = templateRendering.call(this, this.$props.item, getListeners.call(this));
      }
      var itemDefaultRendering = h(DrawerItem, {
        key: index,
        index,
        attrs: this.v3 ? void 0 : {
          index,
          text: element.text,
          icon: element.icon,
          separator: element.separator,
          selected: element.selected,
          targetItem: element.targetItem
        },
        onClick: this.onSelect,
        on: this.v3 ? void 0 : {
          "click": this.onSelect
        },
        text: element.text,
        icon: element.icon,
        separator: element.separator,
        selected: element.selected,
        targetItem: element.targetItem
      });
      var itemRendering = getTemplate.call(this, {
        h,
        template: item,
        defaultRendering: itemDefaultRendering,
        additionalProps: __assign4(__assign4({}, element), {
          index
        }),
        additionalListeners: {
          click: this.onSelect
        }
      });
      return itemRendering;
    }, this)]);
    var drawerNavigation = h("div", {
      style: drawerAnimation,
      "class": this.navigationClassNames
    }, [h("div", {
      "class": "k-drawer-wrapper",
      style: !expanded && mini && mode === "overlay" ? {
        width: navMiniWidth + "px"
      } : {
        width: navWidth + "px"
      }
    }, [drawerItems || defaultSlot])]);
    return drawerNavigation;
  },
  methods: {
    focus: function focus2(e) {
      if (this.$el) {
        this.$el.focus(e);
      }
    },
    onSelect: function onSelect3(e, index) {
      this.$emit("select", e, index);
    }
  }
};
var DrawerNavigation = DrawerNavigationVue2;

// node_modules/@progress/kendo-vue-layout/dist/es/drawer/Drawer.js
var allVue25 = vue_runtime_esm_bundler_exports;
var gh25 = allVue25.h;
var DrawerVue2 = {
  name: "KendoDrawer",
  props: {
    animation: {
      type: [Object, Boolean],
      default: true
    },
    expanded: {
      type: Boolean,
      default: false
    },
    dir: {
      type: String,
      default: "ltr"
    },
    item: [String, Object, Function],
    mode: {
      type: String,
      default: "overlay",
      validator: function validator10(value3) {
        return ["overlay", "push"].includes(value3);
      }
    },
    position: {
      type: String,
      default: "start",
      validator: function validator11(value3) {
        return ["start", "end"].includes(value3);
      }
    },
    items: Array,
    mini: {
      type: Boolean,
      default: false
    },
    tabIndex: Number,
    width: {
      type: Number,
      default: 240
    },
    miniWidth: {
      type: Number,
      default: 50
    }
  },
  created: function created8() {
    validatePackage2(packageMetadata2);
  },
  data: function data4() {
    var _a2 = this.$props, expanded = _a2.expanded, mode = _a2.mode, position = _a2.position, animation = _a2.animation, mini = _a2.mini, width = _a2.width, miniWidth = _a2.miniWidth, items = _a2.items, item = _a2.item;
    var itemRender = item ? templateRendering.call(this, item, getListeners.call(this)) : void 0;
    return {
      currentDir: "ltr",
      drawer: {
        expanded,
        mode,
        dir: this.currentDir,
        position,
        animation,
        mini,
        width,
        miniWidth,
        items,
        item: itemRender
      }
    };
  },
  mounted: function mounted2() {
    this.currentDir = getDir(this.$el, this.$props.dir);
  },
  updated: function updated() {
    var _a2 = this.$props, expanded = _a2.expanded, mode = _a2.mode, position = _a2.position, animation = _a2.animation, mini = _a2.mini, width = _a2.width, miniWidth = _a2.miniWidth, items = _a2.items, item = _a2.item;
    var itemRender = item ? templateRendering.call(this, item, getListeners.call(this)) : void 0;
    this.drawer.expanded = expanded;
    this.drawer.mode = mode;
    this.drawer.dir = this.currentDir;
    this.drawer.position = position;
    this.drawer.animation = animation;
    this.drawer.mini = mini;
    this.drawer.width = width;
    this.drawer.miniWidth = miniWidth;
    this.drawer.items = items;
    this.drawer.item = itemRender;
  },
  provide: function provide2() {
    return {
      kendoDrawer: this.drawer
    };
  },
  computed: {
    drawerClassNames: function drawerClassNames() {
      var _a2 = this.$props, expanded = _a2.expanded, mode = _a2.mode, mini = _a2.mini;
      return {
        "k-drawer-container": true,
        "k-drawer-expanded": expanded,
        "k-drawer-overlay": mode === "overlay",
        "k-drawer-push": mode === "push",
        "k-drawer-mini": mini
      };
    }
  },
  setup: !gh25 ? void 0 : function() {
    var v3 = !!gh25;
    return {
      v3
    };
  },
  render: function render21(createElement) {
    var h = gh25 || createElement;
    var defaultSlot = getDefaultSlots(this);
    var _a2 = this.$props, items = _a2.items, tabIndex = _a2.tabIndex, mode = _a2.mode, expanded = _a2.expanded, item = _a2.item;
    var itemRender = item ? templateRendering.call(this, item, getListeners.call(this)) : void 0;
    return h("div", {
      "class": this.drawerClassNames,
      dir: this.currentDir,
      attrs: this.v3 ? void 0 : {
        dir: this.currentDir,
        tabIndex
      },
      tabIndex
    }, [mode === "overlay" && expanded && h("div", {
      "class": "k-overlay",
      onClick: this.onOverlayClick,
      on: this.v3 ? void 0 : {
        "click": this.onOverlayClick
      }
    }), items && h(DrawerNavigation, {
      onSelect: this.handleSelect,
      on: this.v3 ? void 0 : {
        "select": this.handleSelect
      },
      item: itemRender,
      attrs: this.v3 ? void 0 : {
        item: itemRender
      }
    }), defaultSlot]);
  },
  methods: {
    focus: function focus3() {
      if (this.$el) {
        this.$el.focus();
      }
    },
    handleSelect: function handleSelect(itemTarget, itemIndex) {
      if (this.$props.items) {
        this.$emit("select", {
          itemTarget,
          itemIndex,
          component: this
        });
      }
    },
    onOverlayClick: function onOverlayClick(e) {
      this.$emit("overlayclick", e);
    }
  }
};
var Drawer = DrawerVue2;

// node_modules/@progress/kendo-vue-layout/dist/es/drawer/DrawerContent.js
var allVue26 = vue_runtime_esm_bundler_exports;
var gh26 = allVue26.h;
var DrawerContentVue2 = {
  name: "KendoDrawerContent",
  setup: !gh26 ? void 0 : function() {
    var v3 = !!gh26;
    return {
      v3
    };
  },
  render: function render22(createElement) {
    var h = gh26 || createElement;
    var defaultSlot = getDefaultSlots(this);
    return h("div", {
      "class": "k-drawer-content"
    }, [defaultSlot]);
  }
};
var DrawerContent = DrawerContentVue2;

// node_modules/@progress/kendo-intl/dist/es/cldr/default-data.js
var defaultData = {
  en: {
    name: "en",
    identity: {
      version: {
        _number: "$Revision: 12418 $",
        _cldrVersion: "29"
      },
      language: "en"
    },
    territory: "US",
    numbers: {
      symbols: {
        decimal: ".",
        group: ",",
        list: ";",
        percentSign: "%",
        plusSign: "+",
        minusSign: "-",
        exponential: "E",
        superscriptingExponent: "\xD7",
        perMille: "\u2030",
        infinity: "\u221E",
        nan: "NaN",
        timeSeparator: ":"
      },
      decimal: {
        patterns: [
          "n"
        ],
        groupSize: [
          3
        ]
      },
      scientific: {
        patterns: [
          "nEn"
        ],
        groupSize: []
      },
      percent: {
        patterns: [
          "n%"
        ],
        groupSize: [
          3
        ]
      },
      currency: {
        patterns: [
          "$n"
        ],
        groupSize: [
          3
        ],
        "unitPattern-count-one": "n $",
        "unitPattern-count-other": "n $"
      },
      currencies: {
        BGN: {
          displayName: "Bulgarian Lev",
          "displayName-count-one": "Bulgarian lev",
          "displayName-count-other": "Bulgarian leva",
          symbol: "BGN"
        },
        EUR: {
          displayName: "Euro",
          "displayName-count-one": "euro",
          "displayName-count-other": "euros",
          symbol: "\u20AC",
          "symbol-alt-narrow": "\u20AC"
        },
        USD: {
          displayName: "US Dollar",
          "displayName-count-one": "US dollar",
          "displayName-count-other": "US dollars",
          symbol: "$",
          "symbol-alt-narrow": "$"
        }
      },
      localeCurrency: "USD",
      accounting: {
        patterns: [
          "$n",
          "($n)"
        ],
        groupSize: [
          3
        ]
      }
    },
    calendar: {
      gmtFormat: "GMT{0}",
      gmtZeroFormat: "GMT",
      patterns: {
        d: "M/d/y",
        D: "EEEE, MMMM d, y",
        m: "MMM d",
        M: "MMMM d",
        y: "MMM y",
        Y: "MMMM y",
        F: "EEEE, MMMM d, y h:mm:ss a",
        g: "M/d/y h:mm a",
        G: "M/d/y h:mm:ss a",
        t: "h:mm a",
        T: "h:mm:ss a",
        s: "yyyy'-'MM'-'dd'T'HH':'mm':'ss",
        u: "yyyy'-'MM'-'dd HH':'mm':'ss'Z'"
      },
      dateTimeFormats: {
        full: "{1} 'at' {0}",
        long: "{1} 'at' {0}",
        medium: "{1}, {0}",
        short: "{1}, {0}",
        availableFormats: {
          Bh: "h B",
          Bhm: "h:mm B",
          Bhms: "h:mm:ss B",
          d: "d",
          E: "ccc",
          EBhm: "E h:mm B",
          EBhms: "E h:mm:ss B",
          Ed: "d E",
          Ehm: "E h:mm a",
          EHm: "E HH:mm",
          Ehms: "E h:mm:ss a",
          EHms: "E HH:mm:ss",
          Gy: "y G",
          GyMMM: "MMM y G",
          GyMMMd: "MMM d, y G",
          GyMMMEd: "E, MMM d, y G",
          h: "h a",
          H: "HH",
          hm: "h:mm a",
          Hm: "HH:mm",
          hms: "h:mm:ss a",
          Hms: "HH:mm:ss",
          hmsv: "h:mm:ss a v",
          Hmsv: "HH:mm:ss v",
          hmv: "h:mm a v",
          Hmv: "HH:mm v",
          M: "L",
          Md: "M/d",
          MEd: "E, M/d",
          MMM: "LLL",
          MMMd: "MMM d",
          MMMEd: "E, MMM d",
          MMMMd: "MMMM d",
          "MMMMW-count-one": "'week' W 'of' MMMM",
          "MMMMW-count-other": "'week' W 'of' MMMM",
          ms: "mm:ss",
          y: "y",
          yM: "M/y",
          yMd: "M/d/y",
          yMEd: "E, M/d/y",
          yMMM: "MMM y",
          yMMMd: "MMM d, y",
          yMMMEd: "E, MMM d, y",
          yMMMM: "MMMM y",
          yQQQ: "QQQ y",
          yQQQQ: "QQQQ y",
          "yw-count-one": "'week' w 'of' Y",
          "yw-count-other": "'week' w 'of' Y"
        }
      },
      timeFormats: {
        full: "h:mm:ss a zzzz",
        long: "h:mm:ss a z",
        medium: "h:mm:ss a",
        short: "h:mm a"
      },
      dateFormats: {
        full: "EEEE, MMMM d, y",
        long: "MMMM d, y",
        medium: "MMM d, y",
        short: "M/d/yy"
      },
      days: {
        format: {
          abbreviated: [
            "Sun",
            "Mon",
            "Tue",
            "Wed",
            "Thu",
            "Fri",
            "Sat"
          ],
          narrow: [
            "S",
            "M",
            "T",
            "W",
            "T",
            "F",
            "S"
          ],
          short: [
            "Su",
            "Mo",
            "Tu",
            "We",
            "Th",
            "Fr",
            "Sa"
          ],
          wide: [
            "Sunday",
            "Monday",
            "Tuesday",
            "Wednesday",
            "Thursday",
            "Friday",
            "Saturday"
          ]
        },
        "stand-alone": {
          abbreviated: [
            "Sun",
            "Mon",
            "Tue",
            "Wed",
            "Thu",
            "Fri",
            "Sat"
          ],
          narrow: [
            "S",
            "M",
            "T",
            "W",
            "T",
            "F",
            "S"
          ],
          short: [
            "Su",
            "Mo",
            "Tu",
            "We",
            "Th",
            "Fr",
            "Sa"
          ],
          wide: [
            "Sunday",
            "Monday",
            "Tuesday",
            "Wednesday",
            "Thursday",
            "Friday",
            "Saturday"
          ]
        }
      },
      months: {
        format: {
          abbreviated: [
            "Jan",
            "Feb",
            "Mar",
            "Apr",
            "May",
            "Jun",
            "Jul",
            "Aug",
            "Sep",
            "Oct",
            "Nov",
            "Dec"
          ],
          narrow: [
            "J",
            "F",
            "M",
            "A",
            "M",
            "J",
            "J",
            "A",
            "S",
            "O",
            "N",
            "D"
          ],
          wide: [
            "January",
            "February",
            "March",
            "April",
            "May",
            "June",
            "July",
            "August",
            "September",
            "October",
            "November",
            "December"
          ]
        },
        "stand-alone": {
          abbreviated: [
            "Jan",
            "Feb",
            "Mar",
            "Apr",
            "May",
            "Jun",
            "Jul",
            "Aug",
            "Sep",
            "Oct",
            "Nov",
            "Dec"
          ],
          narrow: [
            "J",
            "F",
            "M",
            "A",
            "M",
            "J",
            "J",
            "A",
            "S",
            "O",
            "N",
            "D"
          ],
          wide: [
            "January",
            "February",
            "March",
            "April",
            "May",
            "June",
            "July",
            "August",
            "September",
            "October",
            "November",
            "December"
          ]
        }
      },
      quarters: {
        format: {
          abbreviated: [
            "Q1",
            "Q2",
            "Q3",
            "Q4"
          ],
          narrow: [
            "1",
            "2",
            "3",
            "4"
          ],
          wide: [
            "1st quarter",
            "2nd quarter",
            "3rd quarter",
            "4th quarter"
          ]
        },
        "stand-alone": {
          abbreviated: [
            "Q1",
            "Q2",
            "Q3",
            "Q4"
          ],
          narrow: [
            "1",
            "2",
            "3",
            "4"
          ],
          wide: [
            "1st quarter",
            "2nd quarter",
            "3rd quarter",
            "4th quarter"
          ]
        }
      },
      dayPeriods: {
        format: {
          abbreviated: {
            midnight: "midnight",
            am: "AM",
            "am-alt-variant": "am",
            noon: "noon",
            pm: "PM",
            "pm-alt-variant": "pm",
            morning1: "in the morning",
            afternoon1: "in the afternoon",
            evening1: "in the evening",
            night1: "at night"
          },
          narrow: {
            midnight: "mi",
            am: "a",
            "am-alt-variant": "am",
            noon: "n",
            pm: "p",
            "pm-alt-variant": "pm",
            morning1: "in the morning",
            afternoon1: "in the afternoon",
            evening1: "in the evening",
            night1: "at night"
          },
          wide: {
            midnight: "midnight",
            am: "AM",
            "am-alt-variant": "am",
            noon: "noon",
            pm: "PM",
            "pm-alt-variant": "pm",
            morning1: "in the morning",
            afternoon1: "in the afternoon",
            evening1: "in the evening",
            night1: "at night"
          }
        },
        "stand-alone": {
          abbreviated: {
            midnight: "midnight",
            am: "AM",
            "am-alt-variant": "am",
            noon: "noon",
            pm: "PM",
            "pm-alt-variant": "pm",
            morning1: "morning",
            afternoon1: "afternoon",
            evening1: "evening",
            night1: "night"
          },
          narrow: {
            midnight: "midnight",
            am: "AM",
            "am-alt-variant": "am",
            noon: "noon",
            pm: "PM",
            "pm-alt-variant": "pm",
            morning1: "morning",
            afternoon1: "afternoon",
            evening1: "evening",
            night1: "night"
          },
          wide: {
            midnight: "midnight",
            am: "AM",
            "am-alt-variant": "am",
            noon: "noon",
            pm: "PM",
            "pm-alt-variant": "pm",
            morning1: "morning",
            afternoon1: "afternoon",
            evening1: "evening",
            night1: "night"
          }
        }
      },
      eras: {
        format: {
          wide: {
            "0": "Before Christ",
            "1": "Anno Domini",
            "0-alt-variant": "Before Common Era",
            "1-alt-variant": "Common Era"
          },
          abbreviated: {
            "0": "BC",
            "1": "AD",
            "0-alt-variant": "BCE",
            "1-alt-variant": "CE"
          },
          narrow: {
            "0": "B",
            "1": "A",
            "0-alt-variant": "BCE",
            "1-alt-variant": "CE"
          }
        }
      },
      dateFields: {
        era: {
          wide: "era"
        },
        year: {
          wide: "year",
          short: "yr.",
          narrow: "yr."
        },
        quarter: {
          wide: "quarter",
          short: "qtr.",
          narrow: "qtr."
        },
        month: {
          wide: "month",
          short: "mo.",
          narrow: "mo."
        },
        week: {
          wide: "week",
          short: "wk.",
          narrow: "wk."
        },
        day: {
          wide: "day",
          short: "day",
          narrow: "day"
        },
        weekday: {
          wide: "day of the week"
        },
        dayperiod: {
          wide: "AM/PM"
        },
        hour: {
          wide: "hour",
          short: "hr.",
          narrow: "hr."
        },
        minute: {
          wide: "minute",
          short: "min.",
          narrow: "min."
        },
        second: {
          wide: "second",
          short: "sec.",
          narrow: "sec."
        },
        millisecond: {
          wide: "millisecond",
          short: "ms",
          narrow: "ms"
        },
        zone: {
          wide: "time zone"
        }
      }
    }
  },
  supplemental: {
    likelySubtags: {
      en: "en-Latn-US"
    },
    currencyData: {
      region: {
        US: [
          {
            USD: {
              _from: "1792-01-01"
            }
          }
        ]
      }
    },
    weekData: {
      firstDay: {
        US: "sun"
      },
      weekendStart: {
        "001": "sat"
      },
      weekendEnd: {
        "001": "sun"
      }
    }
  }
};
var default_data_default = defaultData;

// node_modules/@progress/kendo-intl/dist/es/common/is-string.js
function isString(value3) {
  return typeof value3 === "string";
}

// node_modules/@progress/kendo-intl/dist/es/error-details.js
var error_details_default = {
  "NoLocale": "Missing locale info for '{0}'",
  "NoCurrency": "Cannot determine currency information. Please load the locale currencies data.",
  "NoSupplementalCurrency": "Cannot determine currency. Please load the supplemental currencyData.",
  "NoCurrencyRegion": "No currency data for region '{0}'",
  "NoCurrencyDisplay": "Cannot determine currency display information. Please load the locale currencies data. The default culture does not include the all currencies data.",
  "NoGMTInfo": "Cannot determine locale GMT format. Please load the locale timeZoneNames data.",
  "NoWeekData": "Cannot determine locale first day of week. Please load the supplemental weekData.",
  "NoFirstDay": "Cannot determine locale first day of week. Please load the supplemental weekData. The default culture includes only the 'en-US' first day info.",
  "NoValidCurrency": "Cannot determine a default currency for the {0} locale. Please specify explicitly the currency with the format options.",
  "NoDateFieldNames": "Cannot determine the locale date field names. Please load the locale dateFields data."
};

// node_modules/@progress/kendo-intl/dist/es/errors.js
var formatRegExp = /\{(\d+)}?\}/g;
var IntlError = function IntlError2(ref10) {
  var name = ref10.name;
  var message = ref10.message;
  if (!name || !message) {
    throw new Error("{ name: string, message: string } object is required!");
  }
  this.name = name;
  this.message = message;
};
IntlError.prototype.formatMessage = function formatMessage() {
  var values = [], len = arguments.length;
  while (len--)
    values[len] = arguments[len];
  var flattenValues = flatten(values);
  var formattedMessage = this.message.replace(formatRegExp, function(match, index) {
    return flattenValues[parseInt(index, 10)];
  });
  return this.name + ": " + formattedMessage;
};
IntlError.prototype.error = function error() {
  var values = [], len = arguments.length;
  while (len--)
    values[len] = arguments[len];
  return new Error(this.formatMessage(values));
};
var flatten = function(arr) {
  return arr.reduce(function(a, b) {
    return a.concat(b);
  }, []);
};
var toIntlErrors = function(errors2) {
  var predicate = function(prev, name) {
    prev[name] = new IntlError({ name, message: errors2[name] });
    return prev;
  };
  return Object.keys(errors2).reduce(predicate, {});
};
var errors = toIntlErrors(error_details_default);

// node_modules/@progress/kendo-intl/dist/es/cldr/info.js
function availableLocaleInfo(fullName, suffixes) {
  var parts = fullName.split("-");
  var language2 = parts[0];
  var script = parts[1];
  var territory = parts[2];
  return cldr[fullName] || suffixes.indexOf(territory) !== -1 && cldr[language2 + "-" + territory] || suffixes.indexOf(script) !== -1 && cldr[language2 + "-" + script] || cldr[language2];
}
function localeFullName(language2, suffixes) {
  var likelySubtags = cldr.supplemental.likelySubtags;
  for (var idx = 0; idx < suffixes.length; idx++) {
    var name = likelySubtags[language2 + "-" + suffixes[idx]];
    if (name) {
      return name;
    }
  }
  if (likelySubtags[language2]) {
    return likelySubtags[language2];
  }
}
var cldr = default_data_default;
function getLocaleInfo(locale2) {
  var info;
  if (isString(locale2)) {
    info = localeInfo(locale2);
  } else {
    info = locale2;
  }
  return info;
}
function localeInfo(locale2) {
  if (cldr[locale2]) {
    return cldr[locale2];
  }
  var likelySubtags = cldr.supplemental.likelySubtags;
  if (likelySubtags) {
    var parts = locale2.split("-");
    var language2 = parts[0];
    var suffixes = parts.slice(1);
    var fullName = localeFullName(language2, suffixes);
    var info = fullName ? availableLocaleInfo(fullName, suffixes) : null;
    if (info) {
      return info;
    }
  }
  throw errors.NoLocale.error(locale2);
}

// node_modules/@progress/kendo-intl/dist/es/common/constants.js
var DECIMAL = "decimal";
var CURRENCY = "currency";
var ACCOUNTING = "accounting";
var PERCENT = "percent";
var SCIENTIFIC = "scientific";
var CURRENCY_PLACEHOLDER = "$";
var PERCENT_PLACEHOLDER = "%";
var NUMBER_PLACEHOLDER = "n";
var LIST_SEPARATOR = ";";
var GROUP_SEPARATOR = ",";
var POINT = ".";
var EMPTY = "";
var DEFAULT_LOCALE = "en";

// node_modules/@progress/kendo-intl/dist/es/cldr/territory.js
function territoryFromName(name, identity) {
  var likelySubtags = cldr.supplemental.likelySubtags;
  var parts = name.split("-");
  if (likelySubtags) {
    var likelyName = likelySubtags[name] || likelySubtags[parts[0]];
    if (likelyName) {
      parts = likelyName.split("-");
    }
  }
  if (identity) {
    for (var idx = parts.length - 1; idx >= 1; idx--) {
      var part = parts[idx];
      if (part === identity.variant || part === identity.script) {
        parts.splice(idx, 1);
      }
    }
  }
  var length = parts.length;
  if (length > 1) {
    var territory = parts[length - 1];
    return territory.toUpperCase();
  }
}
function localeTerritory(info) {
  if (info.territory) {
    return info.territory;
  }
  var name = info.name;
  var identity = info.identity;
  var territory;
  if (identity && identity.territory) {
    territory = identity.territory;
  } else {
    territory = territoryFromName(name, identity);
  }
  info.territory = territory;
  return territory;
}

// node_modules/@progress/kendo-intl/dist/es/cldr/date-field-name.js
function dateFieldName(options, locale2) {
  if (locale2 === void 0)
    locale2 = DEFAULT_LOCALE;
  var info = localeInfo(locale2);
  var dateFields = info.calendar.dateFields;
  if (!dateFields) {
    throw errors.NoDateFieldNames.error();
  }
  var fieldNameInfo = dateFields[options.type] || {};
  return fieldNameInfo[options.nameType] || fieldNameInfo["wide"];
}

// node_modules/@progress/kendo-intl/dist/es/cldr/date-format-names.js
function lowerArray(arr) {
  var result = [];
  for (var idx = 0; idx < arr.length; idx++) {
    result.push(arr[idx].toLowerCase());
  }
  return result;
}
function lowerObject(obj) {
  var result = {};
  for (var field in obj) {
    result[field] = obj[field].toLowerCase();
  }
  return result;
}
function cloneLower(obj) {
  var result = Array.isArray(obj) ? lowerArray(obj) : lowerObject(obj);
  return result;
}
function dateFormatNames(locale2, options) {
  var type = options.type;
  var nameType = options.nameType;
  var standAlone = options.standAlone;
  var lower = options.lower;
  var info = getLocaleInfo(locale2);
  var formatType = standAlone ? "stand-alone" : "format";
  var lowerNameType = (lower ? "lower-" : EMPTY) + nameType;
  var formatNames2 = info.calendar[type][formatType];
  var result = formatNames2[lowerNameType];
  if (!result && lower) {
    result = formatNames2[lowerNameType] = cloneLower(formatNames2[nameType]);
  }
  return result;
}

// node_modules/@progress/kendo-intl/dist/es/cldr/parse-range-date.js
function parseRangeDate(value3) {
  var parts = value3.split("-");
  var year = parseInt(parts[0], 10);
  var month = parseInt(parts[1], 10) - 1;
  var day = parseInt(parts[2], 10);
  return new Date(year, month, day);
}

// node_modules/@progress/kendo-intl/dist/es/cldr/currency.js
var NoCurrency = errors.NoCurrency;
var NoCurrencyDisplay = errors.NoCurrencyDisplay;
var NoSupplementalCurrency = errors.NoSupplementalCurrency;
var NoCurrencyRegion = errors.NoCurrencyRegion;
var NoValidCurrency = errors.NoValidCurrency;
var DEFAULT_CURRENCY_FRACTIONS = 2;
var SYMBOL = "symbol";
var INVALID_CURRENCY_CODE = "XXX";
var GLOBAL_CURRENCIES = {
  "001": "USD",
  "150": "EUR"
};
function getCurrencyInfo(locale2, currency, throwIfNoValid) {
  var info = getLocaleInfo(locale2);
  var currencies = info.numbers.currencies;
  if (!currencies) {
    if (throwIfNoValid) {
      throw NoCurrency.error();
    }
    return;
  }
  var currencyDisplayInfo = currencies[currency];
  if (!currencyDisplayInfo) {
    if (throwIfNoValid) {
      throw NoCurrencyDisplay.error();
    }
    return;
  }
  return currencyDisplayInfo;
}
function lengthComparer(a, b) {
  return b.length - a.length;
}
function regionCurrency(regionCurrencies) {
  var latestValidUntil, latestValidUntilRange;
  var latestStillValid, latestStillValidDate;
  for (var idx = 0; idx < regionCurrencies.length; idx++) {
    var currency = regionCurrencies[idx];
    var code = Object.keys(currency)[0];
    var info = currency[code];
    if (code !== INVALID_CURRENCY_CODE && info._tender !== "false" && info._from) {
      if (!info._to) {
        var stillValidDate = parseRangeDate(info._from);
        if (!latestStillValidDate || latestStillValidDate < stillValidDate) {
          latestStillValid = code;
          latestStillValidDate = stillValidDate;
        }
      } else if (!latestStillValid) {
        var validFrom = parseRangeDate(info._from);
        var validTo = parseRangeDate(info._to);
        if (!latestValidUntilRange || latestValidUntilRange.to < validTo || latestValidUntilRange.from < validFrom) {
          latestValidUntil = code;
          latestValidUntilRange = {
            from: validFrom,
            to: validTo
          };
        }
      }
    }
  }
  return latestStillValid || latestValidUntil;
}
function currencyDisplays(locale2, currency, throwIfNoValid) {
  if (throwIfNoValid === void 0)
    throwIfNoValid = true;
  var currencyInfo = getCurrencyInfo(locale2, currency, throwIfNoValid);
  if (!currencyInfo) {
    return;
  }
  if (!currencyInfo.displays) {
    var displays = [currency];
    for (var field in currencyInfo) {
      displays.push(currencyInfo[field]);
    }
    displays.sort(lengthComparer);
    currencyInfo.displays = displays;
  }
  return currencyInfo.displays;
}
function currencyDisplay(locale2, options) {
  var value3 = options.value;
  var currency = options.currency;
  var currencyDisplay2 = options.currencyDisplay;
  if (currencyDisplay2 === void 0)
    currencyDisplay2 = SYMBOL;
  if (currencyDisplay2 === "code") {
    return currency;
  }
  var currencyInfo = getCurrencyInfo(locale2, currency, true);
  var result;
  if (currencyDisplay2 === SYMBOL) {
    result = currencyInfo["symbol-alt-narrow"] || currencyInfo[SYMBOL];
  } else {
    if (typeof value3 === "undefined" || value3 !== 1) {
      result = currencyInfo["displayName-count-other"];
    } else {
      result = currencyInfo["displayName-count-one"];
    }
  }
  return result;
}
function currencyFractionOptions(code) {
  var minimumFractionDigits = DEFAULT_CURRENCY_FRACTIONS;
  var maximumFractionDigits = DEFAULT_CURRENCY_FRACTIONS;
  var fractions = ((cldr.supplemental.currencyData || {}).fractions || {})[code];
  if (fractions && fractions._digits) {
    maximumFractionDigits = minimumFractionDigits = parseInt(fractions._digits, 10);
  }
  return {
    minimumFractionDigits,
    maximumFractionDigits
  };
}
function territoryCurrencyCode(territory, throwIfNoValid) {
  if (throwIfNoValid === void 0)
    throwIfNoValid = true;
  if (GLOBAL_CURRENCIES[territory]) {
    return GLOBAL_CURRENCIES[territory];
  }
  var currencyData = cldr.supplemental.currencyData;
  if (!currencyData) {
    if (throwIfNoValid) {
      throw NoSupplementalCurrency.error();
    }
    return;
  }
  var regionCurrencies = currencyData.region[territory];
  if (!regionCurrencies) {
    if (throwIfNoValid) {
      throw NoCurrencyRegion.error(territory);
    }
    return;
  }
  var currencyCode = regionCurrency(regionCurrencies);
  return currencyCode;
}
function localeCurrency(locale2, throwIfNoValid) {
  var info = getLocaleInfo(locale2);
  var numbers = info.numbers;
  if (!numbers.localeCurrency) {
    var currency = territoryCurrencyCode(localeTerritory(info), throwIfNoValid);
    if (!currency && throwIfNoValid) {
      throw NoValidCurrency.error(info.name);
    }
    numbers.localeCurrency = currency;
  }
  return numbers.localeCurrency;
}

// node_modules/@progress/kendo-intl/dist/es/cldr/constants.js
var DAYS_OF_WEEK = ["sun", "mon", "tue", "wed", "thu", "fri", "sat"];
var DEFAULT_TERRITORY = "001";

// node_modules/@progress/kendo-intl/dist/es/cldr/first-day.js
var NoWeekData = errors.NoWeekData;
var NoFirstDay = errors.NoFirstDay;
function firstDay(locale2) {
  var info = getLocaleInfo(locale2);
  if (!isNaN(info.firstDay)) {
    return info.firstDay;
  }
  var weekData = cldr.supplemental.weekData;
  if (!weekData) {
    throw NoWeekData.error();
  }
  var firstDay2 = weekData.firstDay[localeTerritory(info)] || weekData.firstDay[DEFAULT_TERRITORY];
  if (!firstDay2) {
    throw NoFirstDay.error();
  }
  info.firstDay = DAYS_OF_WEEK.indexOf(firstDay2);
  return info.firstDay;
}

// node_modules/@progress/kendo-intl/dist/es/cldr/weekend-range.js
var NoWeekData2 = errors.NoWeekData;

// node_modules/@progress/kendo-intl/dist/es/cldr/number-symbols.js
function numberSymbols(locale2) {
  var info = getLocaleInfo(locale2);
  return info.numbers.symbols;
}

// node_modules/@progress/kendo-intl/dist/es/common/is-negative-zero.js
function isNegativeZero(value3) {
  return 1 / value3 === -Infinity;
}

// node_modules/@progress/kendo-intl/dist/es/numbers/format-currency-symbol.js
function formatCurrencySymbol(info, options) {
  if (options === void 0)
    options = {};
  if (!options.currency) {
    options.currency = localeCurrency(info, true);
  }
  var display = currencyDisplay(info, options);
  return display;
}

// node_modules/@progress/kendo-intl/dist/es/numbers/group-integer.js
function groupInteger(number, start, end, options, info) {
  var symbols = info.numbers.symbols;
  var decimalIndex = number.indexOf(symbols.decimal);
  var groupSizes = options.groupSize.slice();
  var groupSize = groupSizes.shift();
  var integerEnd = decimalIndex !== -1 ? decimalIndex : end + 1;
  var integer = number.substring(start, integerEnd);
  var result = number;
  var integerLength = integer.length;
  if (integerLength >= groupSize) {
    var idx = integerLength;
    var parts = [];
    while (idx > -1) {
      var value3 = integer.substring(idx - groupSize, idx);
      if (value3) {
        parts.push(value3);
      }
      idx -= groupSize;
      var newGroupSize = groupSizes.shift();
      groupSize = newGroupSize !== void 0 ? newGroupSize : groupSize;
      if (groupSize === 0) {
        value3 = integer.substring(0, idx);
        if (value3) {
          parts.push(value3);
        }
        break;
      }
    }
    integer = parts.reverse().join(symbols.group);
    result = number.substring(0, start) + integer + number.substring(integerEnd);
  }
  return result;
}

// node_modules/@progress/kendo-intl/dist/es/numbers/is-currency-style.js
function isCurrencyStyle(style) {
  return style === CURRENCY || style === ACCOUNTING;
}

// node_modules/@progress/kendo-intl/dist/es/common/pad.js
function pad(number, digits, right) {
  if (digits === void 0)
    digits = 2;
  if (right === void 0)
    right = false;
  var count = digits - String(number).length;
  var result = number;
  if (count > 0) {
    var padString = new Array(count + 1).join("0");
    result = right ? number + padString : padString + number;
  }
  return result;
}

// node_modules/@progress/kendo-intl/dist/es/common/round.js
var MAX_PRECISION = 20;
function round(value3, precision) {
  var result = value3;
  var decimals = precision || 0;
  result = result.toString().split("e");
  result = Math.round(Number(result[0] + "e" + (result[1] ? Number(result[1]) + decimals : decimals)));
  result = result.toString().split("e");
  result = Number(result[0] + "e" + (result[1] ? Number(result[1]) - decimals : -decimals));
  return result.toFixed(Math.min(decimals, MAX_PRECISION));
}

// node_modules/@progress/kendo-intl/dist/es/numbers/standard-number-format.js
var DEFAULT_DECIMAL_ROUNDING = 3;
var DEFAULT_PERCENT_ROUNDING = 0;
var trailingZeroRegex = /0+$/;
function fractionOptions(options) {
  var minimumFractionDigits = options.minimumFractionDigits;
  var maximumFractionDigits = options.maximumFractionDigits;
  var style = options.style;
  var isCurrency = isCurrencyStyle(style);
  var currencyFractions;
  if (isCurrency) {
    currencyFractions = currencyFractionOptions(options.currency);
  }
  if (minimumFractionDigits === void 0) {
    minimumFractionDigits = isCurrency ? currencyFractions.minimumFractionDigits : 0;
  }
  if (maximumFractionDigits === void 0) {
    if (style === PERCENT) {
      maximumFractionDigits = Math.max(minimumFractionDigits, DEFAULT_PERCENT_ROUNDING);
    } else if (isCurrency) {
      maximumFractionDigits = Math.max(minimumFractionDigits, currencyFractions.maximumFractionDigits);
    } else {
      maximumFractionDigits = Math.max(minimumFractionDigits, DEFAULT_DECIMAL_ROUNDING);
    }
  }
  return {
    minimumFractionDigits,
    maximumFractionDigits
  };
}
function applyPattern(value3, pattern, symbol) {
  var result = EMPTY;
  for (var idx = 0, length = pattern.length; idx < length; idx++) {
    var ch = pattern.charAt(idx);
    if (ch === NUMBER_PLACEHOLDER) {
      result += value3;
    } else if (ch === CURRENCY_PLACEHOLDER || ch === PERCENT_PLACEHOLDER) {
      result += symbol;
    } else {
      result += ch;
    }
  }
  return result;
}
function currencyUnitPattern(info, value3) {
  var currencyInfo = info.numbers.currency;
  var pattern = value3 !== 1 ? currencyInfo["unitPattern-count-other"] : currencyInfo["unitPattern-count-one"];
  if (value3 < 0) {
    pattern = pattern.replace(NUMBER_PLACEHOLDER, "-" + NUMBER_PLACEHOLDER);
  }
  return pattern;
}
function standardNumberFormat(number, options, info) {
  var symbols = info.numbers.symbols;
  var style = options.style;
  var isCurrency = isCurrencyStyle(style);
  if (style === SCIENTIFIC) {
    var exponential = options.minimumFractionDigits !== void 0 ? number.toExponential(options.minimumFractionDigits) : number.toExponential();
    return exponential.replace(POINT, symbols.decimal);
  }
  var value3 = number;
  var symbol;
  if (isCurrency) {
    options.value = value3;
    symbol = formatCurrencySymbol(info, options);
  }
  if (style === PERCENT) {
    value3 *= 100;
    symbol = symbols.percentSign;
  }
  var ref10 = fractionOptions(options);
  var minimumFractionDigits = ref10.minimumFractionDigits;
  var maximumFractionDigits = ref10.maximumFractionDigits;
  value3 = round(value3, maximumFractionDigits);
  var negative = value3 < 0;
  var negativeZero = isNegativeZero(number);
  var parts = value3.split(POINT);
  var integer = parts[0];
  var fraction = pad(parts[1] ? parts[1].replace(trailingZeroRegex, EMPTY) : EMPTY, minimumFractionDigits, true);
  if (negative) {
    integer = integer.substring(1);
  }
  if (options.minimumIntegerDigits) {
    integer = pad(integer, options.minimumIntegerDigits);
  }
  var formattedValue = options.useGrouping !== false ? groupInteger(integer, 0, integer.length, options, info) : integer;
  if (fraction) {
    formattedValue += symbols.decimal + fraction;
  }
  var pattern;
  if (isCurrency && options.currencyDisplay === "name") {
    pattern = currencyUnitPattern(info, number);
  } else {
    var patterns = options.patterns;
    pattern = negative || negativeZero ? patterns[1] || "-" + patterns[0] : patterns[0];
  }
  if (pattern === NUMBER_PLACEHOLDER && !negative) {
    return formattedValue;
  }
  var result = applyPattern(formattedValue, pattern, symbol);
  return result;
}

// node_modules/@progress/kendo-intl/dist/es/numbers/utils.js
var literalRegExp = /(\\.)|(['][^']*[']?)|(["][^"]*["]?)/g;
var PLACEHOLDER = "__??__";
function setStyleOptions(formatOptions2, info) {
  var format2 = formatOptions2.format;
  if (format2.indexOf(PERCENT_PLACEHOLDER) !== -1) {
    formatOptions2.style = PERCENT;
    formatOptions2.symbol = info.numbers.symbols.percentSign;
    formatOptions2.number *= 100;
  }
  if (format2.indexOf(CURRENCY_PLACEHOLDER) !== -1) {
    formatOptions2.style = CURRENCY;
    formatOptions2.symbol = formatCurrencySymbol(info);
  }
}
function setFormatLiterals(formatOptions2) {
  var format2 = formatOptions2.format;
  if (format2.indexOf("'") > -1 || format2.indexOf('"') > -1 || format2.indexOf("\\") > -1) {
    var literals = formatOptions2.literals = [];
    formatOptions2.format = format2.replace(literalRegExp, function(match) {
      var quoteChar = match.charAt(0).replace("\\", EMPTY);
      var literal = match.slice(1).replace(quoteChar, EMPTY);
      literals.push(literal);
      return PLACEHOLDER;
    });
  }
}
function replaceLiterals(number, literals) {
  var result = number;
  if (literals) {
    var length = literals.length;
    for (var idx = 0; idx < length; idx++) {
      result = result.replace(PLACEHOLDER, literals[idx]);
    }
  }
  return result;
}

// node_modules/@progress/kendo-intl/dist/es/numbers/custom-number-format.js
var SHARP = "#";
var ZERO = "0";
var trailingZerosRegExp = /(\.(?:[0-9]*[1-9])?)0+$/g;
var trailingPointRegExp = /\.$/;
var commaRegExp = /,/g;
function trimTrailingZeros(value3, lastZero) {
  var trimRegex;
  if (lastZero === 0) {
    trimRegex = trailingZerosRegExp;
  } else {
    trimRegex = new RegExp("(\\.[0-9]{" + lastZero + "}[1-9]*)0+$", "g");
  }
  return value3.replace(trimRegex, "$1").replace(trailingPointRegExp, EMPTY);
}
function roundNumber(formatOptions2) {
  var number = formatOptions2.number;
  var format2 = formatOptions2.format;
  var decimalIndex = format2.indexOf(POINT);
  if (decimalIndex !== -1) {
    var zeroIndex = format2.lastIndexOf(ZERO) - decimalIndex;
    var sharpIndex = format2.lastIndexOf(SHARP) - decimalIndex;
    var hasZero = zeroIndex > -1;
    var hasSharp = sharpIndex > -1;
    var fraction = number.toString().split("e");
    if (fraction[1]) {
      fraction = round(number, Math.abs(fraction[1]));
    } else {
      fraction = fraction[0];
    }
    fraction = fraction.split(POINT)[1] || EMPTY;
    var precision = fraction.length;
    var trailingZeros = -1;
    if (!hasZero && !hasSharp) {
      formatOptions2.format = format2.substring(0, decimalIndex) + format2.substring(decimalIndex + 1);
      decimalIndex = -1;
      precision = 0;
    } else if (hasZero && zeroIndex > sharpIndex) {
      precision = zeroIndex;
    } else if (sharpIndex > zeroIndex) {
      if (hasSharp && precision > sharpIndex) {
        precision = sharpIndex;
      } else if (hasZero && precision < zeroIndex) {
        precision = zeroIndex;
      }
      trailingZeros = hasZero ? zeroIndex : 0;
    }
    if (precision > -1) {
      number = round(number, precision);
      if (trailingZeros > -1) {
        number = trimTrailingZeros(number, trailingZeros);
      }
    }
  } else {
    number = round(number);
  }
  if (formatOptions2.negative && number * -1 >= 0 && !formatOptions2.negativeZero) {
    formatOptions2.negative = false;
  }
  formatOptions2.number = number;
  formatOptions2.decimalIndex = decimalIndex;
}
function isConstantFormat(format2) {
  return format2.indexOf(SHARP) === -1 && format2.indexOf(ZERO) === -1;
}
function setValueSpecificFormat(formatOptions2) {
  var number = formatOptions2.number;
  var format2 = formatOptions2.format;
  format2 = format2.split(LIST_SEPARATOR);
  if ((formatOptions2.negative || formatOptions2.negativeZero) && format2[1]) {
    format2 = format2[1];
    formatOptions2.hasNegativeFormat = true;
  } else if (number === 0) {
    var zeroFormat = format2[2];
    format2 = zeroFormat || format2[0];
    if (zeroFormat && isConstantFormat(zeroFormat)) {
      formatOptions2.constant = zeroFormat;
    }
  } else {
    format2 = format2[0];
  }
  formatOptions2.format = format2;
}
function setGroupOptions(formatOptions2) {
  formatOptions2.hasGroup = formatOptions2.format.indexOf(GROUP_SEPARATOR) > -1;
  if (formatOptions2.hasGroup) {
    formatOptions2.format = formatOptions2.format.replace(commaRegExp, EMPTY);
  }
}
function placeholderIndex(index1, index2, start) {
  var index;
  if (index1 === -1 && index2 !== -1) {
    index = index2;
  } else if (index1 !== -1 && index2 === -1) {
    index = index1;
  } else {
    index = start ? Math.min(index1, index2) : Math.max(index1, index2);
  }
  return index;
}
function setPlaceholderIndices(formatOptions2) {
  var format2 = formatOptions2.format;
  var sharpIndex = format2.indexOf(SHARP);
  var zeroIndex = format2.indexOf(ZERO);
  var start = placeholderIndex(sharpIndex, zeroIndex, true);
  sharpIndex = format2.lastIndexOf(SHARP);
  zeroIndex = format2.lastIndexOf(ZERO);
  var end = placeholderIndex(sharpIndex, zeroIndex);
  if (start === format2.length) {
    end = start;
  }
  formatOptions2.start = start;
  formatOptions2.end = end;
  formatOptions2.lastZeroIndex = zeroIndex;
}
function replaceStyleSymbols(number, style, symbol) {
  var result = number;
  if (style === CURRENCY || style === PERCENT) {
    result = EMPTY;
    for (var idx = 0, length = number.length; idx < length; idx++) {
      var ch = number.charAt(idx);
      result += ch === CURRENCY_PLACEHOLDER || ch === PERCENT_PLACEHOLDER ? symbol : ch;
    }
  }
  return result;
}
function replacePlaceHolders(formatOptions2, info) {
  var start = formatOptions2.start;
  var end = formatOptions2.end;
  var negative = formatOptions2.negative;
  var negativeZero = formatOptions2.negativeZero;
  var format2 = formatOptions2.format;
  var decimalIndex = formatOptions2.decimalIndex;
  var lastZeroIndex = formatOptions2.lastZeroIndex;
  var hasNegativeFormat = formatOptions2.hasNegativeFormat;
  var hasGroup = formatOptions2.hasGroup;
  var number = formatOptions2.number;
  var value3 = number.toString().split(POINT);
  var length = format2.length;
  var integer = value3[0];
  var fraction = value3[1] || EMPTY;
  var integerLength = integer.length;
  var replacement = EMPTY;
  number = format2.substring(0, start);
  if ((negative || negativeZero) && !hasNegativeFormat) {
    number += "-";
  }
  for (var idx = start; idx < length; idx++) {
    var ch = format2.charAt(idx);
    if (decimalIndex === -1) {
      if (end - idx < integerLength) {
        number += integer;
        break;
      }
    } else {
      if (lastZeroIndex !== -1 && lastZeroIndex < idx) {
        replacement = EMPTY;
      }
      if (decimalIndex - idx <= integerLength && decimalIndex - idx > -1) {
        number += integer;
        idx = decimalIndex;
      }
      if (decimalIndex === idx) {
        number += (fraction ? info.numbers.symbols.decimal : EMPTY) + fraction;
        idx += end - decimalIndex + 1;
        continue;
      }
    }
    if (ch === ZERO) {
      number += ch;
      replacement = ch;
    } else if (ch === SHARP) {
      number += replacement;
    }
  }
  if (hasGroup) {
    number = groupInteger(number, start + (negative && !hasNegativeFormat ? 1 : 0), Math.max(end, integerLength + start), info.numbers.decimal, info);
  }
  if (end >= start) {
    number += format2.substring(end + 1);
  }
  return number;
}
function applyCustomFormat(formatOptions2, info) {
  var number = formatOptions2.number;
  if (formatOptions2.start !== -1) {
    number = replacePlaceHolders(formatOptions2, info);
    number = replaceStyleSymbols(number, formatOptions2.style, formatOptions2.symbol);
    number = replaceLiterals(number, formatOptions2.literals);
  }
  return number;
}
function customNumberFormat(number, format2, info) {
  var formatOptions2 = {
    negative: number < 0,
    number: Math.abs(number),
    negativeZero: isNegativeZero(number),
    format: format2
  };
  setValueSpecificFormat(formatOptions2);
  if (formatOptions2.constant) {
    return formatOptions2.constant;
  }
  setFormatLiterals(formatOptions2);
  setStyleOptions(formatOptions2, info);
  setGroupOptions(formatOptions2);
  roundNumber(formatOptions2);
  setPlaceholderIndices(formatOptions2);
  return applyCustomFormat(formatOptions2, info);
}

// node_modules/@progress/kendo-intl/dist/es/numbers/format-options.js
var standardFormatRegExp = /^(n|c|p|e|a)(\d*)$/i;
function standardFormatOptions(format2) {
  var formatAndPrecision = standardFormatRegExp.exec(format2);
  if (formatAndPrecision) {
    var options = {
      style: DECIMAL
    };
    var style = formatAndPrecision[1].toLowerCase();
    if (style === "c") {
      options.style = CURRENCY;
    } else if (style === "a") {
      options.style = ACCOUNTING;
    } else if (style === "p") {
      options.style = PERCENT;
    } else if (style === "e") {
      options.style = SCIENTIFIC;
    }
    if (formatAndPrecision[2]) {
      options.minimumFractionDigits = options.maximumFractionDigits = parseInt(formatAndPrecision[2], 10);
    }
    return options;
  }
}
function formatOptions(format2) {
  var options;
  if (isString(format2)) {
    options = standardFormatOptions(format2);
  } else {
    options = format2;
  }
  return options;
}

// node_modules/@progress/kendo-intl/dist/es/numbers/format-number.js
function formatNumber(number, format2, locale2) {
  if (format2 === void 0)
    format2 = NUMBER_PLACEHOLDER;
  if (locale2 === void 0)
    locale2 = DEFAULT_LOCALE;
  if (number === void 0 || number === null) {
    return EMPTY;
  }
  if (!isFinite(number)) {
    return String(number);
  }
  var info = localeInfo(locale2);
  var options = formatOptions(format2);
  var result;
  if (options) {
    var style = options.style || DECIMAL;
    result = standardNumberFormat(number, Object.assign({}, info.numbers[style], options), info);
  } else {
    result = customNumberFormat(number, format2, info);
  }
  return result;
}

// node_modules/@progress/kendo-intl/dist/es/common/is-number.js
function isNumber(value3) {
  return typeof value3 === "number";
}

// node_modules/@progress/kendo-intl/dist/es/numbers/parse-number.js
var exponentRegExp = /[eE][-+]?[0-9]+/;
var nonBreakingSpaceRegExp = /\u00A0/g;
function cleanNegativePattern(number, patterns) {
  if (patterns.length > 1) {
    var parts = (patterns[1] || EMPTY).replace(CURRENCY_PLACEHOLDER, EMPTY).split(NUMBER_PLACEHOLDER);
    if (number.indexOf(parts[0]) > -1 && number.indexOf(parts[1]) > -1) {
      return number.replace(parts[0], EMPTY).replace(parts[1], EMPTY);
    }
  }
}
function cleanCurrencyNumber(value3, info, format2) {
  var options = formatOptions(format2) || {};
  var isCurrency = isCurrencyStyle(options.style);
  var number = value3;
  var negative;
  var currency = options.currency || localeCurrency(info, isCurrency);
  if (currency) {
    var displays = currencyDisplays(info, currency, isCurrency);
    if (displays) {
      for (var idx = 0; idx < displays.length; idx++) {
        var display = displays[idx];
        if (number.includes(display)) {
          number = number.replace(display, EMPTY);
          isCurrency = true;
          break;
        }
      }
    }
    if (isCurrency) {
      var cleanNumber = cleanNegativePattern(number, info.numbers.currency.patterns) || cleanNegativePattern(number, info.numbers.accounting.patterns);
      if (cleanNumber) {
        negative = true;
        number = cleanNumber;
      }
    }
  }
  return {
    number,
    negative
  };
}
function cleanLiterals(number, formatOptions2) {
  var literals = formatOptions2.literals;
  var result = number;
  if (literals) {
    for (var idx = 0; idx < literals.length; idx++) {
      result = result.replace(literals[idx], EMPTY);
    }
  }
  return result;
}
function parseNumber(value3, locale2, format2) {
  if (locale2 === void 0)
    locale2 = DEFAULT_LOCALE;
  if (format2 === void 0)
    format2 = {};
  if (!value3 && value3 !== 0) {
    return null;
  }
  if (isNumber(value3)) {
    return value3;
  }
  var info = localeInfo(locale2);
  var symbols = info.numbers.symbols;
  var number = value3.toString();
  var formatOptions2 = format2 || {};
  var isPercent2;
  if (isString(format2)) {
    formatOptions2 = { format: format2 };
    setFormatLiterals(formatOptions2);
    number = cleanLiterals(number, formatOptions2);
    setStyleOptions(formatOptions2, info);
  }
  if (formatOptions2.style === PERCENT || number.indexOf(symbols.percentSign) > -1) {
    number = number.replace(symbols.percentSign, EMPTY);
    isPercent2 = true;
  }
  if (exponentRegExp.test(number)) {
    number = parseFloat(number.replace(symbols.decimal, POINT));
    return isNaN(number) ? null : number;
  }
  var ref10 = cleanCurrencyNumber(number, info, formatOptions2);
  var negativeCurrency = ref10.negative;
  var currencyNumber = ref10.number;
  number = String(currencyNumber).trim();
  var negativeSignIndex = number.indexOf("-");
  if (negativeSignIndex > 0) {
    return null;
  }
  var isNegative = negativeSignIndex > -1;
  isNegative = negativeCurrency !== void 0 ? negativeCurrency : isNegative;
  number = number.replace("-", EMPTY).replace(nonBreakingSpaceRegExp, " ").split(symbols.group.replace(nonBreakingSpaceRegExp, " ")).join(EMPTY).replace(symbols.decimal, POINT);
  number = parseFloat(number);
  if (isNaN(number)) {
    number = null;
  } else if (isNegative) {
    number *= -1;
  }
  if (number && isPercent2) {
    number /= 100;
  }
  return number;
}

// node_modules/@progress/kendo-intl/dist/es/common/format-string.js
var formatRegExp2 = /\{(\d+)}/g;
function formatString(format2) {
  var values = arguments;
  return format2.replace(formatRegExp2, function(match, index) {
    var value3 = values[parseInt(index, 10) + 1];
    return value3;
  });
}

// node_modules/@progress/kendo-intl/dist/es/dates/date-pattern.js
var REMOVAL_PENALTY = 120;
var ADDITION_PENALTY = 20;
var LENGHT_DELTA = [2, 1, 5, 3, 4];
var LONG_LESS_PENALTY_DELTA = -2;
var SHORT_LESS_PENALTY_DELTA = -1;
var SHORT_MORE_PENALTY_DELTA = 1;
var LONG_MORE_PENALTY_DELTA = 2;
var PENALTIES = {};
PENALTIES[LONG_LESS_PENALTY_DELTA.toString()] = 8;
PENALTIES[SHORT_LESS_PENALTY_DELTA.toString()] = 6;
PENALTIES[LONG_MORE_PENALTY_DELTA.toString()] = 6;
PENALTIES[SHORT_MORE_PENALTY_DELTA.toString()] = 3;
var VALUE_FORMAT_LENGTH = {
  numeric: 1,
  "2-digit": 2,
  short: 3,
  long: 4,
  narrow: 5
};
var TIME_SPECIFIERS_REGEX = /[hHmsSzZoOvVxX]/;
function getHourSpecifier(options) {
  return options.hour12 ? "h" : "H";
}
var DATE_OPTIONS_MAP = [{
  key: "era",
  specifier: "G"
}, {
  key: "year",
  specifier: "y"
}, {
  key: "month",
  specifier: "M"
}, {
  key: "day",
  specifier: "d"
}, {
  key: "weekday",
  specifier: "E"
}, {
  key: "hour",
  getSpecifier: getHourSpecifier
}, {
  key: "minute",
  specifier: "m"
}, {
  key: "second",
  specifier: "s"
}, {
  key: "timeZoneName",
  specifier: "z"
}];
var STAND_ALONE_SPECIFIERS = {
  e: "c",
  E: "c",
  M: "L",
  Q: "q"
};
var specifiersRegex = {};
var resolvedFormats = {};
function getSpecifierRegex(specifier) {
  if (!specifiersRegex[specifier]) {
    specifiersRegex[specifier] = new RegExp(specifier + "+");
  }
  return specifiersRegex[specifier];
}
function skeletonSpecifiers(skeleton) {
  var result = [];
  var current = skeleton.charAt(0);
  var specifier = current;
  for (var idx = 1; idx < skeleton.length; idx++) {
    var character = skeleton.charAt(idx);
    if (character === specifier) {
      current += character;
    } else {
      result.push(current);
      current = specifier = character;
    }
  }
  result.push(current);
  return result;
}
function findBestMatch(specifiers, availableFormats) {
  var specifiersLength = specifiers.length;
  var maxScore = -Number.MAX_VALUE;
  var bestMatches, result;
  for (var format2 in availableFormats) {
    var matches = [];
    var currentFormat = format2.replace("v", "z");
    var score = 0;
    for (var idx = 0; idx < specifiersLength; idx++) {
      var specifier = specifiers[idx];
      var specifierRegex = getSpecifierRegex(specifier[0]);
      var match = (specifierRegex.exec(currentFormat) || [])[0];
      if (!match) {
        score -= REMOVAL_PENALTY;
      } else {
        currentFormat = currentFormat.replace(match, EMPTY);
        if (match.length !== specifier.length) {
          var delta = Math.max(Math.min(LENGHT_DELTA[match.length] - LENGHT_DELTA[specifier.length], 2), -2);
          score -= PENALTIES[delta];
        }
      }
      matches.push(match);
      if (score < maxScore) {
        break;
      }
    }
    if (currentFormat.length) {
      score -= skeletonSpecifiers(currentFormat).length * ADDITION_PENALTY;
    }
    if (score > maxScore) {
      maxScore = score;
      bestMatches = matches;
      result = availableFormats[format2];
    }
  }
  result = result.replace("v", "z");
  for (var idx$1 = 0; idx$1 < specifiersLength; idx$1++) {
    var bestMatch = bestMatches[idx$1];
    if (bestMatch && bestMatch !== specifiers[idx$1]) {
      var matchSpecifier = bestMatches[idx$1][0];
      result = result.replace(getSpecifierRegex(matchSpecifier), specifiers[idx$1]);
      if (STAND_ALONE_SPECIFIERS[matchSpecifier]) {
        result = result.replace(getSpecifierRegex(STAND_ALONE_SPECIFIERS[matchSpecifier]), specifiers[idx$1]);
      }
    }
  }
  return result;
}
function cacheFormat(skeleton, format2, locale2) {
  if (!resolvedFormats[locale2]) {
    resolvedFormats[locale2] = {};
  }
  resolvedFormats[locale2][skeleton] = format2;
}
function skeletonFormat(skeleton, info) {
  var availableFormats = info.calendar.dateTimeFormats.availableFormats;
  if (availableFormats[skeleton]) {
    return availableFormats[skeleton];
  }
  if (resolvedFormats[info.name] && resolvedFormats[info.name][skeleton]) {
    return resolvedFormats[info.name][skeleton];
  }
  var timeStartIndex = skeleton.search(TIME_SPECIFIERS_REGEX);
  var result;
  if (timeStartIndex > 0) {
    var dateSkeleton = skeleton.substr(0, timeStartIndex);
    var timeSkeleton = skeleton.substr(timeStartIndex);
    result = formatString(info.calendar.dateTimeFormats.short, availableFormats[timeSkeleton] || findBestMatch(skeletonSpecifiers(timeSkeleton), availableFormats), availableFormats[dateSkeleton] || findBestMatch(skeletonSpecifiers(dateSkeleton), availableFormats));
  } else {
    result = findBestMatch(skeletonSpecifiers(skeleton), availableFormats);
  }
  cacheFormat(skeleton, result, info.name);
  return result;
}
function skeletonFromOptions(options) {
  var result = [];
  for (var idx = 0; idx < DATE_OPTIONS_MAP.length; idx++) {
    var option = DATE_OPTIONS_MAP[idx];
    var field = option.key;
    var value3 = options[field];
    if (value3) {
      var spcifier = option.specifier || option.getSpecifier(options);
      result.push(spcifier.repeat(VALUE_FORMAT_LENGTH[value3]));
    }
  }
  return result.join(EMPTY);
}
function datePattern(format2, info) {
  var calendar = info.calendar;
  var result;
  if (isString(format2)) {
    if (calendar.patterns[format2]) {
      result = calendar.patterns[format2];
    } else {
      result = format2;
    }
  } else if (format2) {
    if (format2.pattern) {
      return format2.pattern;
    }
    var skeleton = format2.skeleton;
    if (!skeleton) {
      if (format2.datetime) {
        result = formatString(calendar.dateTimeFormats[format2.datetime], calendar.timeFormats[format2.datetime], calendar.dateFormats[format2.datetime]);
      } else if (format2.date) {
        result = calendar.dateFormats[format2.date];
      } else if (format2.time) {
        result = calendar.timeFormats[format2.time];
      } else {
        skeleton = skeletonFromOptions(format2);
      }
    }
    if (skeleton) {
      result = skeletonFormat(skeleton, info);
    }
  }
  if (!result) {
    result = calendar.patterns.d;
  }
  return result;
}

// node_modules/@progress/kendo-intl/dist/es/dates/date-name-type.js
function dateNameType(formatLength) {
  var nameType;
  if (formatLength <= 3) {
    nameType = "abbreviated";
  } else if (formatLength === 4) {
    nameType = "wide";
  } else if (formatLength === 5) {
    nameType = "narrow";
  } else if (formatLength === 6) {
    nameType = "short";
  }
  return nameType;
}

// node_modules/@progress/kendo-intl/dist/es/dates/format-names.js
function formatNames(locale2, type, formatLength, standAlone, lower) {
  return dateFormatNames(locale2, {
    type,
    nameType: dateNameType(formatLength),
    standAlone,
    lower
  });
}

// node_modules/@progress/kendo-intl/dist/es/common/is-date.js
function isFunction(fun) {
  return typeof fun === "function";
}
function isDate(value3) {
  return Boolean(value3) && isFunction(value3.getTime) && isFunction(value3.getMonth);
}

// node_modules/@progress/kendo-intl/dist/es/dates/constants.js
var MONTH = "month";
var HOUR = "hour";
var ZONE = "zone";
var WEEKDAY = "weekday";
var QUARTER = "quarter";
var DATE_FIELD_MAP = {
  "G": "era",
  "y": "year",
  "q": QUARTER,
  "Q": QUARTER,
  "M": MONTH,
  "L": MONTH,
  "d": "day",
  "E": WEEKDAY,
  "c": WEEKDAY,
  "e": WEEKDAY,
  "h": HOUR,
  "H": HOUR,
  "k": HOUR,
  "K": HOUR,
  "m": "minute",
  "s": "second",
  "S": "millisecond",
  "a": "dayperiod",
  "x": ZONE,
  "X": ZONE,
  "z": ZONE,
  "Z": ZONE
};
var dateFormatRegExp = /d{1,2}|E{1,6}|e{1,6}|c{3,6}|c{1}|M{1,5}|L{1,5}|y{1,4}|H{1,2}|h{1,2}|k{1,2}|K{1,2}|m{1,2}|a{1,5}|s{1,2}|S{1,3}|z{1,4}|Z{1,5}|x{1,5}|X{1,5}|G{1,5}|q{1,5}|Q{1,5}|"[^"]*"|'[^']*'/g;

// node_modules/@progress/kendo-intl/dist/es/dates/format-date.js
function formatDayOfWeekIndex(day, formatLength, localeInfo2) {
  var firstDayIndex = firstDay(localeInfo2);
  var dayIndex;
  if (day < firstDayIndex) {
    dayIndex = 7 - firstDayIndex + day;
  } else {
    dayIndex = day - firstDayIndex;
  }
  return dayIndex + 1;
}
function formatMonth(month, formatLength, info, standAlone) {
  if (formatLength <= 2) {
    return pad(month + 1, formatLength);
  }
  return formatNames(info, "months", formatLength, standAlone)[month];
}
function formatQuarter(date, formatLength, info, standAlone) {
  var quarter = Math.floor(date.getMonth() / 3);
  if (formatLength < 3) {
    return quarter + 1;
  }
  return formatNames(info, "quarters", formatLength, standAlone)[quarter];
}
function formatTimeZone(date, info, options) {
  var shortHours = options.shortHours;
  var optionalMinutes = options.optionalMinutes;
  var separator = options.separator;
  var localizedName = options.localizedName;
  var zZeroOffset = options.zZeroOffset;
  var offset = date.getTimezoneOffset() / 60;
  if (offset === 0 && zZeroOffset) {
    return "Z";
  }
  var sign = offset <= 0 ? "+" : "-";
  var hoursMinutes = Math.abs(offset).toString().split(".");
  var minutes = hoursMinutes[1] || 0;
  var result = sign + (shortHours ? hoursMinutes[0] : pad(hoursMinutes[0], 2));
  if (minutes || !optionalMinutes) {
    result += (separator ? ":" : EMPTY) + pad(minutes, 2);
  }
  if (localizedName) {
    var localizedFormat = offset === 0 ? info.calendar.gmtZeroFormat : info.calendar.gmtFormat;
    result = formatString(localizedFormat, result);
  }
  return result;
}
function formatDayOfWeek(date, formatLength, info, standAlone) {
  var result;
  if (formatLength < 3) {
    result = formatDayOfWeekIndex(date.getDay(), formatLength, info);
  } else {
    result = formatNames(info, "days", formatLength, standAlone)[date.getDay()];
  }
  return result;
}
var formatters = {};
formatters.d = function(date, formatLength) {
  return pad(date.getDate(), formatLength);
};
formatters.E = function(date, formatLength, info) {
  return formatNames(info, "days", formatLength)[date.getDay()];
};
formatters.M = function(date, formatLength, info) {
  return formatMonth(date.getMonth(), formatLength, info, false);
};
formatters.L = function(date, formatLength, info) {
  return formatMonth(date.getMonth(), formatLength, info, true);
};
formatters.y = function(date, formatLength) {
  var year = date.getFullYear();
  if (formatLength === 2) {
    year = year % 100;
  }
  return pad(year, formatLength);
};
formatters.h = function(date, formatLength) {
  var hours = date.getHours() % 12 || 12;
  return pad(hours, formatLength);
};
formatters.H = function(date, formatLength) {
  return pad(date.getHours(), formatLength);
};
formatters.k = function(date, formatLength) {
  return pad(date.getHours() || 24, formatLength);
};
formatters.K = function(date, formatLength) {
  return pad(date.getHours() % 12, formatLength);
};
formatters.m = function(date, formatLength) {
  return pad(date.getMinutes(), formatLength);
};
formatters.s = function(date, formatLength) {
  return pad(date.getSeconds(), formatLength);
};
formatters.S = function(date, formatLength) {
  var milliseconds = date.getMilliseconds();
  var result;
  if (milliseconds !== 0) {
    result = pad(String(milliseconds / 1e3).split(".")[1].substr(0, formatLength), formatLength, true);
  } else {
    result = pad(EMPTY, formatLength);
  }
  return result;
};
formatters.a = function(date, formatLength, info) {
  return formatNames(info, "dayPeriods", formatLength)[date.getHours() < 12 ? "am" : "pm"];
};
formatters.z = function(date, formatLength, info) {
  return formatTimeZone(date, info, {
    shortHours: formatLength < 4,
    optionalMinutes: formatLength < 4,
    separator: true,
    localizedName: true
  });
};
formatters.Z = function(date, formatLength, info) {
  return formatTimeZone(date, info, {
    separator: formatLength > 3,
    localizedName: formatLength === 4,
    zZeroOffset: formatLength === 5
  });
};
formatters.x = function(date, formatLength, info) {
  return formatTimeZone(date, info, {
    optionalMinutes: formatLength === 1,
    separator: formatLength === 3 || formatLength === 5
  });
};
formatters.X = function(date, formatLength, info) {
  return formatTimeZone(date, info, {
    optionalMinutes: formatLength === 1,
    separator: formatLength === 3 || formatLength === 5,
    zZeroOffset: true
  });
};
formatters.G = function(date, formatLength, info) {
  var era = date.getFullYear() >= 0 ? 1 : 0;
  return formatNames(info, "eras", formatLength)[era];
};
formatters.e = formatDayOfWeek;
formatters.c = function(date, formatLength, info) {
  return formatDayOfWeek(date, formatLength, info, true);
};
formatters.q = function(date, formatLength, info) {
  return formatQuarter(date, formatLength, info, true);
};
formatters.Q = formatQuarter;
function formatDate(date, format2, locale2) {
  if (locale2 === void 0)
    locale2 = DEFAULT_LOCALE;
  if (!isDate(date)) {
    if (date === void 0 || date === null) {
      return EMPTY;
    }
    return date;
  }
  var info = localeInfo(locale2);
  var pattern = datePattern(format2, info);
  return pattern.replace(dateFormatRegExp, function(match) {
    var formatLength = match.length;
    var result;
    if (match.includes("'") || match.includes('"')) {
      result = match.slice(1, formatLength - 1);
    } else {
      result = formatters[match[0]](date, formatLength, info);
    }
    return result;
  });
}

// node_modules/@progress/kendo-intl/dist/es/dates/time-utils.js
function convertTimeZone(date, fromOffset, toOffset) {
  var fromLocalOffset = date.getTimezoneOffset();
  var offsetDate = new Date(date.getTime() + (fromOffset - toOffset) * 6e4);
  var toLocalOffset = offsetDate.getTimezoneOffset();
  return new Date(offsetDate.getTime() + (toLocalOffset - fromLocalOffset) * 6e4);
}
function adjustDST(date, hours) {
  if (!hours && date.getHours() === 23) {
    date.setHours(date.getHours() + 2);
  }
}

// node_modules/@progress/kendo-intl/dist/es/dates/parse-date.js
var timeZoneOffsetRegExp = /([+|-]\d{1,2})(:?)(\d{2})?/;
var dateRegExp = /^\/Date\((.*?)\)\/$/;
var offsetRegExp = /[+-]\d*/;
var numberRegExp = {
  2: /^\d{1,2}/,
  3: /^\d{1,3}/,
  4: /^\d{4}/
};
var numberRegex = /\d+/;
var PLACEHOLDER2 = "{0}";
var leadingSpacesRegex = /^ */;
var trailingSpacesRegex = / *$/;
var standardDateFormats = [
  "yyyy/MM/dd HH:mm:ss",
  "yyyy/MM/dd HH:mm",
  "yyyy/MM/dd",
  "E MMM dd yyyy HH:mm:ss",
  "yyyy-MM-ddTHH:mm:ss.SSSSSSSXXX",
  "yyyy-MM-ddTHH:mm:ss.SSSXXX",
  "yyyy-MM-ddTHH:mm:ss.SSXXX",
  "yyyy-MM-ddTHH:mm:ssXXX",
  "yyyy-MM-ddTHH:mm:ss.SSSSSSS",
  "yyyy-MM-ddTHH:mm:ss.SSS",
  "yyyy-MM-ddTHH:mmXXX",
  "yyyy-MM-ddTHH:mmX",
  "yyyy-MM-ddTHH:mm:ss",
  "yyyy-MM-ddTHH:mm",
  "yyyy-MM-dd HH:mm:ss",
  "yyyy-MM-dd HH:mm",
  "yyyy-MM-dd",
  "HH:mm:ss",
  "HH:mm"
];
var FORMATS_SEQUENCE = ["G", "g", "F", "Y", "y", "M", "m", "D", "d", "y", "T", "t"];
var TWO_DIGIT_YEAR_MAX = 2029;
function outOfRange(value3, start, end) {
  return !(value3 >= start && value3 <= end);
}
function lookAhead(match, state) {
  var format2 = state.format;
  var idx = state.idx;
  var i = 0;
  while (format2[idx] === match) {
    i++;
    idx++;
  }
  if (i > 0) {
    idx -= 1;
  }
  state.idx = idx;
  return i;
}
function getNumber(size, state) {
  var regex = size ? numberRegExp[size] || new RegExp("^\\d{1," + size + "}") : numberRegex, match = state.value.substr(state.valueIdx, size).match(regex);
  if (match) {
    match = match[0];
    state.valueIdx += match.length;
    return parseInt(match, 10);
  }
  return null;
}
function getIndexByName(names, state, lower) {
  var i = 0, length = names.length, name, nameLength, matchLength = 0, matchIdx = 0, subValue;
  for (; i < length; i++) {
    name = names[i];
    nameLength = name.length;
    subValue = state.value.substr(state.valueIdx, nameLength);
    if (lower) {
      subValue = subValue.toLowerCase();
    }
    if (subValue === name && nameLength > matchLength) {
      matchLength = nameLength;
      matchIdx = i;
    }
  }
  if (matchLength) {
    state.valueIdx += matchLength;
    return matchIdx + 1;
  }
  return null;
}
function checkLiteral(state) {
  var result = false;
  if (state.value.charAt(state.valueIdx) === state.format[state.idx]) {
    state.valueIdx++;
    result = true;
  }
  return result;
}
function calendarGmtFormats(calendar) {
  var gmtFormat = calendar.gmtFormat;
  var gmtZeroFormat = calendar.gmtZeroFormat;
  if (!gmtFormat) {
    throw errors.NoGMTInfo.error();
  }
  return [gmtFormat.replace(PLACEHOLDER2, EMPTY).toLowerCase(), gmtZeroFormat.replace(PLACEHOLDER2, EMPTY).toLowerCase()];
}
function parseTimeZoneOffset(state, info, options) {
  var shortHours = options.shortHours;
  var noSeparator = options.noSeparator;
  var optionalMinutes = options.optionalMinutes;
  var localizedName = options.localizedName;
  var zLiteral = options.zLiteral;
  state.UTC = true;
  if (zLiteral && state.value.charAt(state.valueIdx) === "Z") {
    state.valueIdx++;
    return false;
  }
  if (localizedName && !getIndexByName(calendarGmtFormats(info.calendar), state, true)) {
    return true;
  }
  var matches = timeZoneOffsetRegExp.exec(state.value.substr(state.valueIdx, 6));
  if (!matches) {
    return !localizedName;
  }
  var hoursMatch = matches[1];
  var minutesMatch = matches[3];
  var hoursOffset = parseInt(hoursMatch, 10);
  var separator = matches[2];
  var minutesOffset = parseInt(minutesMatch, 10);
  if (isNaN(hoursOffset) || !shortHours && hoursMatch.length !== 3 || !optionalMinutes && isNaN(minutesOffset) || noSeparator && separator) {
    return true;
  }
  if (isNaN(minutesOffset)) {
    minutesOffset = null;
  }
  if (outOfRange(hoursOffset, -12, 13) || minutesOffset && outOfRange(minutesOffset, 0, 59)) {
    return true;
  }
  state.valueIdx += matches[0].length;
  state.hoursOffset = hoursOffset;
  state.minutesOffset = minutesOffset;
}
function parseMonth(ch, state, info) {
  var count = lookAhead(ch, state);
  var names = formatNames(info, "months", count, ch === "L", true);
  var month = count < 3 ? getNumber(2, state) : getIndexByName(names, state, true);
  if (month === null || outOfRange(month, 1, 12)) {
    return true;
  }
  state.month = month - 1;
}
function parseDayOfWeek(ch, state, info) {
  var count = lookAhead(ch, state);
  var names = formatNames(info, "days", count, ch === "c", true);
  var dayOfWeek = count < 3 ? getNumber(1, state) : getIndexByName(names, state, true);
  if (!dayOfWeek && dayOfWeek !== 0 || outOfRange(dayOfWeek, 1, 7)) {
    return true;
  }
}
var parsers = {};
parsers.d = function(state) {
  lookAhead("d", state);
  var day = getNumber(2, state);
  if (day === null || outOfRange(day, 1, 31)) {
    return true;
  }
  if (state.day === null) {
    state.day = day;
  }
};
parsers.E = function(state, info) {
  var count = lookAhead("E", state);
  var dayOfWeek = getIndexByName(formatNames(info, "days", count, false, true), state, true);
  if (dayOfWeek === null) {
    return true;
  }
};
parsers.M = function(state, info) {
  return parseMonth("M", state, info);
};
parsers.L = function(state, info) {
  return parseMonth("L", state, info);
};
parsers.y = function(state) {
  var count = lookAhead("y", state);
  var year = getNumber(count === 1 ? void 0 : count, state);
  if (year === null) {
    return true;
  }
  if (count === 2) {
    var currentYear = new Date().getFullYear();
    year = currentYear - currentYear % 100 + year;
    if (year > TWO_DIGIT_YEAR_MAX) {
      year -= 100;
    }
  }
  state.year = year;
};
parsers.h = function(state) {
  lookAhead("h", state);
  var hours = getNumber(2, state);
  if (hours === 12) {
    hours = 0;
  }
  if (hours === null || outOfRange(hours, 0, 11)) {
    return true;
  }
  state.hours = hours;
};
parsers.K = function(state) {
  lookAhead("K", state);
  var hours = getNumber(2, state);
  if (hours === null || outOfRange(hours, 0, 11)) {
    return true;
  }
  state.hours = hours;
};
parsers.a = function(state, info) {
  var count = lookAhead("a", state);
  var periodFormats = formatNames(info, "dayPeriods", count, false, true);
  var pmHour = getIndexByName([periodFormats.pm], state, true);
  if (!pmHour && !getIndexByName([periodFormats.am], state, true)) {
    return true;
  }
  state.pmHour = pmHour;
};
parsers.H = function(state) {
  lookAhead("H", state);
  var hours = getNumber(2, state);
  if (hours === null || outOfRange(hours, 0, 23)) {
    return true;
  }
  state.hours = hours;
};
parsers.k = function(state) {
  lookAhead("k", state);
  var hours = getNumber(2, state);
  if (hours === null || outOfRange(hours, 1, 24)) {
    return true;
  }
  state.hours = hours === 24 ? 0 : hours;
};
parsers.m = function(state) {
  lookAhead("m", state);
  var minutes = getNumber(2, state);
  if (minutes === null || outOfRange(minutes, 0, 59)) {
    return true;
  }
  state.minutes = minutes;
};
parsers.s = function(state) {
  lookAhead("s", state);
  var seconds = getNumber(2, state);
  if (seconds === null || outOfRange(seconds, 0, 59)) {
    return true;
  }
  state.seconds = seconds;
};
parsers.S = function(state) {
  var count = lookAhead("S", state);
  var match = state.value.substr(state.valueIdx, count);
  var milliseconds = null;
  if (!isNaN(parseInt(match, 10))) {
    milliseconds = parseFloat("0." + match, 10);
    milliseconds = round(milliseconds, 3);
    milliseconds *= 1e3;
    state.valueIdx += count;
  }
  if (milliseconds === null || outOfRange(milliseconds, 0, 999)) {
    return true;
  }
  state.milliseconds = milliseconds;
};
parsers.z = function(state, info) {
  var count = lookAhead("z", state);
  var shortFormat = count < 4;
  var invalid = parseTimeZoneOffset(state, info, {
    shortHours: shortFormat,
    optionalMinutes: shortFormat,
    localizedName: true
  });
  if (invalid) {
    return invalid;
  }
};
parsers.Z = function(state, info) {
  var count = lookAhead("Z", state);
  var invalid = parseTimeZoneOffset(state, info, {
    noSeparator: count < 4,
    zLiteral: count === 5,
    localizedName: count === 4
  });
  if (invalid) {
    return invalid;
  }
};
parsers.x = function(state, info) {
  var count = lookAhead("x", state);
  var invalid = parseTimeZoneOffset(state, info, {
    noSeparator: count !== 3 && count !== 5,
    optionalMinutes: count === 1
  });
  if (invalid) {
    return invalid;
  }
};
parsers.X = function(state, info) {
  var count = lookAhead("X", state);
  var invalid = parseTimeZoneOffset(state, info, {
    noSeparator: count !== 3 && count !== 5,
    optionalMinutes: count === 1,
    zLiteral: true
  });
  if (invalid) {
    return invalid;
  }
};
parsers.G = function(state, info) {
  var count = lookAhead("G", state);
  var eras = formatNames(info, "eras", count, false, true);
  var era = getIndexByName([eras[0], eras[1]], state, true);
  if (era === null) {
    return true;
  }
};
parsers.e = function(state, info) {
  return parseDayOfWeek("e", state, info);
};
parsers.c = function(state, info) {
  return parseDayOfWeek("c", state, info);
};
function createDate(state) {
  var year = state.year;
  var month = state.month;
  var day = state.day;
  var hours = state.hours;
  var minutes = state.minutes;
  var seconds = state.seconds;
  var milliseconds = state.milliseconds;
  var pmHour = state.pmHour;
  var UTC = state.UTC;
  var hoursOffset = state.hoursOffset;
  var minutesOffset = state.minutesOffset;
  var hasTime = hours !== null || minutes !== null || seconds || null;
  var date = new Date();
  var result;
  if (year === null && month === null && day === null && hasTime) {
    year = date.getFullYear();
    month = date.getMonth();
    day = date.getDate();
  } else {
    if (year === null) {
      year = date.getFullYear();
    }
    if (day === null) {
      day = 1;
    }
  }
  if (pmHour && hours < 12) {
    hours += 12;
  }
  if (UTC) {
    if (hoursOffset) {
      hours += -hoursOffset;
    }
    if (minutesOffset) {
      minutes += -minutesOffset * (hoursOffset < 0 ? -1 : 1);
    }
    result = new Date(Date.UTC(year, month, day, hours, minutes, seconds, milliseconds));
  } else {
    result = new Date(year, month, day, hours, minutes, seconds, milliseconds);
    adjustDST(result, hours);
  }
  if (year < 100) {
    result.setFullYear(year);
  }
  if (result.getDate() !== day && UTC === void 0) {
    return null;
  }
  return result;
}
function addFormatSpaces(value3, format2) {
  var leadingSpaces = leadingSpacesRegex.exec(format2)[0];
  var trailingSpaces = trailingSpacesRegex.exec(format2)[0];
  return "" + leadingSpaces + value3 + trailingSpaces;
}
function parseExact(value3, format2, info) {
  var pattern = datePattern(format2, info).split(EMPTY);
  var state = {
    format: pattern,
    idx: 0,
    value: addFormatSpaces(value3, format2),
    valueIdx: 0,
    year: null,
    month: null,
    day: null,
    hours: null,
    minutes: null,
    seconds: null,
    milliseconds: null
  };
  var length = pattern.length;
  var literal = false;
  for (; state.idx < length; state.idx++) {
    var ch = pattern[state.idx];
    if (literal) {
      if (ch === "'") {
        literal = false;
      }
      checkLiteral(state);
    } else {
      if (parsers[ch]) {
        var invalid = parsers[ch](state, info);
        if (invalid) {
          return null;
        }
      } else if (ch === "'") {
        literal = true;
        checkLiteral(state);
      } else if (!checkLiteral(state)) {
        return null;
      }
    }
  }
  if (state.valueIdx < value3.length) {
    return null;
  }
  return createDate(state) || null;
}
function parseMicrosoftDateOffset(offset) {
  var sign = offset.substr(0, 1) === "-" ? -1 : 1;
  var result = offset.substring(1);
  result = parseInt(result.substr(0, 2), 10) * 60 + parseInt(result.substring(2), 10);
  return sign * result;
}
function parseMicrosoftDateFormat(value3) {
  if (value3 && value3.indexOf("/D") === 0) {
    var date = dateRegExp.exec(value3);
    if (date) {
      date = date[1];
      var tzoffset = offsetRegExp.exec(date.substring(1));
      date = new Date(parseInt(date, 10));
      if (tzoffset) {
        tzoffset = parseMicrosoftDateOffset(tzoffset[0]);
        date = convertTimeZone(date, date.getTimezoneOffset(), 0);
        date = convertTimeZone(date, 0, -1 * tzoffset);
      }
      return date;
    }
  }
}
function defaultFormats(calendar) {
  var formats = [];
  var patterns = calendar.patterns;
  var length = FORMATS_SEQUENCE.length;
  for (var idx = 0; idx < length; idx++) {
    formats.push(patterns[FORMATS_SEQUENCE[idx]]);
  }
  return formats.concat(standardDateFormats);
}
function parseDate(value3, formats, locale2) {
  if (locale2 === void 0)
    locale2 = DEFAULT_LOCALE;
  if (!value3) {
    return null;
  }
  if (isDate(value3)) {
    return value3;
  }
  var parseValue = String(value3).trim();
  var date = parseMicrosoftDateFormat(parseValue);
  if (date) {
    return date;
  }
  var info = localeInfo(locale2);
  var parseFormats = formats || defaultFormats(info.calendar);
  parseFormats = Array.isArray(parseFormats) ? parseFormats : [parseFormats];
  var length = parseFormats.length;
  for (var idx = 0; idx < length; idx++) {
    date = parseExact(parseValue, parseFormats[idx], info);
    if (date) {
      return date;
    }
  }
  return date;
}

// node_modules/@progress/kendo-intl/dist/es/dates/split-date-format.js
var NAME_TYPES = {
  month: {
    type: "months",
    minLength: 3,
    standAlone: "L"
  },
  quarter: {
    type: "quarters",
    minLength: 3,
    standAlone: "q"
  },
  weekday: {
    type: "days",
    minLength: {
      E: 0,
      c: 3,
      e: 3
    },
    standAlone: "c"
  },
  dayperiod: {
    type: "dayPeriods",
    minLength: 0
  },
  era: {
    type: "eras",
    minLength: 0
  }
};
var LITERAL = "literal";
function addLiteral(parts, value3) {
  var lastPart = parts[parts.length - 1];
  if (lastPart && lastPart.type === LITERAL) {
    lastPart.pattern += value3;
  } else {
    parts.push({
      type: LITERAL,
      pattern: value3
    });
  }
}
function isHour12(pattern) {
  return pattern === "h" || pattern === "K";
}
function splitDateFormat(format2, locale2) {
  if (locale2 === void 0)
    locale2 = DEFAULT_LOCALE;
  var info = localeInfo(locale2);
  var pattern = datePattern(format2, info);
  var parts = [];
  var lastIndex = dateFormatRegExp.lastIndex = 0;
  var match = dateFormatRegExp.exec(pattern);
  while (match) {
    var value3 = match[0];
    if (lastIndex < match.index) {
      addLiteral(parts, pattern.substring(lastIndex, match.index));
    }
    if (value3.startsWith('"') || value3.startsWith("'")) {
      addLiteral(parts, value3);
    } else {
      var specifier = value3[0];
      var type = DATE_FIELD_MAP[specifier];
      var part = {
        type,
        pattern: value3
      };
      if (type === "hour") {
        part.hour12 = isHour12(value3);
      }
      var names = NAME_TYPES[type];
      if (names) {
        var minLength = isNumber(names.minLength) ? names.minLength : names.minLength[specifier];
        var patternLength = value3.length;
        if (patternLength >= minLength) {
          part.names = {
            type: names.type,
            nameType: dateNameType(patternLength),
            standAlone: names.standAlone === specifier
          };
        }
      }
      parts.push(part);
    }
    lastIndex = dateFormatRegExp.lastIndex;
    match = dateFormatRegExp.exec(pattern);
  }
  if (lastIndex < pattern.length) {
    addLiteral(parts, pattern.substring(lastIndex));
  }
  return parts;
}

// node_modules/@progress/kendo-intl/dist/es/format.js
var formatRegExp3 = /\{(\d+)(:[^}]+)?\}/g;
function toString(value3, format2, locale2) {
  if (format2) {
    if (isDate(value3)) {
      return formatDate(value3, format2, locale2);
    } else if (isNumber(value3)) {
      return formatNumber(value3, format2, locale2);
    }
  }
  return value3 !== void 0 && value3 !== null ? value3 : EMPTY;
}
function format(format2, values, locale2) {
  return format2.replace(formatRegExp3, function(match, index, placeholderFormat) {
    var value3 = values[parseInt(index, 10)];
    return toString(value3, placeholderFormat ? placeholderFormat.substring(1) : EMPTY, locale2);
  });
}

// node_modules/@progress/kendo-vue-intl/dist/es/Intl/IntlService.js
var IntlService = function() {
  function IntlService2(locale2) {
    this.locale = locale2;
    if (locale2 === "" && true) {
      throw "Locale should not be empty string";
    }
  }
  IntlService2.prototype.format = function(format2) {
    var values = [];
    for (var _i = 1; _i < arguments.length; _i++) {
      values[_i - 1] = arguments[_i];
    }
    if (values.length === 1 && Array.isArray(values[0])) {
      return format(format2, values[0], this.locale);
    }
    return format(format2, values, this.locale);
  };
  IntlService2.prototype.formatDate = function(value3, format2) {
    return formatDate(value3, format2, this.locale);
  };
  IntlService2.prototype.toString = function(value3, format2) {
    return toString(value3, format2, this.locale);
  };
  IntlService2.prototype.parseNumber = function(value3, format2) {
    return parseNumber(value3, this.locale, format2);
  };
  IntlService2.prototype.parseDate = function(value3, format2) {
    return parseDate(value3, format2, this.locale);
  };
  IntlService2.prototype.formatNumber = function(value3, format2) {
    return formatNumber(value3, format2, this.locale);
  };
  IntlService2.prototype.dateFieldName = function(options) {
    return dateFieldName(options, this.locale);
  };
  IntlService2.prototype.dateFormatNames = function(options) {
    return dateFormatNames(this.locale, options);
  };
  IntlService2.prototype.splitDateFormat = function(format2) {
    return splitDateFormat(format2, this.locale);
  };
  IntlService2.prototype.numberSymbols = function() {
    return numberSymbols(this.locale);
  };
  IntlService2.prototype.firstDay = function() {
    return firstDay(this.locale);
  };
  return IntlService2;
}();

// node_modules/@progress/kendo-vue-intl/node_modules/@progress/kendo-vue-common/dist/es/canUseDOM.js
var canUseDOM = Boolean(typeof window !== "undefined" && window.document && window.document.createElement);

// node_modules/@progress/kendo-vue-intl/node_modules/@progress/kendo-vue-common/dist/es/defaultSlots.js
function getDefaultSlots2(component) {
  var defaultSlots = component.$slots.default;
  return component.v3 && defaultSlots && typeof defaultSlots === "function" ? defaultSlots() : defaultSlots;
}

// node_modules/@progress/kendo-vue-intl/node_modules/@progress/kendo-vue-common/dist/es/Draggable.js
var _DraggableVue;
function _defineProperty(obj, key, value3) {
  if (key in obj) {
    Object.defineProperty(obj, key, { value: value3, enumerable: true, configurable: true, writable: true });
  } else {
    obj[key] = value3;
  }
  return obj;
}
var allVue27 = vue_runtime_esm_bundler_exports;
var gh27 = allVue27.h;
var isV3 = allVue27.version[0] === "3";
var DraggableVue2 = (_DraggableVue = {
  emits: {
    press: null,
    drag: null,
    release: null
  },
  inheritAttrs: false,
  created: function created9() {
    this.element = null;
    this.draggable = new main_default({
      press: this.press,
      drag: this.drag,
      release: this.release
    });
  },
  setup: !isV3 ? void 0 : function() {
    var v3 = !!isV3;
    return {
      v3
    };
  },
  mounted: function mounted3() {
    if (this.$el) {
      this.element = this.$el.nodeType === 3 ? this.$el.nextElementSibling : this.$el;
      this.draggable.bindTo(this.element);
    }
  },
  destroyed: !!isV3 ? void 0 : function() {
    this.draggable.destroy();
  },
  unmounted: function unmounted2() {
    this.draggable.destroy();
  },
  methods: {
    press: function press(event) {
      if (this.element) {
        this.$emit("press", event, this.element);
      }
    },
    drag: function drag(event) {
      if (this.element) {
        this.$emit("drag", event, this.element);
      }
    },
    release: function release(event) {
      if (this.element) {
        this.$emit("release", event, this.element);
      }
    }
  }
}, _defineProperty(_DraggableVue, "setup", !isV3 ? void 0 : function() {
  var v3 = !!isV3;
  return {
    v3
  };
}), _defineProperty(_DraggableVue, "render", function render23(createElement) {
  var h = gh27 || createElement;
  return getDefaultSlots2(this);
}), _DraggableVue);

// node_modules/@progress/kendo-vue-intl/node_modules/@progress/kendo-vue-common/dist/es/getter.js
var getterCache = {};
getterCache.undefined = function() {
  return void 0;
};

// node_modules/@progress/kendo-vue-intl/node_modules/@progress/kendo-vue-common/dist/es/setter.js
var setterCache = {};
setterCache.undefined = function(obj) {
  return obj;
};

// node_modules/@progress/kendo-vue-intl/node_modules/@progress/kendo-vue-common/dist/es/templateRendering.js
var allVue28 = vue_runtime_esm_bundler_exports;
var isV32 = allVue28.version[0] === "3";

// node_modules/@progress/kendo-vue-intl/node_modules/@progress/kendo-vue-common/dist/es/validate-package.js
function validatePackage3(packageMetadata6) {
  if (typeof index_esm_exports !== "undefined") {
    validatePackage(packageMetadata6);
  } else {
    var message = "License activation failed for " + packageMetadata6.name + "\n";
    message += "The @progress/kendo-licensing script is not loaded.\n";
    message += "See " + packageMetadata6.licensingDocsUrl + " for more information.\n";
    console.warn(message);
  }
}

// node_modules/@progress/kendo-vue-intl/dist/es/package-metadata.js
var packageMetadata3 = {
  name: "@progress/kendo-vue-intl",
  productName: "Kendo UI for Vue",
  productCodes: ["KENDOUIVUE", "KENDOUICOMPLETE"],
  publishDate: 1657171848,
  version: "",
  licensingDocsUrl: "https://www.telerik.com/kendo-vue-ui/my-license/?utm_medium=product&utm_source=kendovue&utm_campaign=kendo-ui-vue-purchase-license-keys-warning"
};

// node_modules/@progress/kendo-vue-intl/dist/es/Intl/IntlProvider.js
var allVue29 = vue_runtime_esm_bundler_exports;
var gh28 = allVue29.h;
var isV33 = allVue29.version[0] === "3";
var ref6 = allVue29.ref;
var provide3 = allVue29.provide;
var IntlProviderVue2 = {
  props: {
    locale: String
  },
  data: function data5() {
    return this.getChildContext();
  },
  setup: !isV33 ? void 0 : function(props) {
    var v3 = !!isV33;
    var intlService = ref6(new IntlService(props.locale));
    provide3("kendoIntlService", intlService);
    return {
      v3
    };
  },
  watch: {
    locale: function locale(newLocale) {
      this.$data.kendoIntlService.locale = newLocale;
    }
  },
  provide: function provide4() {
    return {
      kendoIntlService: this.$data.kendoIntlService
    };
  },
  methods: {
    getIntlService: function getIntlService() {
      return new IntlService(this.$props.locale);
    },
    getChildContext: function getChildContext() {
      return {
        kendoIntlService: this.getIntlService()
      };
    }
  },
  created: function created10() {
    validatePackage3(packageMetadata3);
  },
  render: function render24(createElement) {
    var h = gh28 || createElement;
    var defaultSlot = getDefaultSlots2(this);
    return h("div", [defaultSlot]);
  }
};
var IntlProvider = IntlProviderVue2;

// node_modules/@progress/kendo-vue-intl/dist/es/Intl/main.js
var vue = "Vue";
if (typeof window !== "undefined" && window[vue] && window[vue].component) {
  window[vue].component("kendo-intl-provider", IntlProvider);
}

// node_modules/@progress/kendo-vue-intl/dist/es/Localization/messages.js
var messages = /* @__PURE__ */ Object.create({});

// node_modules/@progress/kendo-vue-intl/dist/es/Localization/LocalizationService.js
var LocalizationService = function() {
  function LocalizationService2(language2) {
    this.language = language2;
    if (language2 === "" && true) {
      throw "Language should not be an empty string";
    }
  }
  LocalizationService2.prototype.toLanguageString = function(key, defaultValue) {
    if (this.language && messages[this.language] && messages[this.language].hasOwnProperty(key)) {
      return messages[this.language][key];
    } else if (Object.keys(this)[0] && messages[Object.values(this)[0]] && messages[Object.values(this)[0]].hasOwnProperty(key)) {
      return messages[Object.values(this)[0]][key];
    } else {
      return defaultValue;
    }
  };
  return LocalizationService2;
}();

// node_modules/@progress/kendo-vue-intl/dist/es/Localization/LocalizationProvider.js
var allVue30 = vue_runtime_esm_bundler_exports;
var gh29 = allVue30.h;
var isV34 = allVue30.version[0] === "3";
var ref7 = allVue30.ref;
var provide5 = allVue30.provide;
var LocalizationProviderVue2 = {
  props: {
    language: String
  },
  data: function data6() {
    return this.getChildContext();
  },
  watch: {
    language: function language(newLanguage) {
      this.$data.kendoLocalizationService.language = newLanguage;
    }
  },
  setup: !isV34 ? void 0 : function(props) {
    var v3 = !!isV34;
    var localizationService = ref7(new LocalizationService(props.language));
    provide5("kendoLocalizationService", localizationService);
    return {
      v3
    };
  },
  provide: function provide6() {
    return {
      kendoLocalizationService: this.$data.kendoLocalizationService
    };
  },
  methods: {
    getLocalizationService: function getLocalizationService() {
      return new LocalizationService(this.$props.language);
    },
    getChildContext: function getChildContext2() {
      return {
        kendoLocalizationService: this.getLocalizationService()
      };
    }
  },
  render: function render25(createElement) {
    var h = gh29 || createElement;
    var defaultSlot = getDefaultSlots2(this);
    return h("div", [defaultSlot]);
  }
};
var LocalizationProvider = LocalizationProviderVue2;

// node_modules/@progress/kendo-vue-intl/dist/es/Localization/main.js
var vue2 = "Vue";
if (typeof window !== "undefined" && window[vue2] && window[vue2].component) {
  window[vue2].component("kendo-localization-provider", LocalizationProvider);
}

// node_modules/@progress/kendo-vue-intl/dist/es/intlUtils.js
function provideLocalizationService(component) {
  if (!component && true) {
    throw "Passed component - " + component + " is invalid.";
  }
  var localizationServiceFromContext = component.kendoLocalizationService;
  return localizationServiceFromContext && Object.keys(localizationServiceFromContext).some(function(item) {
    return item === "language";
  }) ? localizationServiceFromContext : new LocalizationService();
}

// node_modules/@progress/kendo-vue-layout/dist/es/stepper/contants.js
var DEFAULT_ANIMATION_DURATION = 400;
var NO_ANIMATION2 = 0;

// node_modules/@progress/kendo-vue-layout/dist/es/stepper/messages/index.js
var _a;
var optionalText = "stepper.optionalText";
var messages2 = (_a = {}, _a[optionalText] = "(Optional)", _a);

// node_modules/@progress/kendo-vue-layout/dist/es/stepper/Step.js
var allVue31 = vue_runtime_esm_bundler_exports;
var gh30 = allVue31.h;
var inject5 = allVue31.inject;
var StepVue2 = {
  name: "KendoStep",
  props: {
    current: Boolean,
    disabled: Boolean,
    icon: String,
    index: Number,
    isValid: Boolean,
    focused: Boolean,
    label: String,
    optional: Boolean,
    tabIndex: {
      type: Number,
      default: 0
    },
    text: String,
    animationDuration: [Boolean, Number],
    isVertical: Boolean,
    item: [String, Object, Boolean, Function],
    linear: Boolean,
    mode: String,
    numOfSteps: Number,
    value: Number,
    successIcon: String,
    errorIcon: String
  },
  inject: {
    kendoLocalizationService: {
      default: null
    }
  },
  computed: {
    itemClassNames: function itemClassNames2() {
      var _a2 = this.$props, current = _a2.current, disabled = _a2.disabled, focused2 = _a2.focused, index = _a2.index, isValid = _a2.isValid, optional = _a2.optional;
      return {
        "k-step": true,
        "k-step-first": index === 0,
        "k-step-last": this.numOfSteps && index === this.numOfSteps - 1,
        "k-step-done": index < this.value,
        "k-step-current": current,
        "k-step-optional": optional,
        "k-step-disabled": disabled,
        "k-step-focus": focused2,
        "k-step-error": isValid !== void 0 && !isValid,
        "k-step-success": isValid
      };
    },
    itemStyles: function itemStyles() {
      var index = this.$props.index;
      var allowClick = !this.linear || index === this.value - 1 || index === this.value || index === this.value + 1;
      return {
        maxWidth: !this.isVertical ? "calc(100% / " + this.numOfSteps + ")" : void 0,
        pointerEvents: !allowClick ? "none" : void 0
      };
    }
  },
  watch: {
    focused: function focused(newValue) {
      this.aElement = this.$refs.aElement;
      if (this.aElement && newValue) {
        this.aElement.focus();
      }
    }
  },
  setup: !gh30 ? void 0 : function() {
    var v3 = !!gh30;
    var kendoLocalizationService = inject5("kendoLocalizationService", {});
    return {
      v3,
      kendoLocalizationService
    };
  },
  render: function render26(createElement) {
    var h = gh30 || createElement;
    var defaultSlots = getDefaultSlots(this);
    var _a2 = this.$props, current = _a2.current, disabled = _a2.disabled, focused2 = _a2.focused, icon = _a2.icon, index = _a2.index, isValid = _a2.isValid, label = _a2.label, optional = _a2.optional, tabIndex = _a2.tabIndex, text = _a2.text, animationDuration2 = _a2.animationDuration, item = _a2.item, linear = _a2.linear, mode = _a2.mode, value3 = _a2.value, successIcon = _a2.successIcon, errorIcon = _a2.errorIcon;
    var allowClick = !linear || index === value3 - 1 || index === value3 || index === value3 + 1;
    var isInLabel = mode === "labels" || Boolean(icon) && Boolean(label);
    var localizationService = provideLocalizationService(this);
    var localizeMessage = function localizeMessage2(message) {
      return localizationService.toLanguageString(message, messages2[message]);
    };
    var optionalMessage = localizeMessage(optionalText);
    var progressAnimation = typeof animationDuration2 === "number" ? animationDuration2 : animationDuration2 !== false ? DEFAULT_ANIMATION_DURATION : NO_ANIMATION2;
    var validationIconClasses = isValid ? successIcon ? "" + successIcon : "k-icon k-i-check" : errorIcon ? "" + errorIcon : "k-icon k-i-warning";
    var validationIcons = h("span", {
      "class": "k-step-indicator-icon " + validationIconClasses,
      "aria-hidden": "true",
      attrs: this.v3 ? void 0 : {
        "aria-hidden": "true"
      }
    });
    var stepIndicator = function stepIndicator2() {
      return mode !== "labels" ? h("span", {
        "class": "k-step-indicator",
        "aria-hidden": true,
        attrs: this.v3 ? void 0 : {
          "aria-hidden": true
        },
        style: {
          transitionDuration: progressAnimation + "ms"
        }
      }, [icon ? !isInLabel && isValid !== void 0 ? validationIcons : h("span", {
        "class": "k-step-indicator-icon k-icon " + icon
      }) : isValid !== void 0 ? validationIcons : h("span", {
        "class": "k-step-indicator-text"
      }, [text ? text : index + 1])]) : null;
    };
    var stepLabel = function stepLabel2() {
      return h("span", {
        "class": "k-step-label"
      }, [label && h("span", {
        "class": "k-step-text"
      }, [label]), isInLabel && isValid !== void 0 && validationIcons, optional && h("span", {
        "class": "k-step-label-optional"
      }, [optionalMessage])]);
    };
    return h("li", {
      "class": this.itemClassNames,
      style: this.itemStyles
    }, [h("a", {
      ref: "aElement",
      "class": "k-step-link",
      title: label ? label : void 0,
      attrs: this.v3 ? void 0 : {
        title: label ? label : void 0,
        tabIndex: focused2 ? tabIndex : -1,
        "aria-current": current ? "step" : void 0,
        "aria-disabled": disabled || !allowClick || void 0,
        "aria-invalid": isValid !== void 0 && !isValid || void 0
      },
      onClick: this.handleClick,
      on: this.v3 ? void 0 : {
        "click": this.handleClick,
        "focusin": this.handleFocus
      },
      onFocusin: this.handleFocus,
      tabIndex: focused2 ? tabIndex : -1,
      "aria-current": current ? "step" : void 0,
      "aria-disabled": disabled || !allowClick || void 0,
      "aria-invalid": isValid !== void 0 && !isValid || void 0
    }, [!item ? [stepIndicator.call(this), stepLabel.call(this)] : defaultSlots])]);
  },
  methods: {
    focus: function focus4() {
      if (this.$el) {
        focusFirstFocusableChild(this.$el);
      }
    },
    handleClick: function handleClick2(event) {
      if (!this.disabled) {
        this.$emit("change", {
          event,
          value: this.index,
          component: this
        });
      }
    },
    handleFocus: function handleFocus(event) {
      if (!this.disabled) {
        this.$emit("focus", event);
      }
    }
  }
};
var Step = StepVue2;

// node_modules/@progress/kendo-vue-animation/dist/es/util.js
var outerHeight2 = function(element) {
  if (!element) {
    return 0;
  }
  var wnd = element.ownerDocument.defaultView;
  var computedStyles = wnd.getComputedStyle(element);
  var marginTop = parseFloat(computedStyles.marginTop);
  var marginBottom = parseFloat(computedStyles.marginBottom);
  return element.offsetHeight + marginTop + marginBottom;
};
var outerWidth2 = function(element) {
  if (!element) {
    return 0;
  }
  var wnd = element.ownerDocument.defaultView;
  var computedStyles = wnd.getComputedStyle(element);
  var marginLeft = parseFloat(computedStyles.marginLeft);
  var marginRight = parseFloat(computedStyles.marginRight);
  return element.offsetWidth + marginLeft + marginRight;
};
var styles4 = {
  "animation-container": "k-animation-container",
  "animation-container-relative": "k-animation-container-relative",
  "animation-container-fixed": "k-animation-container-fixed",
  "push-right-enter": "k-push-right-enter",
  "push-right-appear": "k-push-right-appear",
  "push-right-enter-active": "k-push-right-enter-active",
  "push-right-appear-active": "k-push-right-appear-active",
  "push-right-exit": "k-push-right-exit",
  "push-right-exit-active": "k-push-right-exit-active",
  "push-left-enter": "k-push-left-enter",
  "push-left-appear": "k-push-left-appear",
  "push-left-enter-active": "k-push-left-enter-active",
  "push-left-appear-active": "k-push-left-appear-active",
  "push-left-exit": "k-push-left-exit",
  "push-left-exit-active": "k-push-left-exit-active",
  "push-down-enter": "k-push-down-enter",
  "push-down-appear": "k-push-down-appear",
  "push-down-enter-active": "k-push-down-enter-active",
  "push-down-appear-active": "k-push-down-appear-active",
  "push-down-exit": "k-push-down-exit",
  "push-down-exit-active": "k-push-down-exit-active",
  "push-up-enter": "k-push-up-enter",
  "push-up-appear": "k-push-up-appear",
  "push-up-enter-active": "k-push-up-enter-active",
  "push-up-appear-active": "k-push-up-appear-active",
  "push-up-exit": "k-push-up-exit",
  "push-up-exit-active": "k-push-up-exit-active",
  "expand": "k-expand",
  "expand-vertical-enter": "k-expand-vertical-enter",
  "expand-vertical-appear": "k-expand-vertical-appear",
  "expand-vertical-enter-active": "k-expand-vertical-enter-active",
  "expand-vertical-appear-active": "k-expand-vertical-appear-active",
  "expand-vertical-exit": "k-expand-vertical-exit",
  "expand-vertical-exit-active": "k-expand-vertical-exit-active",
  "expand-horizontal-enter": "k-expand-horizontal-enter",
  "expand-horizontal-appear": "k-expand-horizontal-appear",
  "expand-horizontal-enter-active": "k-expand-horizontal-enter-active",
  "expand-horizontal-appear-active": "k-expand-horizontal-appear-active",
  "expand-horizontal-exit": "k-expand-horizontal-exit",
  "expand-horizontal-exit-active": "k-expand-horizontal-exit-active",
  "child-animation-container": "k-child-animation-container",
  "fade-enter": "k-fade-enter",
  "fade-appear": "k-fade-appear",
  "fade-enter-active": "k-fade-enter-active",
  "fade-appear-active": "k-fade-appear-active",
  "fade-exit": "k-fade-exit",
  "fade-exit-active": "k-fade-exit-active",
  "zoom-in-enter": "k-zoom-in-enter",
  "zoom-in-appear": "k-zoom-in-appear",
  "zoom-in-enter-active": "k-zoom-in-enter-active",
  "zoom-in-appear-active": "k-zoom-in-appear-active",
  "zoom-in-exit": "k-zoom-in-exit",
  "zoom-in-exit-active": "k-zoom-in-exit-active",
  "zoom-out-enter": "k-zoom-out-enter",
  "zoom-out-appear": "k-zoom-out-appear",
  "zoom-out-enter-active": "k-zoom-out-enter-active",
  "zoom-out-appear-active": "k-zoom-out-appear-active",
  "zoom-out-exit": "k-zoom-out-exit",
  "zoom-out-exit-active": "k-zoom-out-exit-active",
  "slide-in-appear": "k-slide-in-appear",
  "centered": "k-centered",
  "slide-in-appear-active": "k-slide-in-appear-active",
  "slide-down-enter": "k-slide-down-enter",
  "slide-down-appear": "k-slide-down-appear",
  "slide-down-enter-active": "k-slide-down-enter-active",
  "slide-down-appear-active": "k-slide-down-appear-active",
  "slide-down-exit": "k-slide-down-exit",
  "slide-down-exit-active": "k-slide-down-exit-active",
  "slide-up-enter": "k-slide-up-enter",
  "slide-up-appear": "k-slide-up-appear",
  "slide-up-enter-active": "k-slide-up-enter-active",
  "slide-up-appear-active": "k-slide-up-appear-active",
  "slide-up-exit": "k-slide-up-exit",
  "slide-up-exit-active": "k-slide-up-exit-active",
  "slide-right-enter": "k-slide-right-enter",
  "slide-right-appear": "k-slide-right-appear",
  "slide-right-enter-active": "k-slide-right-enter-active",
  "slide-right-appear-active": "k-slide-right-appear-active",
  "slide-right-exit": "k-slide-right-exit",
  "slide-right-exit-active": "k-slide-right-exit-active",
  "slide-left-enter": "k-slide-left-enter",
  "slide-left-appear": "k-slide-left-appear",
  "slide-left-enter-active": "k-slide-left-enter-active",
  "slide-left-appear-active": "k-slide-left-appear-active",
  "slide-left-exit": "k-slide-left-exit",
  "slide-left-exit-active": "k-slide-left-exit-active",
  "reveal-vertical-enter": "k-reveal-vertical-enter",
  "reveal-vertical-appear": "k-reveal-vertical-appear",
  "reveal-vertical-enter-active": "k-reveal-vertical-enter-active",
  "reveal-vertical-appear-active": "k-reveal-vertical-appear-active",
  "reveal-vertical-exit": "k-reveal-vertical-exit",
  "reveal-vertical-exit-active": "k-reveal-vertical-exit-active",
  "reveal-horizontal-enter": "k-reveal-horizontal-enter",
  "reveal-horizontal-appear": "k-reveal-horizontal-appear",
  "reveal-horizontal-enter-active": "k-reveal-horizontal-enter-active",
  "reveal-horizontal-appear-active": "k-reveal-horizontal-appear-active",
  "reveal-horizontal-exit": "k-reveal-horizontal-exit",
  "reveal-horizontal-exit-active": "k-reveal-horizontal-exit-active"
};
var util_default2 = {
  outerHeight: outerHeight2,
  outerWidth: outerWidth2,
  styles: styles4
};

// node_modules/@progress/kendo-vue-animation/node_modules/@progress/kendo-vue-common/dist/es/canUseDOM.js
var canUseDOM2 = Boolean(typeof window !== "undefined" && window.document && window.document.createElement);

// node_modules/@progress/kendo-vue-animation/node_modules/@progress/kendo-vue-common/dist/es/defaultSlots.js
function getDefaultSlots3(component) {
  var defaultSlots = component.$slots.default;
  return component.v3 && defaultSlots && typeof defaultSlots === "function" ? defaultSlots() : defaultSlots;
}

// node_modules/@progress/kendo-vue-animation/node_modules/@progress/kendo-vue-common/dist/es/Draggable.js
var _DraggableVue2;
function _defineProperty2(obj, key, value3) {
  if (key in obj) {
    Object.defineProperty(obj, key, { value: value3, enumerable: true, configurable: true, writable: true });
  } else {
    obj[key] = value3;
  }
  return obj;
}
var allVue32 = vue_runtime_esm_bundler_exports;
var gh31 = allVue32.h;
var isV35 = allVue32.version[0] === "3";
var DraggableVue22 = (_DraggableVue2 = {
  emits: {
    press: null,
    drag: null,
    release: null
  },
  inheritAttrs: false,
  created: function created11() {
    this.element = null;
    this.draggable = new main_default({
      press: this.press,
      drag: this.drag,
      release: this.release
    });
  },
  setup: !isV35 ? void 0 : function() {
    var v3 = !!isV35;
    return {
      v3
    };
  },
  mounted: function mounted4() {
    if (this.$el) {
      this.element = this.$el.nodeType === 3 ? this.$el.nextElementSibling : this.$el;
      this.draggable.bindTo(this.element);
    }
  },
  destroyed: !!isV35 ? void 0 : function() {
    this.draggable.destroy();
  },
  unmounted: function unmounted3() {
    this.draggable.destroy();
  },
  methods: {
    press: function press2(event) {
      if (this.element) {
        this.$emit("press", event, this.element);
      }
    },
    drag: function drag2(event) {
      if (this.element) {
        this.$emit("drag", event, this.element);
      }
    },
    release: function release2(event) {
      if (this.element) {
        this.$emit("release", event, this.element);
      }
    }
  }
}, _defineProperty2(_DraggableVue2, "setup", !isV35 ? void 0 : function() {
  var v3 = !!isV35;
  return {
    v3
  };
}), _defineProperty2(_DraggableVue2, "render", function render27(createElement) {
  var h = gh31 || createElement;
  return getDefaultSlots3(this);
}), _DraggableVue2);

// node_modules/@progress/kendo-vue-animation/node_modules/@progress/kendo-vue-common/dist/es/getter.js
var getterCache2 = {};
getterCache2.undefined = function() {
  return void 0;
};

// node_modules/@progress/kendo-vue-animation/node_modules/@progress/kendo-vue-common/dist/es/setter.js
var setterCache2 = {};
setterCache2.undefined = function(obj) {
  return obj;
};

// node_modules/@progress/kendo-vue-animation/node_modules/@progress/kendo-vue-common/dist/es/templateRendering.js
var allVue33 = vue_runtime_esm_bundler_exports;
var isV36 = allVue33.version[0] === "3";

// node_modules/@progress/kendo-vue-animation/dist/es/AnimationChild.js
var allVue34 = vue_runtime_esm_bundler_exports;
var gh32 = allVue34.h;
var isV37 = allVue34.version[0] === "3";
var ref8 = allVue34.ref;
var Transition2 = allVue34.Transition;
var styles5 = util_default2.styles;

// node_modules/@progress/kendo-vue-animation/dist/es/Animation.js
var allVue35 = vue_runtime_esm_bundler_exports;
var gh33 = allVue35.h;
var isV38 = allVue35.version[0] === "3";
var styles6 = util_default2.styles;

// node_modules/@progress/kendo-vue-animation/dist/es/Fade.js
var allVue36 = vue_runtime_esm_bundler_exports;
var gh34 = allVue36.h;
var isV39 = allVue36.version[0] === "3";

// node_modules/@progress/kendo-vue-animation/dist/es/Expand.js
var allVue37 = vue_runtime_esm_bundler_exports;
var gh35 = allVue37.h;
var isV310 = allVue37.version[0] === "3";

// node_modules/@progress/kendo-vue-animation/dist/es/Push.js
var allVue38 = vue_runtime_esm_bundler_exports;
var gh36 = allVue38.h;
var isV311 = allVue38.version[0] === "3";

// node_modules/@progress/kendo-vue-animation/dist/es/Slide.js
var allVue39 = vue_runtime_esm_bundler_exports;
var gh37 = allVue39.h;
var isV312 = allVue39.version[0] === "3";

// node_modules/@progress/kendo-vue-animation/dist/es/Zoom.js
var allVue40 = vue_runtime_esm_bundler_exports;
var gh38 = allVue40.h;
var isV313 = allVue40.version[0] === "3";

// node_modules/@progress/kendo-vue-animation/dist/es/Reveal.js
var allVue41 = vue_runtime_esm_bundler_exports;
var gh39 = allVue41.h;
var isV314 = allVue41.version[0] === "3";

// node_modules/@progress/kendo-vue-animation/dist/es/hooks/useAnimation.js
var animate2 = function animate3(transition, offset, animationFrame) {
  if (offset === void 0) {
    offset = 0;
  }
  if (animationFrame === void 0) {
    animationFrame = 0;
  }
  var duration = transition.duration;
  var start;
  var progress;
  var skip = offset && 1 - offset;
  if (transition.onStart) {
    transition.onStart();
  }
  var frame = function frame2(timestamp) {
    if (!start) {
      start = timestamp;
    }
    progress = timestamp - start + 1;
    var rate = progress / duration + skip;
    if (rate <= 1) {
      if (transition.onUpdate) {
        transition.onUpdate(rate);
      }
      animationFrame = window.requestAnimationFrame(frame2);
      offset = rate;
    } else {
      if (transition.onEnd) {
        transition.onEnd(1);
      }
      offset = 0;
    }
  };
  animationFrame = window.requestAnimationFrame(frame);
  return animationFrame;
};
var cancelAnimation2 = function cancelAnimation3(animationFrame) {
  if (animationFrame) {
    window.cancelAnimationFrame(animationFrame);
  }
};

// node_modules/@progress/kendo-vue-progressbars/dist/es/common/constants.js
var LABEL_DECIMALS = 3;
var DEFAULT_ANIMATION_DURATION2 = 400;
var NO_ANIMATION3 = 0;

// node_modules/@progress/kendo-vue-progressbars/dist/es/common/utils.js
var truncateNumber = function(value3) {
  var numberParts = value3.toString().split(".");
  return numberParts.length === 1 ? "" + numberParts[0] : numberParts[0] + "." + numberParts[1].substr(0, LABEL_DECIMALS);
};
var calculatePercentage = function(min, max, value3) {
  var onePercent = Math.abs((max - min) / 100);
  return Math.abs((value3 - min) / onePercent);
};
var updateProgress = function(progressRef, progressWrapRef, percentage, isVertical3) {
  var progressPercentage = Math.max(percentage, 0.01);
  var progressWrapPercentage = 100 / progressPercentage * 100;
  if (progressRef && progressWrapRef) {
    progressRef.style.width = !isVertical3 ? progressPercentage + "%" : "100%";
    progressWrapRef.style.width = !isVertical3 ? progressWrapPercentage + "%" : "100%";
    progressRef.style.height = isVertical3 ? progressPercentage + "%" : "100%";
    progressWrapRef.style.height = isVertical3 ? progressWrapPercentage + "%" : "100%";
  }
};

// node_modules/@progress/kendo-vue-progressbars/dist/es/package-metadata.js
var packageMetadata5 = {
  name: "@progress/kendo-vue-progressbars",
  productName: "Kendo UI for Vue",
  productCodes: ["KENDOUIVUE", "KENDOUICOMPLETE"],
  publishDate: 1656415365,
  version: "",
  licensingDocsUrl: "https://www.telerik.com/kendo-vue-ui/my-license/?utm_medium=product&utm_source=kendovue&utm_campaign=kendo-ui-vue-purchase-license-keys-warning"
};

// node_modules/@progress/kendo-vue-progressbars/dist/es/progressbar/ProgressBar.js
var allVue42 = vue_runtime_esm_bundler_exports;
var gh40 = allVue42.h;
var ProgressBarVue2 = {
  name: "KendoProgressBar",
  props: {
    animation: {
      type: [Boolean, Object],
      default: false
    },
    disabled: {
      type: Boolean,
      default: false
    },
    reverse: {
      type: Boolean,
      default: false
    },
    label: String,
    labelRender: [String, Object, Function],
    labelVisible: {
      type: Boolean,
      default: true
    },
    labelPlacement: {
      type: String,
      default: void 0,
      validator: function validator12(value3) {
        return ["start", "center", "end"].includes(value3);
      }
    },
    dir: {
      type: String,
      default: void 0
    },
    max: {
      type: Number,
      default: 100
    },
    min: {
      type: Number,
      default: 0
    },
    value: {
      type: Number,
      default: 0
    },
    orientation: {
      type: String,
      default: "horizontal",
      validator: function validator13(value3) {
        return ["horizontal", "vertical"].includes(value3);
      }
    },
    tabIndex: Number,
    emptyStyle: Object,
    emptyClassName: String,
    progressStyle: Object,
    progressClassName: String
  },
  created: function created12() {
    validatePackage2(packageMetadata5);
    this.currentDir = this.$props.dir;
  },
  mounted: function mounted5() {
    this._progressStatus = this.v3 ? this.progressStatusRef : this.$refs.progressStatus;
    this._progressStatusWrap = this.v3 ? this.progressStatusWrapRef : this.$refs.progressStatusWrap;
    this.currentDir = this.$props.dir !== void 0 ? this.$props.dir : isRtl(this.$el) ? "rtl" : "ltr";
    this.animationFrame = animate2({
      duration: this.animationDuration,
      onStart: this.handleStart,
      onUpdate: this.handleUpdate,
      onEnd: this.handleEnd
    });
  },
  destroyed: !!gh40 ? void 0 : function() {
    cancelAnimation2(this.animationFrame);
  },
  unmounted: function unmounted4() {
    cancelAnimation2(this.animationFrame);
  },
  data: function data7() {
    return {
      currentDir: void 0
    };
  },
  watch: {
    value: function value(_newValue, oldValue) {
      this.prevValue = oldValue;
      this.animationFrame = animate2({
        duration: this.animationDuration,
        onStart: this.handleStart,
        onUpdate: this.handleUpdate,
        onEnd: this.handleEnd
      });
    }
  },
  computed: {
    wrapperClass: function wrapperClass4() {
      var _a2 = this.$props, disabled = _a2.disabled, reverse = _a2.reverse, orientation = _a2.orientation, value3 = _a2.value;
      var isVertical3 = orientation === "vertical";
      var indeterminateProp = value3 === null;
      return {
        "k-widget k-progressbar": true,
        "k-progressbar-horizontal": !isVertical3,
        "k-progressbar-vertical": isVertical3,
        "k-progressbar-reverse": reverse,
        "k-progressbar-indeterminate": indeterminateProp,
        "k-state-disabled": disabled
      };
    },
    isVertical: function isVertical() {
      return this.orientation === "vertical";
    },
    animationDuration: function animationDuration() {
      var animation = this.$props.animation;
      return typeof animation !== "boolean" && animation !== void 0 ? animation.duration : animation ? DEFAULT_ANIMATION_DURATION2 : NO_ANIMATION3;
    }
  },
  setup: !gh40 ? void 0 : function() {
    var v3 = !!gh40;
    return {
      v3
    };
  },
  render: function render28(createElement) {
    var _this = this;
    var h = gh40 || createElement;
    var _a2 = this.$props, disabled = _a2.disabled, labelVisible = _a2.labelVisible, labelPlacement = _a2.labelPlacement, max = _a2.max, min = _a2.min, tabIndex = _a2.tabIndex, emptyStyle = _a2.emptyStyle, emptyClassName = _a2.emptyClassName, progressStyle = _a2.progressStyle, progressClassName = _a2.progressClassName;
    var value3 = this.$props.value || 0;
    var indeterminateProp = this.$props.value === null;
    var formattedLabel = truncateNumber(value3);
    var labelProps = {
      value: value3
    };
    var label = this.$props.labelRender ? templateRendering.call(this, this.$props.labelRender, getListeners.call(this)) : void 0;
    var labelDefaultRendering = h("span", {
      "class": "k-progress-status"
    }, formattedLabel);
    var toggleButtonRendering = getTemplate.call(this, {
      h,
      template: label,
      defaultRendering: labelDefaultRendering,
      additionalProps: labelProps
    });
    var renderLabel = labelVisible ? this.$props.label ? h("span", {
      "class": "k-progress-status"
    }, [this.$props.label]) : toggleButtonRendering : void 0;
    var positionClasses = classNames("k-progress-status-wrap", {
      "k-progress-start": labelPlacement === "start",
      "k-progress-center": labelPlacement === "center",
      "k-progress-end": labelPlacement === "end" || labelPlacement === void 0
    });
    return h("div", {
      "class": this.wrapperClass,
      dir: this.currentDir,
      attrs: this.v3 ? void 0 : {
        dir: this.currentDir,
        tabindex: getTabIndex(tabIndex, disabled),
        role: "progressbar",
        "aria-valuemin": min,
        "aria-valuemax": max,
        "aria-valuenow": indeterminateProp ? void 0 : value3,
        "aria-disabled": disabled
      },
      tabindex: getTabIndex(tabIndex, disabled),
      role: "progressbar",
      "aria-valuemin": min,
      "aria-valuemax": max,
      "aria-valuenow": indeterminateProp ? void 0 : value3,
      "aria-disabled": disabled
    }, [h("span", {
      "class": positionClasses + (emptyClassName ? " " + emptyClassName : ""),
      style: emptyStyle
    }, [renderLabel]), h("div", {
      "class": "k-state-selected",
      style: progressStyle,
      ref: this.v3 ? function(el) {
        _this.progressStatusRef = el;
      } : "progressStatus"
    }, [h("span", {
      "class": positionClasses + (progressClassName ? " " + progressClassName : ""),
      ref: this.v3 ? function(el) {
        _this.progressStatusWrapRef = el;
      } : "progressStatusWrap"
    }, [renderLabel])])]);
  },
  methods: {
    focus: function focus5() {
      if (this.$el) {
        this.$el.focus();
      }
    },
    progressStatusElement: function progressStatusElement() {
      return this._progressStatus;
    },
    progressStatusWrapElement: function progressStatusWrapElement() {
      return this._progressStatusWrap;
    },
    handleStart: function handleStart() {
      var percentage = calculatePercentage(this.min, this.max, this.prevValue);
      updateProgress(this._progressStatus, this._progressStatusWrap, percentage, this.isVertical);
    },
    handleUpdate: function handleUpdate(progress) {
      var percentage = calculatePercentage(this.min, this.max, this.prevValue + (this.value - this.prevValue) * progress);
      updateProgress(this._progressStatus, this._progressStatusWrap, percentage, this.isVertical);
    },
    handleEnd: function handleEnd() {
      var percentage = calculatePercentage(this.min, this.max, this.value);
      updateProgress(this._progressStatus, this._progressStatusWrap, percentage, this.isVertical);
    }
  }
};
var ProgressBar = ProgressBarVue2;

// node_modules/@progress/kendo-vue-layout/dist/es/stepper/Stepper.js
var __assign5 = function() {
  __assign5 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s) {
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
      }
    }
    return t;
  };
  return __assign5.apply(this, arguments);
};
var allVue43 = vue_runtime_esm_bundler_exports;
var gh41 = allVue43.h;
var StepperVue2 = {
  name: "KendoStepper",
  model: {
    event: "changemodel"
  },
  props: {
    animationDuration: {
      type: [Boolean, Number],
      default: 400
    },
    dir: String,
    disabled: Boolean,
    item: {
      type: [String, Object, Function, Boolean],
      default: void 0
    },
    items: Array,
    linear: Boolean,
    mode: {
      type: String,
      default: "steps",
      validator: function validator14(value3) {
        return ["steps", "labels"].includes(value3);
      }
    },
    orientation: {
      type: String,
      default: "horizontal",
      validator: function validator15(value3) {
        return ["horizontal", "vertical"].includes(value3);
      }
    },
    value: {
      type: Number,
      default: 0
    },
    modelValue: Number,
    successIcon: String,
    errorIcon: String
  },
  created: function created13() {
    validatePackage2(packageMetadata2);
    this.focusedIdx = this.computedValue !== void 0 ? this.computedValue : 0;
  },
  mounted: function mounted6() {
    this.currentDir = this.$props.dir !== void 0 ? this.$props.dir : isRtl(this.$el) ? "rtl" : "ltr";
  },
  data: function data8() {
    return {
      currentDir: "ltr",
      focusedIdx: 0,
      stepper: {},
      currentFocused: false
    };
  },
  watch: {
    value: function value2(newValue) {
      this.focusedIdx = newValue;
    }
  },
  computed: {
    computedValue: function computedValue() {
      return this.$props.modelValue !== void 0 ? this.$props.modelValue : this.$props.value;
    },
    isVertical: function isVertical2() {
      return this.$props.orientation === "vertical";
    },
    numOfSteps: function numOfSteps() {
      var items = this.$props.items;
      return items ? items.length : 0;
    },
    stepperClasses: function stepperClasses() {
      return {
        "k-stepper": true,
        "k-stepper-linear": this.$props.linear
      };
    },
    stepperStyles: function stepperStyles() {
      return {
        display: "grid",
        gridTemplateColumns: !this.isVertical ? "repeat(" + this.numOfSteps * 2 + ", 1fr)" : void 0,
        gridTemplateRows: this.isVertical ? "repeat(" + this.numOfSteps * 4 + ", 1fr)" : void 0
      };
    },
    listClasses: function listClasses() {
      return {
        "k-step-list": true,
        "k-step-list-horizontal": !this.isVertical,
        "k-step-list-vertical": this.isVertical
      };
    },
    listStyles: function listStyles() {
      return {
        gridColumnStart: !this.isVertical ? 1 : "",
        gridColumnEnd: !this.isVertical ? -1 : "",
        gridRowStart: this.isVertical ? 1 : "",
        gridRowEnd: this.isVertical ? -1 : ""
      };
    },
    progressbarStyles: function progressbarStyles() {
      return {
        gridColumnStart: !this.isVertical ? 2 : "",
        gridColumnEnd: !this.isVertical ? this.numOfSteps * 2 : "",
        gridRowStart: this.isVertical ? 2 : "",
        gridRowEnd: this.isVertical ? this.numOfSteps * 4 - 2 : ""
      };
    }
  },
  setup: !gh41 ? void 0 : function() {
    var v3 = !!gh41;
    return {
      v3
    };
  },
  render: function render29(createElement) {
    var h = gh41 || createElement;
    var defaultSlot = getDefaultSlots(this);
    var _a2 = this.$props, animationDuration2 = _a2.animationDuration, disabled = _a2.disabled, items = _a2.items, orientation = _a2.orientation;
    var value3 = this.computedValue;
    var animation = typeof animationDuration2 === "number" ? animationDuration2 : animationDuration2 !== false ? DEFAULT_ANIMATION_DURATION : NO_ANIMATION2;
    var steps = items && items.map(function(element, index) {
      var step = this.$props.item ? templateRendering.call(this, this.$props.item, getListeners.call(this)) : void 0;
      var stepDefaultRendering = h(Step, {
        key: index,
        index,
        attrs: this.v3 ? void 0 : {
          index,
          disabled: disabled || element.disabled,
          focused: index === this.focusedIdx && this.currentFocused,
          current: index === value3,
          icon: element.icon,
          label: element.label,
          optional: element.optional,
          text: element.text,
          isValid: element.isValid,
          tabIndex: element.tabIndex,
          animationDuration: this.animationDuration,
          isVertical: this.isVertical,
          item: this.item,
          linear: this.linear,
          mode: this.mode,
          numOfSteps: this.numOfSteps,
          value: value3,
          successIcon: this.successIcon,
          errorIcon: this.errorIcon
        },
        disabled: disabled || element.disabled,
        focused: index === this.focusedIdx && this.currentFocused,
        current: index === value3,
        onChange: this.handleChange,
        on: this.v3 ? void 0 : {
          "change": this.handleChange,
          "focus": this.handleFocus
        },
        onFocus: this.handleFocus,
        "class": element.class,
        style: element.style,
        icon: element.icon,
        label: element.label,
        optional: element.optional,
        text: element.text,
        isValid: element.isValid,
        tabIndex: element.tabIndex,
        animationDuration: this.animationDuration,
        isVertical: this.isVertical,
        item: this.item,
        linear: this.linear,
        mode: this.mode,
        numOfSteps: this.numOfSteps,
        value: value3,
        successIcon: this.successIcon,
        errorIcon: this.errorIcon
      });
      var stepRendering = getTemplate.call(this, {
        h,
        template: step,
        defaultRendering: stepDefaultRendering,
        additionalProps: __assign5(__assign5({}, element), {
          disabled: disabled || element.disabled,
          focused: index === this.focusedIdx,
          current: index === value3,
          value: value3
        }),
        additionalListeners: {
          change: this.handleChange,
          focus: this.handleFocus
        }
      });
      return stepRendering;
    }, this);
    return h("nav", {
      tabIndex: this.currentFocused ? -1 : 0,
      attrs: this.v3 ? void 0 : {
        tabIndex: this.currentFocused ? -1 : 0,
        dir: this.currentDir
      },
      "class": this.stepperClasses,
      style: this.stepperStyles,
      dir: this.currentDir,
      onFocusin: this.handleFocusin,
      on: this.v3 ? void 0 : {
        "focusin": this.handleFocusin,
        "focusout": this.handleFocusout,
        "keydown": this.handleKeyDown
      },
      onFocusout: this.handleFocusout,
      onKeydown: this.handleKeyDown
    }, [
      h("ol", {
        "class": this.listClasses,
        style: this.listStyles
      }, [steps ? steps : defaultSlot]),
      h(ProgressBar, {
        style: this.progressbarStyles,
        animation: {
          duration: animation
        },
        attrs: this.v3 ? void 0 : {
          animation: {
            duration: animation
          },
          "aria-hidden": true,
          max: this.numOfSteps - 1,
          labelVisible: false,
          orientation,
          reverse: orientation === "vertical",
          value: value3,
          disabled,
          tabIndex: -1
        },
        "aria-hidden": true,
        max: this.numOfSteps - 1,
        labelVisible: false,
        orientation,
        reverse: orientation === "vertical",
        value: value3,
        disabled,
        tabIndex: -1
      })
    ]);
  },
  methods: {
    focus: function focus6() {
      if (this.$el) {
        focusFirstFocusableChild(this.$el);
      }
    },
    dispatchChangeEvent: function dispatchChangeEvent(event, val) {
      var prevIdx = val === this.computedValue - 1;
      var currIdx = val === this.computedValue;
      var nextIdx = val === this.computedValue + 1;
      var allowClick = !this.linear || prevIdx || currIdx || nextIdx;
      if (this.computedValue !== val && !this.disabled && allowClick) {
        this.focusedIdx = val;
        this.$emit("changemodel", val);
        this.$emit("update:modelValue", val);
        this.$emit("change", {
          component: this,
          event,
          value: val
        });
      }
    },
    handleChange: function handleChange(event) {
      var currentValue = event.value;
      this.dispatchChangeEvent(event, currentValue);
    },
    handleFocus: function handleFocus2(event) {
      if (!this.disabled) {
        this.$emit("focus", event, void 0);
      }
    },
    handleEnter: function handleEnter(event) {
      var newEvent = {
        component: this,
        event,
        value: this.focusedIdx
      };
      this.dispatchChangeEvent(newEvent, this.focusedIdx);
    },
    handleFocusin: function handleFocusin() {
      this.currentFocused = true;
    },
    handleFocusout: function handleFocusout() {
      this.currentFocused = false;
    },
    handleKeyDown: function handleKeyDown(event) {
      var isCurrentRtl = this.currentDir === "rtl";
      var currIndex = this.focusedIdx;
      var maxNavIndex = this.items.length - 1;
      switch (event.keyCode) {
        case Keys.left:
          event.preventDefault();
          if (!isCurrentRtl && currIndex > 0) {
            this.focusedIdx = currIndex - 1;
          }
          if (isCurrentRtl && currIndex < maxNavIndex) {
            this.focusedIdx = currIndex + 1;
          }
          break;
        case Keys.right:
          event.preventDefault();
          if (!isCurrentRtl && currIndex < maxNavIndex) {
            this.focusedIdx = currIndex + 1;
          }
          if (isCurrentRtl && currIndex > 0) {
            this.focusedIdx = currIndex - 1;
          }
          break;
        case Keys.up:
          event.preventDefault();
          if (!isCurrentRtl && currIndex > 0) {
            this.focusedIdx = currIndex - 1;
          }
          if (isCurrentRtl && currIndex > 0) {
            this.focusedIdx = currIndex - 1;
          }
          break;
        case Keys.down:
          event.preventDefault();
          if (!isCurrentRtl && currIndex < maxNavIndex) {
            this.focusedIdx = currIndex + 1;
          }
          if (isCurrentRtl && currIndex < maxNavIndex) {
            this.focusedIdx = currIndex + 1;
          }
          break;
        case Keys.home:
          event.preventDefault();
          this.focusedIdx = 0;
          break;
        case Keys.end:
          event.preventDefault();
          this.focusedIdx = maxNavIndex;
          break;
        case Keys.space:
        case Keys.enter:
          event.preventDefault();
          if (!this.items[currIndex].disabled) {
            this.handleEnter(event);
          }
          break;
        default:
      }
    }
  }
};
var Stepper = StepperVue2;

// node_modules/@progress/kendo-vue-layout/dist/es/menu/utils/itemsIdsUtils.js
var EMPTY_ID = "";
var ZERO_LEVEL_ZERO_ITEM_ID = "0";
var SEPARATOR = "_";
function getItemById(itemId, items) {
  if (isIdZeroLevel(itemId)) {
    return items[Number(itemId)];
  } else {
    var rootParentItem = items[Number(getRootParentId(itemId))];
    return rootParentItem.items ? getItemById(getIdWithoutRootParentId(itemId), rootParentItem.items) : void 0;
  }
}
function getRootParentId(itemId) {
  return isIdEmptyOrZeroLevel(itemId) ? itemId : itemId.split(SEPARATOR)[0];
}
function getIdWithoutRootParentId(itemId) {
  if (isIdEmptyOrZeroLevel(itemId)) {
    return itemId;
  } else {
    var firstSeparatorIndex = itemId.indexOf(SEPARATOR);
    return itemId.substring(firstSeparatorIndex + 1);
  }
}
function getFirstChildId(itemId) {
  return createId("0", itemId);
}
function shouldOpenItem(itemId, lastItemIdToBeOpened) {
  if (lastItemIdToBeOpened.indexOf(itemId) === 0) {
    return lastItemIdToBeOpened.length === itemId.length || lastItemIdToBeOpened.charAt(itemId.length) === SEPARATOR;
  } else {
    return false;
  }
}
function createId(childId, parentId) {
  return parentId ? parentId + SEPARATOR + childId : childId;
}
function getDirectParentId(itemId) {
  var lastSeparatorIndex = itemId.lastIndexOf(SEPARATOR);
  return lastSeparatorIndex < 0 ? EMPTY_ID : itemId.substring(0, lastSeparatorIndex);
}
function isIdEmptyOrZeroLevel(itemId) {
  return itemId === EMPTY_ID || itemId.indexOf(SEPARATOR) < 0;
}
function isIdZeroLevel(itemId) {
  return itemId !== EMPTY_ID && itemId.indexOf(SEPARATOR) < 0;
}
function isIdFirstLevel(itemId) {
  return getSeparatorOccurances(itemId) === 1;
}
function isFirstItemFromSiblings(itemId) {
  return getShortId(itemId) === ZERO_LEVEL_ZERO_ITEM_ID;
}
function getShortId(itemId) {
  var lastSeparatorIndex = itemId.lastIndexOf(SEPARATOR);
  return lastSeparatorIndex < 0 ? itemId : itemId.substring(lastSeparatorIndex + 1);
}
function getDirectSiblingIdForLevelZero(next, shortItemId, siblingsCount) {
  if (!isIdZeroLevel(shortItemId)) {
    return shortItemId;
  }
  return next ? Number(shortItemId) < siblingsCount - 1 ? (Number(shortItemId) + 1).toString() : "0" : Number(shortItemId) > 0 ? (Number(shortItemId) - 1).toString() : (siblingsCount - 1).toString();
}
function getSeparatorOccurances(itemId) {
  return itemId.split(SEPARATOR).length - 1;
}

// node_modules/@progress/kendo-vue-layout/dist/es/menu/utils/prepareInputItemsForInternalWork.js
function prepareInputItemsForInternalWork(models) {
  if (models && models.length > 0) {
    return {
      items: convertInputModelsToInternalOnesHelper.call(this, models),
      inputItems: models
    };
  } else {
    return { items: [], inputItems: [] };
  }
}
function copyInputItemWithoutChildren(inputModel) {
  var result = {};
  var text = inputModel.text, url = inputModel.url, icon = inputModel.icon, disabled = inputModel.disabled, cssClass = inputModel.cssClass, cssStyle = inputModel.cssStyle, render41 = inputModel.render, linkRender = inputModel.linkRender, contentRender2 = inputModel.contentRender, data15 = inputModel.data;
  if (text !== void 0) {
    result.text = text;
  }
  if (url !== void 0) {
    result.url = url;
  }
  if (icon !== void 0) {
    result.icon = icon;
  }
  if (disabled !== void 0) {
    result.disabled = disabled;
  }
  if (cssClass !== void 0) {
    result.cssClass = cssClass;
  }
  if (cssStyle !== void 0) {
    result.cssStyle = cssStyle;
  }
  if (render41 !== void 0) {
    result.render = templateRendering.call(this, render41, getListeners.call(this));
  }
  if (linkRender !== void 0) {
    result.linkRender = templateRendering.call(this, linkRender, getListeners.call(this));
  }
  if (contentRender2 !== void 0) {
    result.contentRender = templateRendering.call(this, contentRender2, getListeners.call(this));
  }
  if (data15 !== void 0) {
    result.data = data15;
  }
  return result;
}
function convertInputModelsToInternalOnesHelper(inputModels, parentId) {
  var result = [];
  for (var index = 0; index < inputModels.length; index++) {
    var inputModel = inputModels[index];
    var internalModel = copyInputItemWithoutChildren.call(this, inputModel);
    internalModel.id = createId(index.toString(), parentId);
    internalModel.isLastFromSiblings = index === inputModels.length - 1;
    internalModel.items = copyOrCreateModelChildren.call(this, inputModel, internalModel);
    result.push(internalModel);
  }
  return result;
}
function copyOrCreateModelChildren(inputModel, internalModel) {
  if (inputModel.contentRender) {
    return [{
      contentParentItemId: internalModel.id,
      id: createId(ZERO_LEVEL_ZERO_ITEM_ID, internalModel.id),
      isLastFromSiblings: true,
      contentRender: templateRendering.call(this, inputModel.contentRender, getListeners.call(this)),
      items: []
    }];
  } else if (inputModel.items) {
    return convertInputModelsToInternalOnesHelper.call(this, inputModel.items, internalModel.id);
  } else {
    return [];
  }
}

// node_modules/@progress/kendo-vue-layout/dist/es/menu/utils/getNewItemIdUponKeyboardNavigation.js
var NO_WHITESPACE_REGEX = /\S/;
function getNewItemIdUponKeyboardNavigation(sourceItems, sourceItemId, keyCode, key, isMenuVertical, isDirectionRightToLeft) {
  var sourceItem = getItemById2();
  switch (keyCode) {
    case Keys.left:
      return getIdUponLeftKey();
    case Keys.right:
      return getIdUponRightKey();
    case Keys.up:
      return getIdUponUpKey();
    case Keys.down:
      return getIdUponDownKey();
    case Keys.enter:
    case Keys.space:
      return getIdUponEnterAndSpaceKeys();
    case Keys.home:
      return getIdUponHomeKey();
    case Keys.end:
      return getIdUponEndKey();
    case Keys.esc:
      return getIdUponEscKey();
    default:
      return isSearchableKey() ? getIdUponSearchByChar() : sourceItemId;
  }
  function getIdUponLeftKey() {
    if (isMenuVertical) {
      return isDirectionRightToLeft ? getIdUponRightKeyForVerticalMenu() : getIdUponLeftKeyForVerticalMenu();
    } else {
      return isDirectionRightToLeft ? getIdUponRightKeyForHorizontalMenu() : getIdUponLeftKeyForHorizontalMenu();
    }
  }
  function getIdUponRightKey() {
    if (isMenuVertical) {
      return isDirectionRightToLeft ? getIdUponLeftKeyForVerticalMenu() : getIdUponRightKeyForVerticalMenu();
    } else {
      return isDirectionRightToLeft ? getIdUponLeftKeyForHorizontalMenu() : getIdUponRightKeyForHorizontalMenu();
    }
  }
  function getIdUponDownKey() {
    if (isMenuVertical) {
      return getNextSiblingId();
    } else {
      if (isIdZeroLevel(sourceItemId)) {
        return getFirstChildIdForEnabledItemOrGetSameId();
      } else {
        return getNextSiblingId();
      }
    }
  }
  function getIdUponUpKey() {
    if (isMenuVertical) {
      return getPrevSiblingId();
    } else {
      if (isIdZeroLevel(sourceItemId)) {
        return getLastChildIdForEnabledItemOrGetSameId();
      } else {
        return getPrevSiblingId();
      }
    }
  }
  function getIdUponEnterAndSpaceKeys() {
    if (sourceItem.disabled) {
      return sourceItemId;
    } else {
      return hasChildren() ? getFirstChildId(sourceItemId) : getRootParentId(sourceItemId);
    }
  }
  function getIdUponHomeKey() {
    return getSiblings()[0].id;
  }
  function getIdUponEndKey() {
    var siblings = getSiblings();
    return siblings[siblings.length - 1].id;
  }
  function getIdUponEscKey() {
    return isIdZeroLevel(sourceItemId) ? sourceItemId : getDirectParentId(sourceItemId);
  }
  function getIdUponSearchByChar() {
    var searchChar = key.toLowerCase();
    var siblings = getSiblings();
    var currentItemIndex = Number(getShortId(sourceItemId));
    var itemsToSearch = siblings.slice(currentItemIndex + 1).concat(siblings.slice(0, currentItemIndex + 1));
    var matchedSibling = itemsToSearch.find(function(item) {
      return (item.text || "").toLowerCase().startsWith(searchChar);
    });
    return matchedSibling ? matchedSibling.id : sourceItemId;
  }
  function getIdUponLeftKeyForHorizontalMenu() {
    if (isIdZeroLevel(sourceItemId)) {
      return getPrevSiblingId();
    } else if (isIdFirstLevel(sourceItemId)) {
      return getFirstChildIdForEnabledItemOrGetSameId(getPrevSiblingId(getRootParentId(sourceItemId)));
    } else {
      return getDirectParentId(sourceItemId);
    }
  }
  function getIdUponLeftKeyForVerticalMenu() {
    if (isIdZeroLevel(sourceItemId)) {
      return getLastChildIdForEnabledItemOrGetSameId();
    } else {
      return getDirectParentId(sourceItemId);
    }
  }
  function getIdUponRightKeyForHorizontalMenu() {
    if (isIdZeroLevel(sourceItemId)) {
      return getNextSiblingId();
    } else {
      return getFirstChildIdForEnabledItemOrGetSameId(hasChildren() ? sourceItemId : getNextSiblingId(getRootParentId(sourceItemId)));
    }
  }
  function getIdUponRightKeyForVerticalMenu() {
    return getFirstChildIdForEnabledItemOrGetSameId(isIdZeroLevel(sourceItemId) || hasChildren() ? sourceItemId : getNextSiblingId(getRootParentId(sourceItemId)));
  }
  function getFirstChildIdForEnabledItemOrGetSameId(itemId) {
    return getFirstOrLastChildIdForEnabledItemOrGetSameId(true, itemId);
  }
  function getLastChildIdForEnabledItemOrGetSameId(itemId) {
    return getFirstOrLastChildIdForEnabledItemOrGetSameId(false, itemId);
  }
  function isSearchableKey() {
    return key.length === 1 && NO_WHITESPACE_REGEX.test(key);
  }
  function getItemById2(itemId, items) {
    if (itemId === void 0) {
      itemId = sourceItemId;
    }
    if (items === void 0) {
      items = sourceItems;
    }
    return getItemById(itemId, items);
  }
  function hasChildren(itemId) {
    return getItemById2(itemId).items.length > 0;
  }
  function getPrevSiblingId(itemId) {
    return getSiblingId(false, itemId);
  }
  function getNextSiblingId(itemId) {
    return getSiblingId(true, itemId);
  }
  function getLastChildId(itemId) {
    var itemChildren = getItemById2(itemId).items;
    return itemChildren[itemChildren.length - 1].id;
  }
  function getSiblings() {
    return isIdZeroLevel(sourceItemId) ? sourceItems : getItemById2(getDirectParentId(sourceItemId), sourceItems).items;
  }
  function getFirstOrLastChildIdForEnabledItemOrGetSameId(getFirstChild, itemId) {
    if (itemId === void 0) {
      itemId = sourceItemId;
    }
    var item = getItemById2(itemId);
    if (hasChildren(itemId) && !item.disabled) {
      return getFirstChild ? getFirstChildId(itemId) : getLastChildId(itemId);
    } else {
      return itemId;
    }
  }
  function getSiblingId(next, itemId) {
    if (itemId === void 0) {
      itemId = sourceItemId;
    }
    if (isIdZeroLevel(itemId)) {
      return getDirectSiblingIdForLevelZero(next, itemId, sourceItems.length);
    } else {
      var directParentId = getDirectParentId(itemId);
      var shortId = getShortId(itemId);
      var siblingsCount = getItemById2(directParentId).items.length;
      return createId(getDirectSiblingIdForLevelZero(next, shortId, siblingsCount), directParentId);
    }
  }
}

// node_modules/@progress/kendo-vue-layout/dist/es/menu/utils/hoverDelay.js
function getHoverOpenDelay(props) {
  if (props.hoverOpenDelay !== void 0) {
    return props.hoverOpenDelay;
  } else {
    return props.openOnClick ? 0 : 100;
  }
}
function getHoverCloseDelay(props) {
  return props.hoverCloseDelay !== void 0 ? props.hoverCloseDelay : 100;
}

// node_modules/@progress/kendo-vue-layout/dist/es/menu/consts.js
var POPUP_ALIGN = {
  vertical: "top",
  horizontal: "left"
};
var POPUP_ALIGN_RTL = {
  vertical: "top",
  horizontal: "right"
};
var VERTICAL_COLLISION = {
  vertical: "flip",
  horizontal: "fit"
};
var HORIZONTAL_COLLISION = {
  vertical: "fit",
  horizontal: "flip"
};
var POPUP_SETTINGS_RTL = {
  downward: {
    anchorAlign: {
      vertical: "bottom",
      horizontal: "right"
    },
    popupAlign: POPUP_ALIGN_RTL,
    collision: VERTICAL_COLLISION
  },
  leftward: {
    anchorAlign: {
      vertical: "top",
      horizontal: "left"
    },
    popupAlign: POPUP_ALIGN_RTL,
    collision: HORIZONTAL_COLLISION
  }
};
var POPUP_SETTINGS = {
  downward: {
    anchorAlign: {
      vertical: "bottom",
      horizontal: "left"
    },
    popupAlign: POPUP_ALIGN,
    collision: VERTICAL_COLLISION
  },
  rightward: {
    anchorAlign: {
      vertical: "top",
      horizontal: "right"
    },
    popupAlign: POPUP_ALIGN,
    collision: HORIZONTAL_COLLISION
  }
};

// node_modules/@progress/kendo-vue-layout/dist/es/menu/utils/misc.js
function getPopupSettings(itemId, isMenuVertical, isDirectionRightToLeft) {
  var childrenPosition = getChildrenPosition(itemId, isMenuVertical, isDirectionRightToLeft);
  if (isDirectionRightToLeft) {
    return childrenPosition === "downward" ? POPUP_SETTINGS_RTL.downward : POPUP_SETTINGS_RTL.leftward;
  } else {
    return childrenPosition === "downward" ? POPUP_SETTINGS.downward : POPUP_SETTINGS.rightward;
  }
}
function getChildrenPosition(itemId, isMenuVertical, isDirectionRightToLeft) {
  if (isIdZeroLevel(itemId)) {
    if (isMenuVertical) {
      return isDirectionRightToLeft ? "leftward" : "rightward";
    } else {
      return "downward";
    }
  } else {
    return isDirectionRightToLeft ? "leftward" : "rightward";
  }
}
function convertBoolDirectionToString(isDirectionRightToLeft) {
  return isDirectionRightToLeft ? "rtl" : "ltr";
}
function getDOMElementId(menuGuid, itemId) {
  return menuGuid + "_" + itemId;
}

// node_modules/@progress/kendo-vue-layout/dist/es/menu/components/MenuItemLink.js
var allVue44 = vue_runtime_esm_bundler_exports;
var gh42 = allVue44.h;
var MenuItemLinkVue2 = {
  name: "KendoMenuItemLink",
  props: {
    opened: Boolean,
    focused: Boolean,
    url: String
  },
  computed: {
    menuItemClassName: function menuItemClassName() {
      return {
        "k-link": true,
        "k-menu-link": true,
        "k-active": this.$props.opened,
        "k-focus": this.$props.focused
      };
    }
  },
  setup: !gh42 ? void 0 : function() {
    var v3 = !!gh42;
    return {
      v3
    };
  },
  render: function render30(createElement) {
    var h = gh42 || createElement;
    var defaultSlot = getDefaultSlots(this);
    if (this.$props.url) {
      return h("a", {
        "class": this.menuItemClassName,
        role: "presentation",
        attrs: this.v3 ? void 0 : {
          role: "presentation",
          href: this.$props.url,
          tabIndex: -1
        },
        href: this.$props.url,
        tabIndex: -1
      }, [defaultSlot]);
    } else {
      return h("span", {
        "class": this.menuItemClassName,
        role: "presentation",
        attrs: this.v3 ? void 0 : {
          role: "presentation"
        }
      }, [defaultSlot]);
    }
  }
};
var MenuItemLink = MenuItemLinkVue2;

// node_modules/@progress/kendo-vue-layout/dist/es/menu/components/MenuItemArrow.js
var allVue45 = vue_runtime_esm_bundler_exports;
var gh43 = allVue45.h;
var downArrowClass = "k-i-arrow-60-down";
var rightArrowClass = "k-i-arrow-60-right";
var leftArrowClass = "k-i-arrow-60-left";
var MenuItemArrowVue2 = {
  name: "KendoMenuItemArrow",
  props: {
    itemId: String,
    dir: String,
    verticalMenu: Boolean
  },
  setup: !gh43 ? void 0 : function() {
    var v3 = !!gh43;
    return {
      v3
    };
  },
  render: function render31(createElement) {
    var h = gh43 || createElement;
    return h("span", {
      "class": "k-menu-expand-arrow"
    }, [h("span", {
      "class": this.getArrowClassName(),
      role: "presentation",
      attrs: this.v3 ? void 0 : {
        role: "presentation"
      }
    })]);
  },
  methods: {
    getArrowClassName: function getArrowClassName() {
      var _a2;
      var childrenPosition = getChildrenPosition(this.$props.itemId, this.$props.verticalMenu === true, this.$props.dir === "rtl");
      return _a2 = {
        "k-icon": true
      }, _a2[downArrowClass] = childrenPosition === "downward", _a2[rightArrowClass] = childrenPosition === "rightward", _a2[leftArrowClass] = childrenPosition === "leftward", _a2;
    }
  }
};
var MenuItemArrow = MenuItemArrowVue2;

// node_modules/@progress/kendo-vue-layout/dist/es/menu/components/MenuItemInternal.js
var allVue46 = vue_runtime_esm_bundler_exports;
var gh44 = allVue46.h;
var ref9 = allVue46.ref;
var MenuItemInternalVue2 = {
  name: "KendoMenuItemInternal",
  emits: {
    "keydown": null,
    "mouseover": null,
    "mouseleave": null,
    "blur": null,
    "focus": null,
    "click": null,
    "mousedown": null
  },
  props: {
    item: Object,
    focusedItemId: String,
    lastItemIdToBeOpened: String,
    tabbableItemId: String,
    itemRender: [String, Object, Function],
    linkRender: [String, Object, Function],
    isMenuVertical: Boolean,
    isDirectionRightToLeft: Boolean,
    menuGuid: String,
    originalItemNeeded: Function
  },
  created: function created14() {
    this.itemElement = null;
    this.prevFocusedItemId = this.$props.focusedItemId;
    this.isFirstRender = true;
    this._anchor = guid();
  },
  data: function data9() {
    return {
      opened: false
    };
  },
  mounted: function mounted7() {
    this.itemElement = this.v3 ? this.kendoAnchorRef : this.$refs[this._anchor];
    var focusedItemId2 = this.$props.focusedItemId;
    var currentItemId = this.$props.item.id;
    if (focusedItemId2 && focusedItemId2 === currentItemId && this.itemElement) {
      this.itemElement.focus();
    }
    this.isFirstRender = false;
  },
  watch: {
    focusedItemId: function focusedItemId(_, oldValue) {
      this.prevFocusedItemId = oldValue;
    }
  },
  updated: function updated2() {
    var focusedItemId2 = this.$props.focusedItemId;
    var currentItemId = this.$props.item.id;
    if (focusedItemId2) {
      if (this.prevFocusedItemId !== focusedItemId2 && focusedItemId2 === currentItemId && !this.itemElement.contains(document.activeElement)) {
        this.itemElement.focus();
      }
    } else if (document.activeElement === this.itemElement) {
      this.itemElement.blur();
    }
  },
  computed: {
    currentItemRender: function currentItemRender() {
      return this.$props.item.render || this.$props.itemRender;
    },
    currentLinkRender: function currentLinkRender() {
      return this.$props.item.linkRender || this.$props.linkRender;
    },
    contentRender: function contentRender() {
      return this.$props.item.contentParentItemId ? this.$props.item.contentRender : null;
    },
    currentOpened: function currentOpened() {
      var props = this.$props;
      return props.item.items.length > 0 && shouldOpenItem(props.item.id, props.lastItemIdToBeOpened) && !this.isFirstRender;
    },
    currentFocused: function currentFocused() {
      var focusedItemId2 = this.$props.focusedItemId;
      var currentItemId = this.$props.item.id;
      return focusedItemId2 === currentItemId;
    },
    popupClassName: function popupClassName() {
      return classNames({
        "k-menu-popup": true,
        "k-rtl": this.$props.isDirectionRightToLeft
      });
    },
    menuItemClassName: function menuItemClassName2() {
      var _a2;
      var item = this.$props.item;
      return _a2 = {
        "k-item": true,
        "k-menu-item": true,
        "k-first": isFirstItemFromSiblings(item.id),
        "k-last": item.isLastFromSiblings,
        "k-disabled": item.disabled
      }, _a2[item.cssClass ? item.cssClass : ""] = item.cssClass, _a2;
    }
  },
  setup: !gh44 ? void 0 : function() {
    var v3 = !!gh44;
    var kendoAnchorRef = ref9(null);
    return {
      v3,
      kendoAnchorRef
    };
  },
  render: function render32(createElement) {
    var _this = this;
    var h = gh44 || createElement;
    var item = this.$props.item;
    var itemId = item.id;
    var renderContent = function renderContent2() {
      var parentItemId = this.$props.item.contentParentItemId;
      var contentRender2 = function contentRender3(args) {
        return getTemplate.call(this, {
          h,
          template: this.contentRender,
          additionalProps: args
        });
      };
      return h("div", {
        "class": "k-content",
        role: "presentation",
        attrs: this.v3 ? void 0 : {
          role: "presentation"
        }
      }, [contentRender2.call(this, {
        item: this.handleOriginalItemNeeded(parentItemId),
        itemId: parentItemId
      })]);
    };
    var renderMenuIconIfApplicable = function renderMenuIconIfApplicable2() {
      return this.$props.item.icon ? h("span", {
        "class": "k-icon k-i-" + this.$props.item.icon,
        role: "presentation",
        attrs: this.v3 ? void 0 : {
          role: "presentation"
        },
        key: "0"
      }) : null;
    };
    var renderArrowIfApplicable = function renderArrowIfApplicable2() {
      return this.$props.item.items.length > 0 ? h(MenuItemArrow, {
        itemId: this.$props.item.id,
        attrs: this.v3 ? void 0 : {
          itemId: this.$props.item.id,
          verticalMenu: this.$props.isMenuVertical,
          dir: convertBoolDirectionToString(this.$props.isDirectionRightToLeft)
        },
        verticalMenu: this.$props.isMenuVertical,
        dir: convertBoolDirectionToString(this.$props.isDirectionRightToLeft),
        key: "2"
      }) : null;
    };
    var originalItem = this.$props.originalItemNeeded(item.id);
    var renderMenuItemLink = function renderMenuItemLink2() {
      var _this2 = this;
      var defaultItemRender = h("span", {
        "class": "k-menu-link-text"
      }, [item.text]);
      var textOrItemRender = getTemplate.call(this, {
        h,
        template: this.currentItemRender,
        defaultRendering: defaultItemRender,
        additionalProps: {
          item: originalItem,
          itemId: item.id,
          key: "1"
        }
      });
      var defaultLink = h(MenuItemLink, {
        url: item.url,
        attrs: this.v3 ? void 0 : {
          url: item.url,
          opened: this.currentOpened,
          focused: this.currentFocused
        },
        opened: this.currentOpened,
        focused: this.currentFocused
      }, this.v3 ? function() {
        return [[renderMenuIconIfApplicable.call(_this2), textOrItemRender, renderArrowIfApplicable.call(_this2)]];
      } : [[renderMenuIconIfApplicable.call(_this2), textOrItemRender, renderArrowIfApplicable.call(_this2)]]);
      return getTemplate.call(this, {
        h,
        template: this.currentLinkRender,
        defaultRendering: defaultLink,
        additionalProps: {
          item: originalItem,
          itemId: item.id,
          opened: this.currentOpened,
          dir: convertBoolDirectionToString(this.$props.isDirectionRightToLeft)
        }
      });
    };
    var renderPopupIfOpened = function renderPopupIfOpened2() {
      var _this3 = this;
      var _a2 = getPopupSettings(itemId, this.$props.isMenuVertical, this.$props.isDirectionRightToLeft), anchorAlign = _a2.anchorAlign, popupAlign = _a2.popupAlign, collision = _a2.collision;
      return h(Popup, {
        anchor: this._anchor,
        attrs: this.v3 ? void 0 : {
          anchor: this._anchor,
          show: this.currentOpened,
          popupClass: this.popupClassName,
          anchorAlign,
          popupAlign,
          collision,
          animate: false
        },
        show: this.currentOpened,
        popupClass: this.popupClassName,
        anchorAlign,
        popupAlign,
        collision,
        animate: false,
        key: "1"
      }, this.v3 ? function() {
        return [
          h(MenuItemInternalsList, {
            parentItemId: itemId,
            attrs: _this3.v3 ? void 0 : {
              parentItemId: itemId,
              items: _this3.$props.item.items,
              menuGuid: _this3.$props.menuGuid,
              focusedItemId: _this3.$props.focusedItemId,
              lastItemIdToBeOpened: _this3.$props.lastItemIdToBeOpened,
              tabbableItemId: _this3.$props.tabbableItemId,
              itemRender: _this3.$props.itemRender,
              linkRender: _this3.$props.linkRender,
              isMenuVertical: _this3.$props.isMenuVertical,
              isDirectionRightToLeft: _this3.$props.isDirectionRightToLeft,
              originalItemNeeded: _this3.handleOriginalItemNeeded
            },
            items: _this3.$props.item.items,
            menuGuid: _this3.$props.menuGuid,
            focusedItemId: _this3.$props.focusedItemId,
            lastItemIdToBeOpened: _this3.$props.lastItemIdToBeOpened,
            tabbableItemId: _this3.$props.tabbableItemId,
            itemRender: _this3.$props.itemRender,
            linkRender: _this3.$props.linkRender,
            isMenuVertical: _this3.$props.isMenuVertical,
            isDirectionRightToLeft: _this3.$props.isDirectionRightToLeft,
            "class": "k-group k-menu-group k-reset",
            onMouseover: _this3.handleItemMouseOver,
            on: _this3.v3 ? void 0 : {
              "mouseover": _this3.handleItemMouseOver,
              "mouseleave": _this3.handleItemMouseLeave,
              "mousedown": _this3.handleMouseDown,
              "blur": _this3.handleItemMouseBlur,
              "focus": _this3.handleItemMouseFocus,
              "click": _this3.handleClick,
              "keydown": _this3.handleKeyDown
            },
            onMouseleave: _this3.handleItemMouseLeave,
            onMousedown: _this3.handleMouseDown,
            onBlur: _this3.handleItemMouseBlur,
            onFocus: _this3.handleItemMouseFocus,
            onClick: _this3.handleClick,
            onKeydown: _this3.handleKeyDown,
            originalItemNeeded: _this3.handleOriginalItemNeeded
          })
        ];
      } : [h(MenuItemInternalsList, {
        parentItemId: itemId,
        attrs: _this3.v3 ? void 0 : {
          parentItemId: itemId,
          items: _this3.$props.item.items,
          menuGuid: _this3.$props.menuGuid,
          focusedItemId: _this3.$props.focusedItemId,
          lastItemIdToBeOpened: _this3.$props.lastItemIdToBeOpened,
          tabbableItemId: _this3.$props.tabbableItemId,
          itemRender: _this3.$props.itemRender,
          linkRender: _this3.$props.linkRender,
          isMenuVertical: _this3.$props.isMenuVertical,
          isDirectionRightToLeft: _this3.$props.isDirectionRightToLeft,
          originalItemNeeded: _this3.handleOriginalItemNeeded
        },
        items: _this3.$props.item.items,
        menuGuid: _this3.$props.menuGuid,
        focusedItemId: _this3.$props.focusedItemId,
        lastItemIdToBeOpened: _this3.$props.lastItemIdToBeOpened,
        tabbableItemId: _this3.$props.tabbableItemId,
        itemRender: _this3.$props.itemRender,
        linkRender: _this3.$props.linkRender,
        isMenuVertical: _this3.$props.isMenuVertical,
        isDirectionRightToLeft: _this3.$props.isDirectionRightToLeft,
        "class": "k-group k-menu-group k-reset",
        onMouseover: _this3.handleItemMouseOver,
        on: _this3.v3 ? void 0 : {
          "mouseover": _this3.handleItemMouseOver,
          "mouseleave": _this3.handleItemMouseLeave,
          "mousedown": _this3.handleMouseDown,
          "blur": _this3.handleItemMouseBlur,
          "focus": _this3.handleItemMouseFocus,
          "click": _this3.handleClick,
          "keydown": _this3.handleKeyDown
        },
        onMouseleave: _this3.handleItemMouseLeave,
        onMousedown: _this3.handleMouseDown,
        onBlur: _this3.handleItemMouseBlur,
        onFocus: _this3.handleItemMouseFocus,
        onClick: _this3.handleClick,
        onKeydown: _this3.handleKeyDown,
        originalItemNeeded: _this3.handleOriginalItemNeeded
      })]);
    };
    return h("li", {
      "class": this.menuItemClassName,
      style: item.cssStyle,
      tabIndex: itemId === this.$props.tabbableItemId ? 0 : -1,
      attrs: this.v3 ? void 0 : {
        tabIndex: itemId === this.$props.tabbableItemId ? 0 : -1,
        role: "menuitem",
        "aria-disabled": item.disabled ? true : void 0,
        "aria-haspopup": item.items.length > 0 ? true : void 0,
        "aria-expanded": item.items.length > 0 ? this.currentOpened : void 0,
        "aria-label": item.text,
        "aria-owns": this.currentOpened ? getDOMElementId(this.$props.menuGuid, itemId) : void 0
      },
      onMouseover: this.onMouseOver,
      on: this.v3 ? void 0 : {
        "mouseover": this.onMouseOver,
        "mouseleave": this.onMouseLeave,
        "mousedown": function mousedown(event) {
          return _this.handleMouseDown(event);
        },
        "focusout": function focusout() {
          return _this.handleBlur(itemId);
        },
        "focusin": function focusin() {
          return _this.handleFocus(itemId);
        },
        "click": function click(event) {
          return _this.handleClick(event, itemId);
        },
        "keydown": this.handleKeyDown
      },
      onMouseleave: this.onMouseLeave,
      onMousedown: function mousedown(event) {
        return _this.handleMouseDown(event);
      },
      onFocusout: function focusout() {
        return _this.handleBlur(itemId);
      },
      onFocusin: function focusin() {
        return _this.handleFocus(itemId);
      },
      onClick: function click(event) {
        return _this.handleClick(event, itemId);
      },
      onKeydown: this.handleKeyDown,
      role: "menuitem",
      "aria-disabled": item.disabled ? true : void 0,
      "aria-haspopup": item.items.length > 0 ? true : void 0,
      "aria-expanded": item.items.length > 0 ? this.currentOpened : void 0,
      "aria-label": item.text,
      "aria-owns": this.currentOpened ? getDOMElementId(this.$props.menuGuid, itemId) : void 0,
      ref: this.v3 ? function(el) {
        _this.kendoAnchorRef = el;
      } : this._anchor,
      key: "0"
    }, [this.contentRender ? renderContent.call(this) : renderMenuItemLink.call(this), renderPopupIfOpened.call(this)]);
  },
  methods: {
    handleKeyDown: function handleKeyDown2(event) {
      this.$emit("keydown", event);
    },
    handleItemMouseOver: function handleItemMouseOver(event) {
      this.$emit("mouseover", event);
    },
    handleItemMouseLeave: function handleItemMouseLeave(event) {
      this.$emit("mouseleave", event);
    },
    handleItemMouseBlur: function handleItemMouseBlur(event) {
      this.$emit("blur", event);
    },
    handleItemMouseFocus: function handleItemMouseFocus(event) {
      this.$emit("focus", event);
    },
    handleClick: function handleClick3(event, itemId) {
      this.$emit("click", event, itemId);
    },
    handleBlur: function handleBlur(itemId) {
      this.$emit("blur", itemId);
    },
    handleFocus: function handleFocus3(itemId) {
      this.$emit("focus", itemId);
    },
    handleMouseDown: function handleMouseDown(event) {
      this.$emit("mousedown", event);
    },
    handleOriginalItemNeeded: function handleOriginalItemNeeded(event) {
      return this.$props.originalItemNeeded(event);
    },
    onMouseOver: function onMouseOver(event) {
      this.$emit("mouseover", this.$props.item.id);
      event.stopPropagation();
    },
    onMouseLeave: function onMouseLeave(event) {
      this.$emit("mouseleave", this.$props.item.id);
      event.stopPropagation();
    }
  }
};
var MenuItemInternal = MenuItemInternalVue2;

// node_modules/@progress/kendo-vue-layout/dist/es/menu/components/MenuItemInternalsList.js
var allVue47 = vue_runtime_esm_bundler_exports;
var gh45 = allVue47.h;
var MenuItemInternalsListVue2 = {
  name: "KendoMenuItemInternalsList",
  emits: {
    "keydown": null,
    "mouseover": null,
    "mouseleave": null,
    "blur": null,
    "focus": null,
    "click": null,
    "mousedown": null
  },
  props: {
    items: Array,
    parentItemId: {
      type: String,
      default: void 0
    },
    focusedItemId: String,
    lastItemIdToBeOpened: String,
    tabbableItemId: String,
    itemRender: [String, Object, Function],
    linkRender: [String, Object, Function],
    isMenuVertical: Boolean,
    isDirectionRightToLeft: Boolean,
    menuGuid: String,
    originalItemNeeded: Function
  },
  setup: !gh45 ? void 0 : function() {
    var v3 = !!gh45;
    return {
      v3
    };
  },
  render: function render33(createElement) {
    var h = gh45 || createElement;
    var parentItemId = this.$props.parentItemId;
    var renderChildItems = function renderChildItems2() {
      return this.$props.items.length > 0 ? this.$props.items.map(function(item, index) {
        return h(MenuItemInternal, {
          item,
          attrs: this.v3 ? void 0 : {
            item,
            isMenuVertical: this.$props.isMenuVertical,
            isDirectionRightToLeft: this.$props.isDirectionRightToLeft,
            focusedItemId: this.$props.focusedItemId,
            lastItemIdToBeOpened: this.$props.lastItemIdToBeOpened,
            tabbableItemId: this.$props.tabbableItemId,
            itemRender: this.$props.itemRender,
            linkRender: this.$props.linkRender,
            menuGuid: this.$props.menuGuid,
            originalItemNeeded: this.handleOriginalItemNeeded
          },
          isMenuVertical: this.$props.isMenuVertical,
          isDirectionRightToLeft: this.$props.isDirectionRightToLeft,
          focusedItemId: this.$props.focusedItemId,
          lastItemIdToBeOpened: this.$props.lastItemIdToBeOpened,
          tabbableItemId: this.$props.tabbableItemId,
          itemRender: this.$props.itemRender,
          linkRender: this.$props.linkRender,
          menuGuid: this.$props.menuGuid,
          onMouseover: this.handleItemMouseOver,
          on: this.v3 ? void 0 : {
            "mouseover": this.handleItemMouseOver,
            "mouseleave": this.handleItemMouseLeave,
            "mousedown": this.handleItemMouseDown,
            "keydown": this.handleKeyDown,
            "blur": this.handleItemMouseBlur,
            "focus": this.handleItemMouseFocus,
            "click": this.handleItemMouseClick
          },
          onMouseleave: this.handleItemMouseLeave,
          onMousedown: this.handleItemMouseDown,
          onKeydown: this.handleKeyDown,
          onBlur: this.handleItemMouseBlur,
          onFocus: this.handleItemMouseFocus,
          onClick: this.handleItemMouseClick,
          originalItemNeeded: this.handleOriginalItemNeeded,
          key: index
        });
      }, this) : null;
    };
    return h("ul", {
      role: parentItemId !== void 0 ? "menu" : "menubar",
      attrs: this.v3 ? void 0 : {
        role: parentItemId !== void 0 ? "menu" : "menubar",
        id: parentItemId !== void 0 ? getDOMElementId(this.$props.menuGuid, parentItemId) : void 0
      },
      id: parentItemId !== void 0 ? getDOMElementId(this.$props.menuGuid, parentItemId) : void 0
    }, [renderChildItems.call(this)]);
  },
  methods: {
    handleKeyDown: function handleKeyDown3(event) {
      this.$emit("keydown", event);
    },
    handleOriginalItemNeeded: function handleOriginalItemNeeded2(event) {
      return this.$props.originalItemNeeded(event);
    },
    handleItemMouseOver: function handleItemMouseOver2(event) {
      this.$emit("mouseover", event);
    },
    handleItemMouseLeave: function handleItemMouseLeave2(event) {
      this.$emit("mouseleave", event);
    },
    handleItemMouseDown: function handleItemMouseDown(event) {
      this.$emit("mousedown", event);
    },
    handleItemMouseBlur: function handleItemMouseBlur2(event) {
      this.$emit("blur", event);
    },
    handleItemMouseFocus: function handleItemMouseFocus2(event) {
      this.$emit("focus", event);
    },
    handleItemMouseClick: function handleItemMouseClick(event, itemId) {
      this.$emit("click", event, itemId);
    },
    onMouseOver: function onMouseOver2(event) {
      if (this.$props.parentItemId !== void 0) {
        this.$emit("mouseover", this.$props.parentItemId);
        event.stopPropagation();
      }
    },
    onMouseLeave: function onMouseLeave2(event) {
      if (this.$props.parentItemId !== void 0) {
        this.$emit("mouseleave", this.$props.parentItemId);
        event.stopPropagation();
      }
    }
  }
};
var MenuItemInternalsList = MenuItemInternalsListVue2;

// node_modules/@progress/kendo-vue-layout/dist/es/menu/utils/DirectionHolder.js
var DirectionHolder = function() {
  function DirectionHolder2() {
    this.phase = "Initialized";
  }
  DirectionHolder2.prototype.getIsDirectionRightToLeft = function() {
    return this.isDirectionRightToLeft;
  };
  DirectionHolder2.prototype.setIsDirectionRightToLeft = function(value3) {
    this.phase = this.phase === "NotInitialized" ? "Initialized" : "NewValueReceived";
    this.previousIsDirectionRightToLeft = this.isDirectionRightToLeft;
    this.isDirectionRightToLeft = value3;
  };
  DirectionHolder2.prototype.hasDirectionChanged = function() {
    return this.phase === "NewValueReceived" ? this.previousIsDirectionRightToLeft !== this.isDirectionRightToLeft : false;
  };
  return DirectionHolder2;
}();

// node_modules/@progress/kendo-vue-layout/dist/es/menu/utils/MouseOverHandler.js
var MouseOverHandler = function() {
  function MouseOverHandler2(openOnClick, resetMenu, openItem) {
    this.openOnClick = openOnClick;
    this.resetMenu = resetMenu;
    this.openItem = openItem;
    this.openOnClick = openOnClick;
    this.isMouseOverEnabled = openOnClick ? false : true;
  }
  Object.defineProperty(MouseOverHandler2.prototype, "OpenOnClick", {
    set: function(value3) {
      if (Boolean(value3) !== Boolean(this.openOnClick)) {
        this.mouseDown = false;
        this.isMouseOverEnabled = value3 ? false : true;
      }
      this.openOnClick = value3;
    },
    enumerable: false,
    configurable: true
  });
  MouseOverHandler2.prototype.handleItemSelectedViaKeyboard = function() {
    if (this.openOnClick) {
      this.isMouseOverEnabled = false;
      this.resetMenu();
    }
  };
  Object.defineProperty(MouseOverHandler2.prototype, "IsMouseOverEnabled", {
    get: function() {
      return this.isMouseOverEnabled;
    },
    enumerable: false,
    configurable: true
  });
  MouseOverHandler2.prototype.handleItemMouseDown = function() {
    this.mouseDown = true;
  };
  MouseOverHandler2.prototype.handleItemFocus = function() {
    if (this.openOnClick && !this.mouseDown) {
      this.isMouseOverEnabled = true;
    }
    this.mouseDown = false;
  };
  MouseOverHandler2.prototype.handleItemClick = function(itemId, clickedItemIsWithDefaultClose) {
    if (this.openOnClick) {
      if (this.isMouseOverEnabled) {
        if (clickedItemIsWithDefaultClose) {
          this.isMouseOverEnabled = false;
          this.resetMenu();
        }
      } else {
        this.isMouseOverEnabled = true;
        this.openItem(itemId);
      }
    }
  };
  return MouseOverHandler2;
}();

// node_modules/@progress/kendo-vue-layout/dist/es/menu/components/Menu.js
var __assign6 = function() {
  __assign6 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s) {
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
      }
    }
    return t;
  };
  return __assign6.apply(this, arguments);
};
var allVue48 = vue_runtime_esm_bundler_exports;
var gh46 = allVue48.h;
var MenuVue2 = {
  name: "KendoMenu",
  props: {
    vertical: {
      type: Boolean,
      default: false
    },
    items: Array,
    dir: String,
    hoverOpenDelay: {
      type: Number,
      default: void 0
    },
    hoverCloseDelay: {
      type: Number,
      default: void 0
    },
    openOnClick: Boolean,
    itemRender: [String, Object, Function],
    linkRender: [String, Object, Function],
    customCloseItemIds: Array
  },
  created: function created15() {
    validatePackage2(packageMetadata2);
    this.mouseOverHandler = new MouseOverHandler(this.$props.openOnClick, this.reset, this.onItemMouseOver);
    this.guid = guid();
    this.directionHolder = new DirectionHolder();
    this.inputItems = [];
    this.currentItems = [];
  },
  mounted: function mounted8() {
    this.isFirstRender = false;
  },
  updated: function updated3() {
    this.mouseOverHandler.OpenOnClick = this.$props.openOnClick;
  },
  destroyed: !!gh46 ? void 0 : function() {
    this.clearItemHoverAndLeaveRequestsIfApplicable();
  },
  unmounted: function unmounted5() {
    this.clearItemHoverAndLeaveRequestsIfApplicable();
  },
  data: function data10() {
    return {
      focusedItemId: EMPTY_ID,
      hoveredItemId: EMPTY_ID,
      tabbableItemId: ZERO_LEVEL_ZERO_ITEM_ID,
      isFirstRender: true
    };
  },
  computed: {
    menuClassName: function menuClassName() {
      return {
        "k-widget": true,
        "k-reset": true,
        "k-header": true,
        "k-menu": true,
        "k-menu-horizontal": !this.$props.vertical,
        "k-menu-vertical": this.$props.vertical
      };
    }
  },
  setup: !gh46 ? void 0 : function() {
    var v3 = !!gh46;
    return {
      v3
    };
  },
  render: function render34(createElement) {
    var _this = this;
    var h = gh46 || createElement;
    this.prepareItems();
    if (!this.isFirstRender) {
      this.directionHolder.setIsDirectionRightToLeft(this.checkIsDirectionRightToLeft());
    }
    var lastItemIdToBeOpened = this.hoveredItemId ? this.hoveredItemId : this.focusedItemId ? getDirectParentId(this.focusedItemId) : EMPTY_ID;
    return h("div", {
      "class": this.getMenuWrapperClassName(),
      ref: function ref10(el) {
        return _this.menuWrapperEl = el;
      }
    }, [
      h(MenuItemInternalsList, {
        "class": this.menuClassName,
        "aria-orientation": this.$props.vertical ? "vertical" : void 0,
        attrs: this.v3 ? void 0 : {
          "aria-orientation": this.$props.vertical ? "vertical" : void 0,
          items: this.currentItems,
          isMenuVertical: this.$props.vertical,
          isDirectionRightToLeft: this.directionHolder.getIsDirectionRightToLeft(),
          focusedItemId: this.focusedItemId,
          lastItemIdToBeOpened,
          tabbableItemId: this.tabbableItemId,
          itemRender: templateRendering.call(this, this.$props.itemRender, getListeners.call(this)),
          linkRender: templateRendering.call(this, this.$props.linkRender, getListeners.call(this)),
          menuGuid: this.guid,
          originalItemNeeded: this.getInputItem
        },
        items: this.currentItems,
        isMenuVertical: this.$props.vertical,
        isDirectionRightToLeft: this.directionHolder.getIsDirectionRightToLeft(),
        focusedItemId: this.focusedItemId,
        lastItemIdToBeOpened,
        tabbableItemId: this.tabbableItemId,
        itemRender: templateRendering.call(this, this.$props.itemRender, getListeners.call(this)),
        linkRender: templateRendering.call(this, this.$props.linkRender, getListeners.call(this)),
        menuGuid: this.guid,
        onMouseleave: this.onItemMouseLeave,
        on: this.v3 ? void 0 : {
          "mouseleave": this.onItemMouseLeave,
          "mouseover": this.onItemMouseOver,
          "mousedown": this.onItemMouseDown,
          "keydown": this.onKeyDown,
          "focus": this.onItemFocus,
          "click": this.onItemClick,
          "blur": this.onItemBlur
        },
        onMouseover: this.onItemMouseOver,
        onMousedown: this.onItemMouseDown,
        onKeydown: this.onKeyDown,
        onFocus: this.onItemFocus,
        onClick: this.onItemClick,
        onBlur: this.onItemBlur,
        originalItemNeeded: this.getInputItem
      })
    ]);
  },
  methods: {
    reset: function reset() {
      this.clearItemHoverAndLeaveRequestsIfApplicable();
      this.focusedItemId = EMPTY_ID;
      this.hoveredItemId = EMPTY_ID;
      this.tabbableItemId = ZERO_LEVEL_ZERO_ITEM_ID;
    },
    onKeyDown: function onKeyDown3(event) {
      if (this.focusedItemId !== EMPTY_ID) {
        var currentItem = getItemById(this.focusedItemId, this.currentItems);
        var newItemId = getNewItemIdUponKeyboardNavigation(this.currentItems, currentItem.id, event.keyCode, event.key, this.$props.vertical, this.directionHolder.getIsDirectionRightToLeft());
        if (currentItem.id !== newItemId) {
          event.preventDefault();
          this.setFocusedItemId(newItemId);
        }
        if ((event.keyCode === Keys.enter || event.keyCode === Keys.space) && !currentItem.disabled) {
          this.mouseOverHandler.handleItemSelectedViaKeyboard();
          this.dispatchSelectEventIfWired(event, currentItem.id);
          if (!event.defaultPrevented && currentItem.items.length === 0 && currentItem.url) {
            window.location.assign(currentItem.url);
          }
        }
      }
    },
    onItemMouseOver: function onItemMouseOver(itemId) {
      if (this.mouseOverHandler.IsMouseOverEnabled) {
        this.clearItemHoverAndLeaveRequestsIfApplicable();
        var that_1 = this;
        this.itemHoverRequest = window.setTimeout(function() {
          that_1.setHoveredItemId(itemId);
          that_1.itemHoverRequest = null;
        }, getHoverOpenDelay(__assign6({}, this.$props)));
      }
    },
    onItemMouseLeave: function onItemMouseLeave(itemId) {
      if (this.mouseOverHandler.IsMouseOverEnabled && this.isItemWithDefaultClose(itemId)) {
        this.clearItemHoverAndLeaveRequestsIfApplicable();
        var that_2 = this;
        this.itemLeaveRequest = window.setTimeout(function() {
          that_2.setHoveredItemId(EMPTY_ID);
          that_2.itemLeaveRequest = null;
        }, getHoverCloseDelay(__assign6({}, this.$props)));
      }
    },
    onItemMouseDown: function onItemMouseDown() {
      this.mouseOverHandler.handleItemMouseDown();
    },
    onItemFocus: function onItemFocus(itemId) {
      this.setFocusedItemId(itemId);
      this.mouseOverHandler.handleItemFocus();
    },
    onItemClick: function onItemClick(event, itemId) {
      var item = getItemById(itemId, this.currentItems);
      if (!item.disabled) {
        this.setFocusedItemId(itemId);
        this.mouseOverHandler.handleItemClick(itemId, this.isItemWithDefaultClose(itemId));
        this.dispatchSelectEventIfWired(event, itemId);
        if (!event.defaultPrevented && item.url) {
          window.location.assign(item.url);
        }
      }
    },
    onItemBlur: function onItemBlur(itemId) {
      if (this.isItemWithDefaultClose(itemId)) {
        this.setFocusedItemId(EMPTY_ID);
      }
    },
    getInputItem: function getInputItem(itemId) {
      return getItemById(itemId, this.inputItems);
    },
    setFocusedItemId: function setFocusedItemId(focusedItemId2) {
      var tabbableItemId = focusedItemId2 === EMPTY_ID ? this.tabbableItemId : getRootParentId(focusedItemId2);
      var hoveredItemId = focusedItemId2 === EMPTY_ID || isIdEmptyOrZeroLevel(this.hoveredItemId) && isIdEmptyOrZeroLevel(focusedItemId2) ? this.hoveredItemId : EMPTY_ID;
      this.hoveredItemId = hoveredItemId;
      this.focusedItemId = focusedItemId2;
      this.tabbableItemId = tabbableItemId;
    },
    setHoveredItemId: function setHoveredItemId(hoveredItemId) {
      if (isIdEmptyOrZeroLevel(hoveredItemId) && isIdEmptyOrZeroLevel(this.focusedItemId)) {
        this.hoveredItemId = hoveredItemId;
      } else {
        this.hoveredItemId = hoveredItemId;
        this.focusedItemId = EMPTY_ID;
        this.tabbableItemId = ZERO_LEVEL_ZERO_ITEM_ID;
      }
    },
    getMenuWrapperClassName: function getMenuWrapperClassName() {
      return {
        "k-rtl": this.directionHolder.getIsDirectionRightToLeft()
      };
    },
    clearItemHoverAndLeaveRequestsIfApplicable: function clearItemHoverAndLeaveRequestsIfApplicable() {
      if (this.itemHoverRequest) {
        clearTimeout(this.itemHoverRequest);
        this.itemHoverRequest = null;
      }
      if (this.itemLeaveRequest) {
        clearTimeout(this.itemLeaveRequest);
        this.itemLeaveRequest = null;
      }
    },
    isItemWithDefaultClose: function isItemWithDefaultClose(itemId) {
      return !this.$props.customCloseItemIds || this.$props.customCloseItemIds.indexOf(itemId) === -1;
    },
    checkIsDirectionRightToLeft: function checkIsDirectionRightToLeft() {
      return this.$props.dir !== void 0 ? this.$props.dir === "rtl" : this.menuWrapperEl && getComputedStyle(this.menuWrapperEl).direction === "rtl";
    },
    prepareItems: function prepareItems() {
      var _a2 = prepareInputItemsForInternalWork.call(this, this.$props.items), items = _a2.items, inputItems = _a2.inputItems;
      this.currentItems = items;
      this.inputItems = inputItems;
    },
    dispatchSelectEventIfWired: function dispatchSelectEventIfWired(event, itemId) {
      this.$emit("select", {
        event,
        compontent: this,
        item: this.getInputItem(itemId),
        itemId
      });
    }
  }
};
var Menu = MenuVue2;

// node_modules/@progress/kendo-vue-layout/dist/es/splitter/SplitterPane.js
var allVue49 = vue_runtime_esm_bundler_exports;
var gh47 = allVue49.h;
var SplitterPaneVue2 = {
  name: "KendoSplitterPane",
  props: {
    orientation: {
      type: String,
      default: function _default() {
        return void 0;
      },
      validator: function validator16(value3) {
        return ["vertical", "horizontal"].includes(value3);
      }
    },
    overlay: Boolean,
    containsSplitter: Boolean,
    size: String,
    min: String,
    max: String,
    resizable: Boolean,
    collapsible: Boolean,
    collapsed: Boolean,
    scrollable: Boolean,
    keepMounted: Boolean,
    content: [Object, Function, String]
  },
  setup: !gh47 ? void 0 : function() {
    var v3 = !!gh47;
    return {
      v3
    };
  },
  render: function render35(createElement) {
    var _a2;
    var h = gh47 || createElement;
    var _b = this.$props, size = _b.size, collapsed = _b.collapsed, overlay = _b.overlay, containsSplitter = _b.containsSplitter, collapsible = _b.collapsible, resizable = _b.resizable, scrollable = _b.scrollable, keepMounted = _b.keepMounted;
    var fixedSize2 = size && size.length > 0;
    var style = {
      flexBasis: size
    };
    var paneClasses = classNames("k-pane", (_a2 = {}, _a2["k-state-hidden"] = collapsed, _a2["hidden"] = collapsed, _a2["k-pane-flex"] = containsSplitter, _a2["k-pane-static"] = !resizable && !collapsible || fixedSize2, _a2["k-scrollable"] = scrollable, _a2));
    var content = getTemplate.call(this, {
      h,
      template: this.$props.content,
      defaultRendering: null
    });
    return h("div", {
      style,
      "class": paneClasses
    }, [!collapsed || keepMounted ? content : void 0, overlay ? h("div", {
      "class": "k-splitter-overlay k-overlay"
    }) : void 0]);
  }
};
var SplitterPane = SplitterPaneVue2;

// node_modules/@progress/kendo-vue-layout/dist/es/splitter/SplitterBar.js
var allVue50 = vue_runtime_esm_bundler_exports;
var gh48 = allVue50.h;
var SplitterBarVue2 = {
  name: "KendoSplitterBar",
  emits: {
    drag: null,
    toggle: null,
    keyboardresize: null
  },
  props: {
    orientation: {
      type: String,
      default: "vertical",
      validator: function validator17(value3) {
        return ["vertical", "horizontal"].includes(value3);
      }
    },
    index: Number,
    prev: Object,
    next: Object
  },
  created: function created16() {
    this.draggable = null;
  },
  computed: {
    isStatic: function isStatic() {
      var _a2 = this.$props, prev = _a2.prev, next = _a2.next;
      var betweenResizablePanes = prev.resizable && next.resizable;
      var nearCollapsiblePane = prev.collapsible || next.collapsible;
      return !betweenResizablePanes && !nearCollapsiblePane;
    },
    isDraggable: function isDraggable() {
      var _a2 = this.$props, prev = _a2.prev, next = _a2.next;
      var betweenResizablePanes = prev.resizable && next.resizable;
      var nearCollapsedPane = prev.collapsed || next.collapsed;
      return !!betweenResizablePanes && !nearCollapsedPane;
    },
    isHorizontal: function isHorizontal() {
      return this.$props.orientation === "horizontal";
    }
  },
  data: function data11() {
    return {
      focused: false
    };
  },
  mounted: function mounted9() {
    if (this.$el) {
      this.draggable = this.$refs.draggable;
    }
  },
  setup: !gh48 ? void 0 : function() {
    var v3 = !!gh48;
    return {
      v3
    };
  },
  render: function render36(createElement) {
    var _this2 = this;
    var _a2;
    var _this = this;
    var h = gh48 || createElement;
    var isDraggable2 = this.isDraggable;
    var isStatic2 = this.isStatic;
    var isHorizontal2 = this.isHorizontal;
    var barClasses = classNames("k-splitbar", (_a2 = {}, _a2["k-state-focused"] = this.focused, _a2["k-splitbar-horizontal"] = isHorizontal2, _a2["k-splitbar-vertical"] = !isHorizontal2, _a2["k-splitbar-draggable-horizontal"] = isHorizontal2 && isDraggable2, _a2["k-splitbar-draggable-vertical"] = !isHorizontal2 && isDraggable2, _a2["k-splitbar-static-horizontal"] = isHorizontal2 && isStatic2, _a2["k-splitbar-static-vertical"] = !isHorizontal2 && isStatic2, _a2));
    var previousArrowClass2 = this.previousArrowClass(isHorizontal2);
    var nextArrowClass2 = this.nextArrowClass(isHorizontal2);
    return h(Draggable, {
      onPress: function onPress(event) {
        return _this.onDrag(event, true, false);
      },
      on: this.v3 ? void 0 : {
        "press": function onPress(event) {
          return _this.onDrag(event, true, false);
        },
        "drag": function drag3(event) {
          return _this.onDrag(event, false, false);
        },
        "release": function release3(event) {
          return _this.onDrag(event, false, true);
        }
      },
      onDrag: function drag3(event) {
        return _this.onDrag(event, false, false);
      },
      onRelease: function release3(event) {
        return _this.onDrag(event, false, true);
      },
      ref: "draggable"
    }, this.v3 ? function() {
      return [h("div", {
        tabIndex: isStatic2 ? -1 : 0,
        attrs: _this2.v3 ? void 0 : {
          tabIndex: isStatic2 ? -1 : 0,
          role: "separator"
        },
        role: "separator",
        "class": barClasses,
        style: {
          touchAction: "none"
        },
        onFocusin: _this2.onFocus,
        on: _this2.v3 ? void 0 : {
          "focusin": _this2.onFocus,
          "focusout": _this2.onBlur,
          "dblclick": _this2.onToggle,
          "keydown": _this2.onKeyDown
        },
        onFocusout: _this2.onBlur,
        onDblclick: _this2.onToggle,
        onKeydown: _this2.onKeyDown
      }, [h("div", {
        "class": previousArrowClass2,
        onClick: _this2.onPrevToggle,
        on: _this2.v3 ? void 0 : {
          "click": _this2.onPrevToggle
        }
      }), h("div", {
        "class": "k-resize-handle"
      }), h("div", {
        "class": nextArrowClass2,
        onClick: _this2.onNextToggle,
        on: _this2.v3 ? void 0 : {
          "click": _this2.onNextToggle
        }
      })])];
    } : [h("div", {
      tabIndex: isStatic2 ? -1 : 0,
      attrs: _this2.v3 ? void 0 : {
        tabIndex: isStatic2 ? -1 : 0,
        role: "separator"
      },
      role: "separator",
      "class": barClasses,
      style: {
        touchAction: "none"
      },
      onFocusin: _this2.onFocus,
      on: _this2.v3 ? void 0 : {
        "focusin": _this2.onFocus,
        "focusout": _this2.onBlur,
        "dblclick": _this2.onToggle,
        "keydown": _this2.onKeyDown
      },
      onFocusout: _this2.onBlur,
      onDblclick: _this2.onToggle,
      onKeydown: _this2.onKeyDown
    }, [h("div", {
      "class": previousArrowClass2,
      onClick: _this2.onPrevToggle,
      on: _this2.v3 ? void 0 : {
        "click": _this2.onPrevToggle
      }
    }), h("div", {
      "class": "k-resize-handle"
    }), h("div", {
      "class": nextArrowClass2,
      onClick: _this2.onNextToggle,
      on: _this2.v3 ? void 0 : {
        "click": _this2.onNextToggle
      }
    })])]);
  },
  methods: {
    onDrag: function onDrag(data15, isFirst, isLast) {
      var event = data15;
      var index = this.$props.index;
      var element = this.draggable && this.draggable.element;
      if (!isLast && event) {
        event.originalEvent.preventDefault();
      }
      if (element && !this.isStatic && this.isDraggable) {
        this.$emit("drag", event, element, index, isFirst, isLast);
      }
    },
    onFocus: function onFocus() {
      this.focused = true;
    },
    onBlur: function onBlur() {
      this.focused = false;
    },
    onToggle: function onToggle(event) {
      var _a2 = this.$props, index = _a2.index, prev = _a2.prev, next = _a2.next;
      if (prev.collapsible || next.collapsible) {
        this.$emit("toggle", prev.collapsible ? index : index + 1, event);
      }
    },
    onPrevToggle: function onPrevToggle(event) {
      var _a2 = this.$props, index = _a2.index, prev = _a2.prev;
      if (prev.collapsible) {
        this.$emit("toggle", index, event);
      }
    },
    onNextToggle: function onNextToggle(event) {
      var _a2 = this.$props, index = _a2.index, next = _a2.next;
      if (next.collapsible) {
        this.$emit("toggle", index + 1, event);
      }
    },
    onKeyDown: function onKeyDown4(event) {
      var _this = this;
      var keyCode = event && event.keyCode;
      var isHorizontal2 = this.isHorizontal;
      var index = this.$props.index;
      var element = this.draggable && this.draggable.element;
      var onKeyboardResize = function onKeyboardResize2(el, idx, offset) {
        event.preventDefault();
        _this.$emit("keyboardresize", el, idx, offset, event);
      };
      if (!element) {
        return;
      }
      if (keyCode === Keys.enter) {
        event.preventDefault();
        this.onToggle(event);
      } else if (this.isDraggable) {
        if (isHorizontal2 && keyCode === Keys.left) {
          onKeyboardResize(element, index, -10);
        } else if (isHorizontal2 && keyCode === Keys.right) {
          onKeyboardResize(element, index, 10);
        } else if (!isHorizontal2 && keyCode === Keys.up) {
          onKeyboardResize(element, index, -10);
        } else if (!isHorizontal2 && keyCode === Keys.down) {
          onKeyboardResize(element, index, 10);
        }
      }
    },
    previousArrowClass: function previousArrowClass(isHorizontal2) {
      var _a2;
      var prev = this.$props.prev;
      var isCollapsible = prev.collapsible;
      var isCollapsed = prev.collapsed;
      return classNames("k-icon", (_a2 = {}, _a2["k-hidden"] = !isCollapsible, _a2["k-collapse-prev"] = isCollapsible, _a2["k-i-arrow-60-left"] = isCollapsible && isHorizontal2 && !isCollapsed, _a2["k-i-arrow-60-right"] = isCollapsible && isHorizontal2 && isCollapsed, _a2["k-i-arrow-60-up"] = isCollapsible && !isHorizontal2 && !isCollapsed, _a2["k-i-arrow-60-down"] = isCollapsible && !isHorizontal2 && isCollapsed, _a2));
    },
    nextArrowClass: function nextArrowClass(isHorizontal2) {
      var _a2;
      var next = this.$props.next;
      var isCollapsible = next.collapsible;
      var isCollapsed = next.collapsed;
      return classNames("k-icon", (_a2 = {}, _a2["k-hidden"] = !isCollapsible, _a2["k-collapse-next"] = isCollapsible, _a2["k-i-arrow-60-right"] = isCollapsible && isHorizontal2 && !isCollapsed, _a2["k-i-arrow-60-left"] = isCollapsible && isHorizontal2 && isCollapsed, _a2["k-i-arrow-60-down"] = isCollapsible && !isHorizontal2 && !isCollapsed, _a2["k-i-arrow-60-up"] = isCollapsible && !isHorizontal2 && isCollapsed, _a2));
    }
  }
};
var SplitterBar = SplitterBarVue2;

// node_modules/@progress/kendo-vue-layout/dist/es/splitter/Splitter.js
var __assign7 = function() {
  __assign7 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s) {
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
      }
    }
    return t;
  };
  return __assign7.apply(this, arguments);
};
var allVue51 = vue_runtime_esm_bundler_exports;
var gh49 = allVue51.h;
var PANE_DEFAULTS = {
  collapsible: false,
  collapsed: false,
  resizable: true,
  scrollable: true
};
var DOUBLE_CLICK_WAIT_TIME = 150;
var SplitterVue2 = {
  name: "KendoSplitter",
  props: {
    orientation: {
      type: String,
      default: "horizontal",
      validator: function validator18(value3) {
        return ["vertical", "horizontal"].includes(value3);
      }
    },
    panes: Array,
    defaultPanes: Array
  },
  computed: {
    isControlledState: function isControlledState() {
      return this.$props.panes !== void 0;
    },
    computedPanes: function computedPanes() {
      return this.isControlledState ? this.$props.panes : this.currentPanes;
    },
    isRtl: function isRtl4() {
      return this.$el && getComputedStyle(this.$el).direction === "rtl" || false;
    }
  },
  created: function created17() {
    validatePackage2(packageMetadata2);
  },
  data: function data12() {
    return {
      isDragging: false,
      dragIndex: void 0,
      startTime: 0,
      originalX: 0,
      originalY: 0,
      originalPrevSize: 0,
      originalNextSize: 0,
      currentPanes: this.$props.defaultPanes || []
    };
  },
  setup: !gh49 ? void 0 : function() {
    var v3 = !!gh49;
    return {
      v3
    };
  },
  render: function render37(createElement) {
    var h = gh49 || createElement;
    var panesOptions2 = this.panesOptions();
    var className = classNames("k-widget", "k-splitter", "k-splitter-flex", "k-splitter-" + this.orientation);
    this.validatePanes(panesOptions2);
    var mapSplitterPanes = function mapSplitterPanes2(panes) {
      return panes.map(function(pane, index) {
        var content = templateRendering.call(this, pane.content, getListeners.call(this));
        var splitterBar;
        var paneKey = index * 2;
        var barKey = paneKey + 1;
        if (index + 1 < panes.length) {
          var next = panes[index + 1];
          splitterBar = h(SplitterBar, {
            key: barKey,
            index,
            attrs: this.v3 ? void 0 : {
              index,
              orientation: this.orientation,
              prev: pane,
              next
            },
            orientation: this.orientation,
            prev: pane,
            next,
            onDrag: this.onBarDragResize,
            on: this.v3 ? void 0 : {
              "drag": this.onBarDragResize,
              "toggle": this.onBarToggle,
              "keyboardresize": this.onBarKeyboardResize
            },
            onToggle: this.onBarToggle,
            onKeyboardresize: this.onBarKeyboardResize
          });
        }
        var splitterPane = h(SplitterPane, {
          key: paneKey,
          containsSplitter: pane.containsSplitter,
          attrs: this.v3 ? void 0 : {
            containsSplitter: pane.containsSplitter,
            size: pane.size,
            min: pane.min,
            max: pane.max,
            resizable: pane.resizable,
            collapsible: pane.collapsible,
            collapsed: pane.collapsed,
            scrollable: pane.scrollable,
            keepMounted: pane.keepMounted,
            content
          },
          size: pane.size,
          min: pane.min,
          max: pane.max,
          resizable: pane.resizable,
          collapsible: pane.collapsible,
          collapsed: pane.collapsed,
          scrollable: pane.scrollable,
          keepMounted: pane.keepMounted,
          content
        });
        return [splitterPane, splitterBar];
      }, this);
    };
    return h("div", {
      "class": className
    }, [mapSplitterPanes.call(this, panesOptions2)]);
  },
  methods: {
    validatePanes: function validatePanes(panesOptions2) {
      var withoutSize = panesOptions2.filter(function(pane) {
        return pane.size === void 0;
      });
      if (!withoutSize.length) {
        throw new Error("The Splitter should have at least one pane without a set size.");
      }
    },
    mapPaneOptions: function mapPaneOptions(panes) {
      var orientation = this.orientation;
      var paneOptions = [];
      for (var index = 0; index < panes.length; index++) {
        var overlay = false;
        if (this.isDragging && this.dragIndex !== void 0) {
          overlay = this.dragIndex === index || this.dragIndex + 1 === index;
        }
        paneOptions.push(__assign7(__assign7(__assign7({}, PANE_DEFAULTS), {
          orientation,
          overlay
        }), panes[index]));
      }
      return paneOptions;
    },
    onBarToggle: function onBarToggle(index, event) {
      var panesOptions2 = this.panesOptions();
      var updatedState = panesOptions2.map(function(pane, idx) {
        var paneProps = pane;
        if (idx === index) {
          return __assign7(__assign7({}, paneProps), {
            collapsed: !pane.collapsed
          });
        } else {
          return __assign7({}, paneProps);
        }
      });
      this.$emit("change", {
        newState: updatedState,
        isLast: true,
        nativeEvent: event
      });
    },
    onBarDragResize: function onBarDragResize(event, barElement, index, isFirst, isLast) {
      var time = new Date().getTime();
      var pageX = event.pageX, pageY = event.pageY;
      var _a2 = this.surroudingPanes(barElement), prevElement = _a2.prevElement, nextElement = _a2.nextElement;
      if (!prevElement || !nextElement) {
        return;
      }
      if (isFirst) {
        this.isDragging = true;
        this.dragIndex = index;
        this.startTime = time;
        this.originalX = pageX;
        this.originalY = pageY;
        this.originalPrevSize = this.elementSize(prevElement);
        this.originalNextSize = this.elementSize(nextElement);
        return;
      }
      var _b = this.$data, originalPrevSize = _b.originalPrevSize, originalNextSize = _b.originalNextSize, startTime = _b.startTime, originalX = _b.originalX, originalY = _b.originalY;
      if (!isFirst && time - startTime < DOUBLE_CLICK_WAIT_TIME) {
        if (isLast) {
          this.resetDragState();
        }
        return;
      }
      var delta;
      if (this.orientation === "vertical") {
        delta = pageY - originalY;
      } else if (this.isRtl) {
        delta = originalX - pageX;
      } else {
        delta = pageX - originalX;
      }
      this.resize(index, index + 1, originalPrevSize, originalNextSize, delta, isLast, event);
      if (isLast) {
        this.resetDragState();
      }
    },
    onBarKeyboardResize: function onBarKeyboardResize(barElement, index, delta, event) {
      var _a2 = this.surroudingPanes(barElement), prevElement = _a2.prevElement, nextElement = _a2.nextElement;
      var originalPrevSize = this.elementSize(prevElement);
      var originalNextSize = this.elementSize(nextElement);
      this.resize(index, index + 1, originalPrevSize, originalNextSize, delta, true, event);
    },
    surroudingPanes: function surroudingPanes(barElement) {
      return {
        prevElement: barElement.previousElementSibling,
        nextElement: barElement.nextElementSibling
      };
    },
    containerSize: function containerSize() {
      if (!this.$el) {
        return 0;
      }
      return this.elementSize(this.$el, true);
    },
    isPercent: function isPercent(size) {
      return /%$/.test(size);
    },
    toPixels: function toPixels(size, splitterSize) {
      var result = parseInt(size, 10);
      if (this.isPercent(size)) {
        result = splitterSize * result / 100;
      }
      return result;
    },
    panesOptions: function panesOptions() {
      return this.mapPaneOptions(this.computedPanes);
    },
    resetDragState: function resetDragState() {
      this.isDragging = false;
      this.dragIndex = void 0;
      this.startTime = 0;
      this.originalX = 0;
      this.originalY = 0;
      this.originalPrevSize = 0;
      this.originalNextSize = 0;
    },
    elementSize: function elementSize(el, isContainer) {
      var sizeType = isContainer ? "client" : "offset";
      if (this.orientation === "vertical") {
        return el[sizeType + "Height"];
      } else {
        return el[sizeType + "Width"];
      }
    },
    clamp: function clamp(min, max, v) {
      return Math.min(max, Math.max(min, v));
    },
    fixedSize: function fixedSize(size) {
      return size && size.length > 0;
    },
    resize: function resize(prevIndex, nextIndex, originalPrevSize, originalNextSize, delta, isLast, event) {
      var _this = this;
      var panesOptions2 = this.panesOptions();
      var prevOptions = panesOptions2[prevIndex];
      var nextOptions = panesOptions2[nextIndex];
      var total = originalPrevSize + originalNextSize;
      var splitterSize = this.containerSize();
      var px = function px2(s) {
        return _this.toPixels(s, splitterSize);
      };
      var prevDragState = {
        index: prevIndex,
        initialSize: originalPrevSize,
        min: px(prevOptions.min) || total - px(nextOptions.max) || 0,
        max: px(prevOptions.max) || total - px(nextOptions.min) || total
      };
      var nextDragState = {
        index: nextIndex,
        initialSize: originalNextSize,
        min: px(nextOptions.min) || total - px(prevOptions.max) || 0,
        max: px(nextOptions.max) || total - px(prevOptions.min) || total
      };
      var resize2 = function resize3(paneState, change) {
        var pane = panesOptions2[paneState.index];
        var newSize = _this.clamp(paneState.min, paneState.max, paneState.initialSize + change);
        if (_this.isPercent(pane.size || "")) {
          return 100 * newSize / splitterSize + "%";
        } else {
          return newSize + "px";
        }
      };
      var prevSize;
      var nextSize;
      if (this.fixedSize(prevOptions.size) && this.fixedSize(nextOptions.size)) {
        prevSize = resize2(prevDragState, delta);
        nextSize = resize2(nextDragState, -delta);
      } else if (nextOptions.collapsible || this.fixedSize(nextOptions.size)) {
        nextSize = resize2(nextDragState, -delta);
      } else {
        prevSize = resize2(prevDragState, delta);
      }
      var updatedState = panesOptions2.map(function(pane, idx) {
        var paneProps = pane;
        if (idx === prevIndex) {
          return __assign7(__assign7({}, paneProps), {
            size: prevSize
          });
        } else if (idx === nextIndex) {
          return __assign7(__assign7({}, paneProps), {
            size: nextSize
          });
        } else {
          return __assign7({}, paneProps);
        }
      });
      this.panesDuringOnChange = updatedState;
      if (!this.isControlledState) {
        this.currentPanes = updatedState;
      }
      this.$emit("change", {
        newState: updatedState,
        isLast,
        nativeEvent: event
      });
      this.panesDuringOnChange = void 0;
    }
  }
};
var Splitter = SplitterVue2;

// node_modules/@progress/kendo-vue-layout/dist/es/panelbar/PanelBarGroup.js
var __assign8 = function() {
  __assign8 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s) {
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
      }
    }
    return t;
  };
  return __assign8.apply(this, arguments);
};
var allVue52 = vue_runtime_esm_bundler_exports;
var gh50 = allVue52.h;
var PanelBarGroupVue2 = {
  name: "KendoPanelBarGroup",
  props: {
    item: Object,
    items: Array,
    animation: Boolean,
    expanded: Boolean,
    disabled: Boolean,
    keepItemsMounted: Boolean,
    uniquePrivateKey: [String, Number],
    content: Object
  },
  data: function data13() {
    return {
      show: this.$props.expanded
    };
  },
  setup: !gh50 ? void 0 : function() {
    var v3 = !!gh50;
    return {
      v3
    };
  },
  render: function render38(createElement) {
    var h = gh50 || createElement;
    var _a2 = this.$props, item = _a2.item, items = _a2.items, uniquePrivateKey = _a2.uniquePrivateKey, disabled = _a2.disabled, expanded = _a2.expanded, animation = _a2.animation, keepItemsMounted = _a2.keepItemsMounted;
    var animationStyle = {
      display: "block"
    };
    var content = getTemplate.call(this, {
      h,
      template: this.$props.content,
      defaultRendering: null,
      additionalProps: __assign8(__assign8({}, this.$props), {
        show: this.show
      })
    });
    var opened = !disabled && expanded;
    var itemContent = opened || keepItemsMounted ? items ? h("ul", {
      role: "group",
      attrs: this.v3 ? void 0 : {
        role: "group"
      },
      "class": "k-panelbar-group k-panel k-group",
      style: {
        display: keepItemsMounted ? this.$data.show ? "block" : "none" : "block"
      }
    }, [items.map(function(currentItem) {
      return h(PanelBarItem, __assign8(__assign8({
        props: this.v3 ? void 0 : __assign8(__assign8({}, currentItem), {
          item
        })
      }, currentItem), {
        item
      }));
    }, this)]) : this.$props.content ? h("div", {
      "class": "k-panelbar-content k-content"
    }, [content]) : null : null;
    return (animation !== void 0 ? animation : true) && !disabled ? h(Reveal, {
      appear: opened,
      attrs: this.v3 ? void 0 : {
        appear: opened,
        transitionEnterDuration: 200,
        transitionExitDuration: 200,
        unmountOnExit: !keepItemsMounted
      },
      transitionEnterDuration: 200,
      transitionExitDuration: 200,
      key: uniquePrivateKey + "_animation",
      style: animationStyle,
      unmountOnExit: !keepItemsMounted,
      onEntering: this.handleEntering,
      on: this.v3 ? void 0 : {
        "entering": this.handleEntering,
        "exited": this.handleExited
      },
      onExited: this.handleExited
    }, this.v3 ? function() {
      return [itemContent];
    } : [itemContent]) : itemContent;
  },
  methods: {
    handleEntering: function handleEntering() {
      if (this.keepItemsMounted) {
        this.show = true;
      }
    },
    handleExited: function handleExited() {
      if (this.keepItemsMounted) {
        this.show = false;
      }
    }
  }
};
var PanelBarGroup = PanelBarGroupVue2;

// node_modules/@progress/kendo-vue-layout/dist/es/panelbar/PanelBarItem.js
var __assign9 = function() {
  __assign9 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s) {
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
      }
    }
    return t;
  };
  return __assign9.apply(this, arguments);
};
var allVue53 = vue_runtime_esm_bundler_exports;
var gh51 = allVue53.h;
var PanelBarItemVue2 = {
  name: "KendoPanelBarItem",
  props: {
    item: Object,
    items: Array,
    animation: Boolean,
    expanded: Boolean,
    disabled: Boolean,
    selected: Boolean,
    level: Number,
    title: {
      type: [String, Object, Function],
      default: function _default2() {
        return "Untitled";
      }
    },
    id: [String, Number],
    focused: Boolean,
    keepItemsMounted: Boolean,
    uniquePrivateKey: [String, Number],
    parentUniquePrivateKey: Array,
    parentExpanded: Boolean,
    headerClassName: String,
    iconClass: String,
    imageUrl: String,
    icon: String,
    content: Object,
    header: Object
  },
  inject: {
    dispatchItemSelect: {
      default: null
    }
  },
  setup: !gh51 ? void 0 : function() {
    var v3 = !!gh51;
    return {
      v3
    };
  },
  render: function render39(createElement) {
    var _a2;
    var h = gh51 || createElement;
    var _b = this.$props, id = _b.id, item = _b.item, icon = _b.icon, items = _b.items, content = _b.content, title = _b.title, uniquePrivateKey = _b.uniquePrivateKey, disabled = _b.disabled, selected2 = _b.selected, focused2 = _b.focused, expanded = _b.expanded, className = _b.className, level = _b.level, headerClassName = _b.headerClassName, animation = _b.animation, keepItemsMounted = _b.keepItemsMounted;
    var hasContent = !!items || content;
    var panelBarItemClassName = classNames("k-item", {
      "k-panelbar-header": level === 0,
      "k-panelbar-item": level !== 0,
      "k-state-expanded": expanded && hasContent
    }, "k-level-" + level, className);
    var panelBarLinkClassName = classNames("k-link", {
      "k-state-selected": !disabled && selected2,
      "k-state-focus": focused2,
      "k-state-disabled": disabled
    }, headerClassName);
    var panelBarItemArrowClassName = classNames("k-panelbar-toggle", "k-icon", (_a2 = {}, _a2["k-i-arrow-chevron-up"] = expanded && hasContent, _a2["k-panelbar-collapse"] = expanded && hasContent, _a2["k-i-arrow-chevron-down"] = !expanded && hasContent, _a2["k-panelbar-expand"] = !expanded && hasContent, _a2));
    var iconElement = function iconElement2() {
      if (this.imageUrl) {
        return h("img", {
          role: "presentation",
          attrs: this.v3 ? void 0 : {
            role: "presentation",
            src: this.imageUrl
          },
          "class": "k-panelbar-item-icon k-image",
          src: this.imageUrl
        });
      } else if (icon) {
        var iconClasses = classNames("k-panelbar-item-icon", "k-icon", "k-i-" + icon);
        return h("span", {
          role: "presentation",
          attrs: this.v3 ? void 0 : {
            role: "presentation"
          },
          "class": iconClasses
        });
      } else if (this.iconClass) {
        return h("span", {
          role: "presentation",
          attrs: this.v3 ? void 0 : {
            role: "presentation"
          },
          "class": "k-panelbar-item-icon " + this.iconClass
        });
      }
      return null;
    };
    var iconRender = iconElement.call(this);
    var arrow = !disabled && (items || content) ? h("span", {
      "class": panelBarItemArrowClassName
    }) : null;
    var group = items || content ? h(PanelBarGroup, {
      items,
      attrs: this.v3 ? void 0 : {
        items,
        item,
        content,
        uniquePrivateKey,
        disabled,
        expanded,
        animation,
        keepItemsMounted
      },
      item,
      content,
      uniquePrivateKey,
      disabled,
      expanded,
      animation,
      keepItemsMounted
    }) : null;
    var header = getTemplate.call(this, {
      h,
      template: this.$props.header,
      defaultRendering: null,
      additionalProps: __assign9({}, this.$props)
    });
    return h("li", {
      id,
      attrs: this.v3 ? void 0 : {
        id,
        role: "treeitem",
        "aria-disabled": disabled,
        "aria-hidden": !disabled && !expanded,
        "aria-selected": !disabled && selected2,
        "aria-expanded": !disabled && expanded && hasContent
      },
      "class": panelBarItemClassName,
      role: "treeitem",
      "aria-disabled": disabled,
      "aria-hidden": !disabled && !expanded,
      "aria-selected": !disabled && selected2,
      "aria-expanded": !disabled && expanded && hasContent
    }, [h("span", {
      "class": panelBarLinkClassName,
      onClick: this.handleItemClick,
      on: this.v3 ? void 0 : {
        "click": this.handleItemClick
      }
    }, [iconRender, this.$props.header ? header : h("span", {
      "class": "k-panelbar-item-text"
    }, [title]), arrow]), group]);
  },
  methods: {
    handleItemClick: function handleItemClick() {
      var _a2 = this.$props, disabled = _a2.disabled, id = _a2.id;
      if (!disabled) {
        this.dispatchItemSelect({
          uniquePrivateKey: this.$props.uniquePrivateKey,
          id,
          target: this
        });
      }
    },
    childFactory: function childFactory(child) {
      return child;
    }
  }
};
var PanelBarItem = PanelBarItemVue2;

// node_modules/@progress/kendo-vue-layout/dist/es/panelbar/util.js
var __assign10 = function() {
  __assign10 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s) {
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
      }
    }
    return t;
  };
  return __assign10.apply(this, arguments);
};
var __spreadArrays = function() {
  for (var s = 0, i = 0, il = arguments.length; i < il; i++) {
    s += arguments[i].length;
  }
  for (var r = Array(s), k = 0, i = 0; i < il; i++) {
    for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++) {
      r[k] = a[j];
    }
  }
  return r;
};
var renderChildren = function renderChildren2(items, _a2) {
  var _b = _a2.animation, animation = _b === void 0 ? true : _b, _c = _a2.keepItemsMounted, keepItemsMounted = _c === void 0 ? false : _c, state = _a2.state, expanded = _a2.expanded, handleSelect3 = _a2.handleSelect, _d = _a2.parentExpanded, parentExpanded = _d === void 0 ? true : _d, _e = _a2.level, level = _e === void 0 ? 0 : _e, _f = _a2.parentPrivateKey, parentPrivateKey = _f === void 0 ? [] : _f;
  return items.map(function(child, idx) {
    var nestedChildren;
    var privateKey = getId(child, parentPrivateKey, idx);
    var content = templateRendering.call(this, child.content, getListeners.call(this));
    var header = templateRendering.call(this, child.header, getListeners.call(this));
    if (child.items) {
      var renderState = {
        animation,
        keepItemsMounted,
        state,
        expanded,
        handleSelect: handleSelect3,
        parentExpanded: (expanded || []).indexOf(privateKey) > -1,
        level: level + 1,
        parentPrivateKey: __spreadArrays(parentPrivateKey, [privateKey])
      };
      nestedChildren = renderChildren2.call(this, child.items, renderState);
    }
    return __assign10(__assign10({}, child), {
      animation: child.animation !== void 0 ? child.animation : animation,
      keepItemsMounted,
      id: child.id || "k-panelbar-item-default-" + privateKey,
      uniquePrivateKey: privateKey,
      parentUniquePrivateKey: parentPrivateKey,
      parentExpanded,
      level,
      expanded: (expanded || []).indexOf(privateKey) > -1,
      focused: state.currentFocused === privateKey && state.wrapperFocused,
      selected: state.currentSelected === privateKey,
      items: nestedChildren,
      content,
      header
    });
  }, this);
};
var getFirstId = function getFirstId2(props) {
  var firstItem = props.items[0];
  if (firstItem) {
    return getId(firstItem, [], 0);
  }
  return "";
};
var getInitialState = function getInitialState2(props, expandMode, result, parentExpanded, parentPrivateKey) {
  if (result === void 0) {
    result = {
      currentExpanded: props.expanded || [],
      currentSelected: props.selected || "",
      currentFocused: props.focused || "",
      wrapperFocused: false
    };
  }
  if (parentExpanded === void 0) {
    parentExpanded = true;
  }
  if (parentPrivateKey === void 0) {
    parentPrivateKey = [];
  }
  props.items.forEach(function(item, idx) {
    var privateKey = getId(item, parentPrivateKey, idx);
    if (!item.disabled && parentExpanded) {
      if (item.selected) {
        result.currentSelected = privateKey;
      }
      if (item.focused) {
        result.currentFocused = privateKey;
      }
      if (item.expanded) {
        if (expandMode === "multiple") {
          result.currentExpanded.push(privateKey);
        } else if (expandMode === "single") {
          result.currentExpanded = [privateKey];
        }
      }
      if (item.items) {
        result = getInitialState2(item, expandMode, result, !!item.expanded, __spreadArrays(parentPrivateKey, [privateKey]));
      }
    }
  });
  return result;
};
var getId = function getId2(child, parentPrivateKey, idx) {
  return child && child && child.id ? child.id : parentPrivateKey.length ? parentPrivateKey[parentPrivateKey.length - 1] + ("." + idx) : "." + idx;
};
function flatVisibleItems(data15, flattedItems) {
  if (flattedItems === void 0) {
    flattedItems = [];
  }
  (data15 || []).forEach(function(item) {
    if (!item.disabled) {
      flattedItems.push(item);
      if (item.expanded && item.children) {
        flatVisibleItems(item.children, flattedItems);
      }
    }
  });
  return flattedItems;
}
function flatChildren(children, flattenChildren) {
  if (flattenChildren === void 0) {
    flattenChildren = [];
  }
  children.forEach(function(child) {
    if (child && child && !child.disabled) {
      flattenChildren.push(child);
      if (child.items) {
        flatChildren(child.items, flattenChildren);
      }
    }
  });
  return flattenChildren;
}
function flatVisibleChildren(children, flattenVisibleChildren) {
  if (flattenVisibleChildren === void 0) {
    flattenVisibleChildren = [];
  }
  children.forEach(function(child) {
    if (child && (child.expanded || child.parentExpanded)) {
      flattenVisibleChildren.push(child);
      if (child.items) {
        flatVisibleChildren(child.items, flattenVisibleChildren);
      }
    }
  });
  return flattenVisibleChildren;
}
var isPresent = function isPresent2(value3) {
  return value3 !== null && value3 !== void 0;
};
var isArrayEqual = function isArrayEqual2(firstArray, secondArray) {
  if (firstArray.length !== secondArray.length) {
    return false;
  }
  return firstArray.every(function(ex, i) {
    return ex === secondArray[i];
  });
};

// node_modules/@progress/kendo-vue-layout/dist/es/panelbar/interfaces/NavigationAction.js
var NavigationAction;
(function(NavigationAction2) {
  NavigationAction2[NavigationAction2["Toggle"] = 0] = "Toggle";
  NavigationAction2[NavigationAction2["Next"] = 1] = "Next";
  NavigationAction2[NavigationAction2["Previous"] = 2] = "Previous";
})(NavigationAction || (NavigationAction = {}));

// node_modules/@progress/kendo-vue-layout/dist/es/panelbar/PanelBar.js
var __assign11 = function() {
  __assign11 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s) {
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
      }
    }
    return t;
  };
  return __assign11.apply(this, arguments);
};
var __spreadArrays2 = function() {
  for (var s = 0, i = 0, il = arguments.length; i < il; i++) {
    s += arguments[i].length;
  }
  for (var r = Array(s), k = 0, i = 0; i < il; i++) {
    for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++) {
      r[k] = a[j];
    }
  }
  return r;
};
var allVue54 = vue_runtime_esm_bundler_exports;
var gh52 = allVue54.h;
var PanelBarVue2 = {
  name: "KendoPanelBar",
  emits: {
    select: null,
    keydown: null
  },
  props: {
    animation: {
      type: Boolean,
      default: true
    },
    items: Array,
    dir: String,
    selected: String,
    expanded: {
      type: Array,
      default: void 0
    },
    focused: String,
    expandMode: {
      type: String,
      default: "multiple",
      validator: function validator19(value3) {
        return ["single", "multiple"].includes(value3);
      }
    },
    className: String,
    keepItemsMounted: Boolean
  },
  created: function created18() {
    this.activeDescendant = null;
    validatePackage2(packageMetadata2);
  },
  data: function data14() {
    var initialState = getInitialState(this.$props, this.expandMode);
    if (!initialState.currentFocused) {
      initialState.currentFocused = getFirstId(this.$props);
    }
    return initialState;
  },
  computed: {
    selectedItem: function selectedItem() {
      var _a2 = this.$props.selected, selected2 = _a2 === void 0 ? this.currentSelected : _a2;
      return selected2;
    },
    expandedItems: function expandedItems() {
      var expanded = this.$props.expanded !== void 0 ? this.$props.expanded || [] : this.currentExpanded;
      return expanded;
    },
    computedItems: function computedItems() {
      var state = __assign11(__assign11({
        currentExpanded: []
      }, this.$data), {
        selected: this.selectedItem
      });
      var renderState = {
        animation: this.$props.animation,
        keepItemsMounted: this.$props.keepItemsMounted,
        state,
        expanded: this.expandedItems,
        handleSelect: this.handleSelect
      };
      return renderChildren.call(this, this.items, renderState);
    }
  },
  provide: function provide7() {
    return {
      dispatchItemSelect: this.handleSelect
    };
  },
  setup: !gh52 ? void 0 : function() {
    var v3 = !!gh52;
    return {
      v3
    };
  },
  render: function render40(createElement) {
    var h = gh52 || createElement;
    var className = classNames("k-panelbar", this.$props.className);
    return h("ul", {
      dir: this.$props.dir,
      attrs: this.v3 ? void 0 : {
        dir: this.$props.dir,
        role: "tree",
        tabIndex: 0,
        "aria-activedescendant": this.activeDescendant
      },
      role: "tree",
      tabIndex: 0,
      onKeydown: this.handleKeyDown,
      on: this.v3 ? void 0 : {
        "keydown": this.handleKeyDown,
        "focus": this.handleWrapperFocus,
        "blur": this.handleWrapperBlur
      },
      onFocus: this.handleWrapperFocus,
      onBlur: this.handleWrapperBlur,
      "class": className,
      "aria-activedescendant": this.activeDescendant
    }, [this.computedItems.map(function(item) {
      return h(PanelBarItem, __assign11(__assign11({
        props: this.v3 ? void 0 : __assign11(__assign11({}, item), {
          item
        })
      }, item), {
        item
      }));
    }, this)]);
  },
  methods: {
    handleSelect: function handleSelect2(event) {
      this.onSelect(event);
      this.onFocus(event);
    },
    onSelect: function onSelect4(event) {
      var _this = this;
      var flattenChildren = flatChildren(this.computedItems);
      var selectedChild;
      var newExpanded;
      flattenChildren.forEach(function(child) {
        if (child.uniquePrivateKey === (event.uniquePrivateKey || _this.currentFocused)) {
          selectedChild = child;
        }
      });
      if (selectedChild) {
        switch (this.expandMode) {
          case "single":
            newExpanded = __spreadArrays2(selectedChild.parentUniquePrivateKey, [selectedChild.uniquePrivateKey]);
            if (isArrayEqual(this.expandedItems, newExpanded)) {
              if (selectedChild.parentUniquePrivateKey) {
                newExpanded = __spreadArrays2(selectedChild.parentUniquePrivateKey);
              } else {
                newExpanded = [];
              }
            }
            break;
          case "multiple":
            newExpanded = this.expandedItems.slice();
            var index = newExpanded.indexOf(selectedChild.uniquePrivateKey);
            index === -1 ? newExpanded.push(selectedChild.uniquePrivateKey) : newExpanded.splice(index, 1);
            break;
          default:
            newExpanded = this.expandedItems.slice();
            break;
        }
        this.currentSelected = selectedChild.uniquePrivateKey;
        this.currentExpanded = newExpanded;
        this.$emit("select", {
          target: selectedChild,
          expandedItems: newExpanded
        });
      }
    },
    onFocus: function onFocus2(event, step) {
      var _this = this;
      if (step === void 0) {
        step = 0;
      }
      var flattenChildren = flatVisibleChildren(this.computedItems);
      var focusedChild;
      flattenChildren.forEach(function(child, ixd) {
        if (child.uniquePrivateKey === (event.uniquePrivateKey || _this.currentFocused)) {
          var index = ixd + step < 0 ? 0 : ixd + step > flattenChildren.length ? flattenChildren.length - 1 : ixd + step;
          focusedChild = flattenChildren[index];
        }
      });
      if (focusedChild) {
        this.activeDescendant = focusedChild.id;
        this.currentFocused = focusedChild.uniquePrivateKey;
      }
    },
    onNavigate: function onNavigate(event, action) {
      var step;
      switch (action) {
        case NavigationAction.Previous:
          step = -1;
          this.onFocus(event, step);
          break;
        case NavigationAction.Next:
          step = 1;
          this.onFocus(event, step);
          break;
        case NavigationAction.Toggle:
          this.onSelect(event);
          break;
        default:
      }
    },
    nextTick: function nextTick(f) {
      this.nextTickId = window.setTimeout(function() {
        return f();
      });
    },
    handleWrapperFocus: function handleWrapperFocus() {
      clearTimeout(this.nextTickId);
      if (!this.wrapperFocused) {
        this.wrapperFocused = true;
      }
    },
    handleWrapperBlur: function handleWrapperBlur() {
      this.wrapperFocused = false;
    },
    handleKeyDown: function handleKeyDown4(event) {
      var rtl = this._element && getComputedStyle(this._element).direction === "rtl" || false;
      if (event.target === event.currentTarget) {
        var keyCode = event.keyCode;
        var action = void 0;
        switch (keyCode) {
          case Keys.left:
            action = !rtl ? NavigationAction.Previous : NavigationAction.Next;
            break;
          case Keys.up:
            action = NavigationAction.Previous;
            break;
          case Keys.right:
            action = !rtl ? NavigationAction.Next : NavigationAction.Previous;
            break;
          case Keys.down:
            action = NavigationAction.Next;
            break;
          case Keys.space:
          case Keys.enter:
            action = NavigationAction.Toggle;
            break;
          default:
            action = null;
            break;
        }
        if (action !== null) {
          event.preventDefault();
          this.onNavigate(event, action);
        }
      }
      this.$emit("keydown", event);
    }
  }
};
var PanelBar = PanelBarVue2;
export {
  Avatar,
  AvatarVue2,
  Card,
  CardActions,
  CardActionsVue2,
  CardBody,
  CardBodyVue2,
  CardFooter,
  CardFooterVue2,
  CardHeader,
  CardHeaderVue2,
  CardImage,
  CardImageVue2,
  CardSubtitle,
  CardSubtitleVue2,
  CardTitle,
  CardTitleVue2,
  CardVue2,
  Drawer,
  DrawerContent,
  DrawerContentVue2,
  DrawerItem,
  DrawerItemVue2,
  DrawerNavigation,
  DrawerNavigationVue2,
  DrawerVue2,
  Menu,
  MenuItemArrow,
  MenuItemArrowVue2,
  MenuItemLink,
  MenuItemLinkVue2,
  MenuVue2,
  PanelBar,
  PanelBarItem,
  PanelBarItemVue2,
  PanelBarVue2,
  Splitter,
  SplitterPane,
  SplitterPaneVue2,
  SplitterVue2,
  Step,
  StepVue2,
  Stepper,
  StepperVue2,
  TabStrip,
  TabStripContent,
  TabStripContentVue2,
  TabStripNavigation,
  TabStripNavigationItem,
  TabStripNavigationItemVue2,
  TabStripNavigationVue2,
  TabStripTab,
  TabStripTabVue2,
  TabStripVue2,
  downArrowClass,
  flatChildren,
  flatVisibleChildren,
  flatVisibleItems,
  getFirstId,
  getInitialState,
  isArrayEqual,
  isPresent,
  leftArrowClass,
  renderChildren,
  rightArrowClass
};
//# sourceMappingURL=@progress_kendo-vue-layout.js.map

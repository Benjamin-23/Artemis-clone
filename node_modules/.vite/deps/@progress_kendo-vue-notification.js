import {
  getDefaultSlots,
  validatePackage
} from "./chunk-SNA6L56D.js";
import "./chunk-UBBIHJ6M.js";
import {
  vue_runtime_esm_bundler_exports
} from "./chunk-7X7NEOA6.js";

// node_modules/@progress/kendo-vue-notification/dist/es/package-metadata.js
var packageMetadata = {
  name: "@progress/kendo-vue-notification",
  productName: "Kendo UI for Vue",
  productCodes: ["KENDOUIVUE", "KENDOUICOMPLETE"],
  publishDate: 1656415618,
  version: "",
  licensingDocsUrl: "https://www.telerik.com/kendo-vue-ui/my-license/?utm_medium=product&utm_source=kendovue&utm_campaign=kendo-ui-vue-purchase-license-keys-warning"
};

// node_modules/@progress/kendo-vue-notification/dist/es/Notification.js
var allVue = vue_runtime_esm_bundler_exports;
var gh = allVue.h;
var buttonTitle = "Close";
var NotificationVue2 = {
  name: "KendoNotification",
  props: {
    closable: {
      type: [Object, Boolean],
      default: function _default() {
        return false;
      }
    },
    dir: String,
    type: {
      type: Object,
      default: function _default2() {
        return {
          style: "none",
          icon: true
        };
      },
      validator: function validator(value) {
        return ["none", "success", "error", "warning", "info"].includes(value.style);
      }
    }
  },
  created: function created() {
    validatePackage(packageMetadata);
  },
  setup: !gh ? void 0 : function() {
    var v3 = !!gh;
    return {
      v3
    };
  },
  render: function render(createElement) {
    var h = gh || createElement;
    var defaultSlot = getDefaultSlots(this);
    var _a = this.$props, closable = _a.closable, type = _a.type;
    return h("div", {
      "class": "k-notification-container"
    }, [h("div", {
      "class": "k-widget k-notification" + (type.style === "none" ? "" : " k-notification-" + type.style) + (closable ? " k-notification-closable" : ""),
      style: this.$props.style
    }, [h("div", {
      "class": "k-notification-wrap"
    }, [type.icon && h("span", {
      "class": "k-icon k-i-" + type.style
    }), h("div", {
      "class": "k-notification-content"
    }, [defaultSlot]), closable && h("a", {
      "class": "k-icon k-i-close",
      title: buttonTitle,
      attrs: this.v3 ? void 0 : {
        title: buttonTitle
      },
      onClick: this.handleClick,
      on: this.v3 ? void 0 : {
        "click": this.handleClick
      }
    })])])]);
  },
  methods: {
    handleClick: function handleClick(event) {
      this.$emit("close", {
        component: this,
        event
      });
    }
  }
};
var Notification = NotificationVue2;

// node_modules/@progress/kendo-vue-notification/dist/es/NotificationGroup.js
var allVue2 = vue_runtime_esm_bundler_exports;
var gh2 = allVue2.h;
var NotificationGroupVue2 = {
  name: "KendoNotificationGroup",
  setup: !gh2 ? void 0 : function() {
    var v3 = !!gh2;
    return {
      v3
    };
  },
  render: function render2(createElement) {
    var h = gh2 || createElement;
    var defaultSlot = getDefaultSlots(this);
    return h("div", {
      "class": "k-notification-group",
      style: {
        alignItems: "center",
        flexWrap: "wrap"
      }
    }, [defaultSlot]);
  }
};
var NotificationGroup = NotificationGroupVue2;
export {
  Notification,
  NotificationGroup
};
//# sourceMappingURL=@progress_kendo-vue-notification.js.map

// @ts-ignore
import * as Vue from 'vue';
var allVue = Vue;
var gh = allVue.h;
import { packageMetadata } from './package-metadata';
import { validatePackage, getDefaultSlots } from '@progress/kendo-vue-common';
var buttonTitle = 'Close';
/**
 * @hidden
 */

var NotificationVue2 = {
  name: 'KendoNotification',
  props: {
    closable: {
      type: [Object, Boolean],
      default: function _default() {
        return false;
      }
    },
    dir: String,
    type: {
      type: Object,
      default: function _default() {
        return {
          style: 'none',
          icon: true
        };
      },
      validator: function validator(value) {
        return ['none', 'success', 'error', 'warning', 'info'].includes(value.style);
      }
    }
  },
  created: function created() {
    validatePackage(packageMetadata);
  },
  // @ts-ignore
  setup: !gh ? undefined : function () {
    var v3 = !!gh;
    return {
      v3: v3
    };
  },
  // @ts-ignore
  render: function render(createElement) {
    var h = gh || createElement;
    var defaultSlot = getDefaultSlots(this);
    var _a = this.$props,
        closable = _a.closable,
        type = _a.type;
    return h("div", {
      "class": "k-notification-container"
    }, [h("div", {
      "class": 'k-widget k-notification' + (type.style === 'none' ? '' : " k-notification-" + type.style) + (closable ? ' k-notification-closable' : ''),
      style: this.$props.style
    }, [h("div", {
      "class": "k-notification-wrap"
    }, [type.icon && h("span", {
      "class": "k-icon k-i-" + type.style
    }), h("div", {
      "class": "k-notification-content"
    }, [defaultSlot]), closable && h("a", {
      "class": "k-icon k-i-close",
      title: buttonTitle,
      attrs: this.v3 ? undefined : {
        title: buttonTitle
      },
      onClick: this.handleClick,
      on: this.v3 ? undefined : {
        "click": this.handleClick
      }
    })])])]);
  },
  methods: {
    handleClick: function handleClick(event) {
      this.$emit('close', {
        component: this,
        event: event
      });
    }
  }
};
/**
 * Represents the [Kendo UI for Vue Native Notification component]({% slug overview_notification %}).
 *
 *
 * ### props <span class='code'>Readonly&lt;[NotificationProps]({% slug api_notification_notificationprops %})</span>
 * The props of the Notification component.
 *
 */

var Notification = NotificationVue2;
export { Notification, NotificationVue2 };
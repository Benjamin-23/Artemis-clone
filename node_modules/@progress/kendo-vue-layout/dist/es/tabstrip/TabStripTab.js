// @ts-ignore
import * as Vue from 'vue';
var allVue = Vue;
var gh = allVue.h;
var ref = allVue.ref;
var inject = allVue.inject;
import { guid, getDefaultSlots, templateRendering, getListeners } from '@progress/kendo-vue-common';
/**
 * @hidden
 */

var TabStripTabVue2 = {
  name: 'KendoTabStripTab',
  props: {
    disabled: Boolean,
    contentClassName: String,
    title: String,
    titleRender: [String, Function, Object]
  },
  inject: {
    addRenderTitle: {
      default: null
    },
    addTab: {
      default: null
    },
    removeTab: {
      default: null
    }
  },
  created: function created() {
    this.tabId = guid();
    this.addTab({
      title: this.$props.title,
      id: this.tabId,
      disabled: this.$props.disabled,
      contentClassName: this.$props.contentClassName
    });
  },
  destroyed: !!gh ? undefined : function () {
    this.removeTab(this.tabId);
  },
  // @ts-ignore
  unmounted: function unmounted() {
    this.removeTab(this.tabId);
  },
  // @ts-ignore
  setup: !gh ? undefined : function () {
    var v3 = !!gh;
    return {
      v3: v3
    };
  },
  render: function render(createElement) {
    var h = gh || createElement;
    var titleRender = this.$props.titleRender ? templateRendering.call(this, this.$props.titleRender, getListeners.call(this)) : null;

    if (titleRender) {
      this.addRenderTitle(this.tabId, titleRender);
    }

    return h("div", [getDefaultSlots(this)]);
  }
};
/**
 * @hidden
 */

var TabStripTab = TabStripTabVue2;
export { TabStripTab, TabStripTabVue2 };
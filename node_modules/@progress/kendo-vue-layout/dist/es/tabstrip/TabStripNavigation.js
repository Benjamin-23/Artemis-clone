// @ts-ignore
import * as Vue from 'vue';
var allVue = Vue;
var gh = allVue.h;
var ref = allVue.ref;
var inject = allVue.inject;
import { TabStripNavigationItem } from './TabStripNavigationItem';
/**
 * @hidden
 */

var times = function times(count) {
  return Array.apply(null, Array(count));
};
/**
 * @hidden
 */


var TabStripNavigationVue2 = {
  name: 'KendoTabStripNavigation',
  // @ts-ignore
  emits: {
    select: null,
    keydown: null
  },
  props: {
    tabs: Array,
    selected: Number,
    tabIndex: Number,
    tabPosition: String
  },
  computed: {
    wrapperNavClasses: {
      get: function get() {
        return {
          'k-tabstrip-items-wrapper': true,
          'k-hstack': this.$props.tabPosition === 'top' || this.$props.tabPosition === 'bottom',
          'k-vstack': this.$props.tabPosition === 'left' || this.$props.tabPosition === 'right'
        };
      }
    },
    navClasses: {
      get: function get() {
        return {
          'k-tabstrip-items': true,
          'k-reset': true
        };
      }
    }
  },
  // @ts-ignore
  setup: !gh ? undefined : function () {
    var v3 = !!gh;
    return {
      v3: v3
    };
  },
  render: function render(createElement) {
    var h = gh || createElement;
    var _a = this.$props,
        tabs = _a.tabs,
        selected = _a.selected;
    var tabsCount = tabs.length;

    var renderTabs = function renderTabs() {
      return times(tabsCount).map(function (_, index, array) {
        return (// @ts-ignore function children
          h(TabStripNavigationItem, {
            key: index,
            active: selected === index,
            attrs: this.v3 ? undefined : {
              active: selected === index,
              disabled: tabs[index].disabled,
              index: index,
              title: tabs[index].title,
              titleRender: tabs[index].titleRender,
              first: index === 0,
              last: index === array.length - 1
            },
            disabled: tabs[index].disabled,
            index: index,
            title: tabs[index].title,
            titleRender: tabs[index].titleRender,
            first: index === 0,
            last: index === array.length - 1,
            onSelect: this.onSelect,
            on: this.v3 ? undefined : {
              "select": this.onSelect
            }
          })
        );
      }, this);
    };

    return h("div", {
      "class": this.wrapperNavClasses
    }, [h("ul", {
      "class": this.navClasses,
      role: 'tablist',
      attrs: this.v3 ? undefined : {
        role: 'tablist',
        tabIndex: this.$props.tabIndex
      },
      tabIndex: this.$props.tabIndex,
      onKeydown: this.onKeyDown,
      on: this.v3 ? undefined : {
        "keydown": this.onKeyDown
      }
    }, [renderTabs.call(this)])]);
  },
  methods: {
    onKeyDown: function onKeyDown(e) {
      this.$emit('keydown', e);
    },
    onSelect: function onSelect(idx) {
      this.$emit('select', idx);
    }
  }
};
/**
 * @hidden
 */

var TabStripNavigation = TabStripNavigationVue2;
export { TabStripNavigation, TabStripNavigationVue2 };
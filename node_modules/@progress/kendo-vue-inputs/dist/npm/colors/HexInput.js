"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.HexInputVue2 = exports.HexInput = void 0; // @ts-ignore

var Vue = require("vue");

var allVue = Vue;
var gh = allVue.h;
var isV3 = allVue.version[0] === '3';

var color_parser_1 = require("./utils/color-parser");

var misc_1 = require("./utils/misc");

var Input_1 = require("../input/Input");
/**
 * @hidden
 */


var HexInputVue2 = {
  name: 'KendoHexInput',
  props: {
    hex: String,
    disabled: Boolean
  },
  data: function data() {
    return {
      hex: this.$props.hex,
      originalHex: this.$props.hex
    };
  },
  // @ts-ignore
  setup: !isV3 ? undefined : function () {
    var v3 = !!isV3;
    return {
      v3: v3
    };
  },
  // @ts-ignore
  render: function render(createElement) {
    var h = gh || createElement;
    return h(Input_1.Input, {
      value: this.hex,
      attrs: this.v3 ? undefined : {
        value: this.hex,
        disabled: this.$props.disabled
      },
      onChange: this.onChange,
      on: this.v3 ? undefined : {
        "change": this.onChange,
        "blur": this.onBlur
      },
      onBlur: this.onBlur,
      disabled: this.$props.disabled
    });
  },
  methods: {
    onChange: function onChange(event) {
      var hex = event.target.value;
      var value = color_parser_1.parseColor(hex, 'rgba');
      this.hex = hex;

      if (misc_1.isPresent(value)) {
        this.$props.onHexChange(hex, value, event);
      }
    },
    onBlur: function onBlur() {
      if (!misc_1.isPresent(color_parser_1.parseColor(this.hex, 'rgba'))) {
        this.hex = this.originalHex;
      }
    }
  }
};
exports.HexInputVue2 = HexInputVue2;
/**
 * @hidden
 */

var HexInput = HexInputVue2;
exports.HexInput = HexInput;